/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./gen/proto/calculator_connect.js":
/*!*****************************************!*\
  !*** ./gen/proto/calculator_connect.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CalculatorService: function() { return /* binding */ CalculatorService; }\n/* harmony export */ });\n/* harmony import */ var _calculator_pb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculator_pb.js */ \"./gen/proto/calculator_pb.js\");\n// @generated by protoc-gen-connect-es v1.6.1\n// @generated from file calculator.proto (package calculator, syntax proto3)\n/* eslint-disable */ // @ts-nocheck\n\n\n/**\n * 计算器服务定义\n *\n * @generated from service calculator.CalculatorService\n */ const CalculatorService = {\n    typeName: \"calculator.CalculatorService\",\n    methods: {\n        /**\n     * 执行计算操作\n     *\n     * @generated from rpc calculator.CalculatorService.Calculate\n     */ calculate: {\n            name: \"Calculate\",\n            I: _calculator_pb_js__WEBPACK_IMPORTED_MODULE_0__.CalculateRequest,\n            O: _calculator_pb_js__WEBPACK_IMPORTED_MODULE_0__.CalculateResponse,\n            // kind: MethodKind.Unary,\n            kind: \"unary\"\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nZW4vcHJvdG8vY2FsY3VsYXRvcl9jb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNkNBQTZDO0FBQzdDLDRFQUE0RTtBQUM1RSxrQkFBa0IsR0FDbEIsY0FBYztBQUUyRDtBQUN6QjtBQUVoRDs7OztDQUlDLEdBQ00sTUFBTUcsb0JBQW9CO0lBQy9CQyxVQUFVO0lBQ1ZDLFNBQVM7UUFDUDs7OztLQUlDLEdBQ0RDLFdBQVc7WUFDVEMsTUFBTTtZQUNOQyxHQUFHUiwrREFBZ0JBO1lBQ25CUyxHQUFHUixnRUFBaUJBO1lBQ3BCLDBCQUEwQjtZQUMxQlMsTUFBSztRQUNQO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2dlbi9wcm90by9jYWxjdWxhdG9yX2Nvbm5lY3QuanM/NjQ3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZ2VuZXJhdGVkIGJ5IHByb3RvYy1nZW4tY29ubmVjdC1lcyB2MS42LjFcbi8vIEBnZW5lcmF0ZWQgZnJvbSBmaWxlIGNhbGN1bGF0b3IucHJvdG8gKHBhY2thZ2UgY2FsY3VsYXRvciwgc3ludGF4IHByb3RvMylcbi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBAdHMtbm9jaGVja1xuXG5pbXBvcnQgeyBDYWxjdWxhdGVSZXF1ZXN0LCBDYWxjdWxhdGVSZXNwb25zZSB9IGZyb20gXCIuL2NhbGN1bGF0b3JfcGIuanNcIjtcbmltcG9ydCB7IE1ldGhvZEtpbmQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5cbi8qKlxuICog6K6h566X5Zmo5pyN5Yqh5a6a5LmJXG4gKlxuICogQGdlbmVyYXRlZCBmcm9tIHNlcnZpY2UgY2FsY3VsYXRvci5DYWxjdWxhdG9yU2VydmljZVxuICovXG5leHBvcnQgY29uc3QgQ2FsY3VsYXRvclNlcnZpY2UgPSB7XG4gIHR5cGVOYW1lOiBcImNhbGN1bGF0b3IuQ2FsY3VsYXRvclNlcnZpY2VcIixcbiAgbWV0aG9kczoge1xuICAgIC8qKlxuICAgICAqIOaJp+ihjOiuoeeul+aTjeS9nFxuICAgICAqXG4gICAgICogQGdlbmVyYXRlZCBmcm9tIHJwYyBjYWxjdWxhdG9yLkNhbGN1bGF0b3JTZXJ2aWNlLkNhbGN1bGF0ZVxuICAgICAqL1xuICAgIGNhbGN1bGF0ZToge1xuICAgICAgbmFtZTogXCJDYWxjdWxhdGVcIixcbiAgICAgIEk6IENhbGN1bGF0ZVJlcXVlc3QsXG4gICAgICBPOiBDYWxjdWxhdGVSZXNwb25zZSxcbiAgICAgIC8vIGtpbmQ6IE1ldGhvZEtpbmQuVW5hcnksXG4gICAgICBraW5kOid1bmFyeScsXG4gICAgfSxcbiAgfVxufTtcblxuIl0sIm5hbWVzIjpbIkNhbGN1bGF0ZVJlcXVlc3QiLCJDYWxjdWxhdGVSZXNwb25zZSIsIk1ldGhvZEtpbmQiLCJDYWxjdWxhdG9yU2VydmljZSIsInR5cGVOYW1lIiwibWV0aG9kcyIsImNhbGN1bGF0ZSIsIm5hbWUiLCJJIiwiTyIsImtpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./gen/proto/calculator_connect.js\n"));

/***/ }),

/***/ "./gen/proto/calculator_pb.js":
/*!************************************!*\
  !*** ./gen/proto/calculator_pb.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CalculateRequest: function() { return /* binding */ CalculateRequest; },\n/* harmony export */   CalculateResponse: function() { return /* binding */ CalculateResponse; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n// @generated by hand-edit for bufbuild/protobuf 1.x compatibility\n\nclass CalculateRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Message {\n    static fromBinary(bytes, options) {\n        return new CalculateRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CalculateRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CalculateRequest().fromJsonString(jsonString, options);\n    }\n    constructor(data){\n        super();\n        this.firstNumber = 0;\n        this.secondNumber = 0;\n        this.operator = \"\";\n        _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n}\n_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setTypeName(CalculateRequest, \"calculator.CalculateRequest\");\nclass CalculateResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Message {\n    static fromBinary(bytes, options) {\n        return new CalculateResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CalculateResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CalculateResponse().fromJsonString(jsonString, options);\n    }\n    constructor(data){\n        super();\n        this.result = 0;\n        this.error = \"\";\n        _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n}\n_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setTypeName(CalculateResponse, \"calculator.CalculateResponse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9nZW4vcHJvdG8vY2FsY3VsYXRvcl9wYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrRUFBa0U7QUFDYjtBQUU5QyxNQUFNRSx5QkFBeUJGLHVEQUFPQTtJQVMzQyxPQUFPRyxXQUFXQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNoQyxPQUFPLElBQUlILG1CQUFtQkMsVUFBVSxDQUFDQyxPQUFPQztJQUNsRDtJQUVBLE9BQU9DLFNBQVNDLFNBQVMsRUFBRUYsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSUgsbUJBQW1CSSxRQUFRLENBQUNDLFdBQVdGO0lBQ3BEO0lBRUEsT0FBT0csZUFBZUMsVUFBVSxFQUFFSixPQUFPLEVBQUU7UUFDekMsT0FBTyxJQUFJSCxtQkFBbUJNLGNBQWMsQ0FBQ0MsWUFBWUo7SUFDM0Q7SUFsQkFLLFlBQVlDLElBQUksQ0FBRTtRQUNoQixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDQyxZQUFZLEdBQUc7UUFDcEIsSUFBSSxDQUFDQyxRQUFRLEdBQUc7UUFDaEJiLHNEQUFNQSxDQUFDYyxJQUFJLENBQUNDLFdBQVcsQ0FBQ0wsTUFBTSxJQUFJO0lBQ3BDO0FBYUY7QUFDQVYsc0RBQU1BLENBQUNjLElBQUksQ0FBQ0UsV0FBVyxDQUFDZixrQkFBa0I7QUFFbkMsTUFBTWdCLDBCQUEwQmxCLHVEQUFPQTtJQVE1QyxPQUFPRyxXQUFXQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNoQyxPQUFPLElBQUlhLG9CQUFvQmYsVUFBVSxDQUFDQyxPQUFPQztJQUNuRDtJQUVBLE9BQU9DLFNBQVNDLFNBQVMsRUFBRUYsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSWEsb0JBQW9CWixRQUFRLENBQUNDLFdBQVdGO0lBQ3JEO0lBRUEsT0FBT0csZUFBZUMsVUFBVSxFQUFFSixPQUFPLEVBQUU7UUFDekMsT0FBTyxJQUFJYSxvQkFBb0JWLGNBQWMsQ0FBQ0MsWUFBWUo7SUFDNUQ7SUFqQkFLLFlBQVlDLElBQUksQ0FBRTtRQUNoQixLQUFLO1FBQ0wsSUFBSSxDQUFDUSxNQUFNLEdBQUc7UUFDZCxJQUFJLENBQUNDLEtBQUssR0FBRztRQUNibkIsc0RBQU1BLENBQUNjLElBQUksQ0FBQ0MsV0FBVyxDQUFDTCxNQUFNLElBQUk7SUFDcEM7QUFhRjtBQUNBVixzREFBTUEsQ0FBQ2MsSUFBSSxDQUFDRSxXQUFXLENBQUNDLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9nZW4vcHJvdG8vY2FsY3VsYXRvcl9wYi5qcz80M2IzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEBnZW5lcmF0ZWQgYnkgaGFuZC1lZGl0IGZvciBidWZidWlsZC9wcm90b2J1ZiAxLnggY29tcGF0aWJpbGl0eVxuaW1wb3J0IHsgTWVzc2FnZSwgcHJvdG8zIH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuXG5leHBvcnQgY2xhc3MgQ2FsY3VsYXRlUmVxdWVzdCBleHRlbmRzIE1lc3NhZ2Uge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmZpcnN0TnVtYmVyID0gMDtcbiAgICB0aGlzLnNlY29uZE51bWJlciA9IDA7XG4gICAgdGhpcy5vcGVyYXRvciA9IFwiXCI7XG4gICAgcHJvdG8zLnV0aWwuaW5pdFBhcnRpYWwoZGF0YSwgdGhpcyk7XG4gIH1cbiAgXG4gIHN0YXRpYyBmcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBDYWxjdWxhdGVSZXF1ZXN0KCkuZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucyk7XG4gIH1cbiAgXG4gIHN0YXRpYyBmcm9tSnNvbihqc29uVmFsdWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IENhbGN1bGF0ZVJlcXVlc3QoKS5mcm9tSnNvbihqc29uVmFsdWUsIG9wdGlvbnMpO1xuICB9XG4gIFxuICBzdGF0aWMgZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgQ2FsY3VsYXRlUmVxdWVzdCgpLmZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpO1xuICB9XG59XG5wcm90bzMudXRpbC5zZXRUeXBlTmFtZShDYWxjdWxhdGVSZXF1ZXN0LCBcImNhbGN1bGF0b3IuQ2FsY3VsYXRlUmVxdWVzdFwiKTtcblxuZXhwb3J0IGNsYXNzIENhbGN1bGF0ZVJlc3BvbnNlIGV4dGVuZHMgTWVzc2FnZSB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmVzdWx0ID0gMDtcbiAgICB0aGlzLmVycm9yID0gXCJcIjtcbiAgICBwcm90bzMudXRpbC5pbml0UGFydGlhbChkYXRhLCB0aGlzKTtcbiAgfVxuICBcbiAgc3RhdGljIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IENhbGN1bGF0ZVJlc3BvbnNlKCkuZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucyk7XG4gIH1cbiAgXG4gIHN0YXRpYyBmcm9tSnNvbihqc29uVmFsdWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IENhbGN1bGF0ZVJlc3BvbnNlKCkuZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKTtcbiAgfVxuICBcbiAgc3RhdGljIGZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IENhbGN1bGF0ZVJlc3BvbnNlKCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gIH1cbn1cbnByb3RvMy51dGlsLnNldFR5cGVOYW1lKENhbGN1bGF0ZVJlc3BvbnNlLCBcImNhbGN1bGF0b3IuQ2FsY3VsYXRlUmVzcG9uc2VcIik7Il0sIm5hbWVzIjpbIk1lc3NhZ2UiLCJwcm90bzMiLCJDYWxjdWxhdGVSZXF1ZXN0IiwiZnJvbUJpbmFyeSIsImJ5dGVzIiwib3B0aW9ucyIsImZyb21Kc29uIiwianNvblZhbHVlIiwiZnJvbUpzb25TdHJpbmciLCJqc29uU3RyaW5nIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiZmlyc3ROdW1iZXIiLCJzZWNvbmROdW1iZXIiLCJvcGVyYXRvciIsInV0aWwiLCJpbml0UGFydGlhbCIsInNldFR5cGVOYW1lIiwiQ2FsY3VsYXRlUmVzcG9uc2UiLCJyZXN1bHQiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./gen/proto/calculator_pb.js\n"));

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Calculator; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _connectrpc_connect_web__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect-web */ \"./node_modules/@connectrpc/connect-web/dist/esm/index.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @connectrpc/connect */ \"./node_modules/@connectrpc/connect/dist/esm/index.js\");\n/* harmony import */ var _gen_proto_calculator_connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gen/proto/calculator_connect */ \"./gen/proto/calculator_connect.js\");\n// 'use client'\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction Calculator() {\n    _s();\n    const [firstNumber, setFirstNumber] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [secondNumber, setSecondNumber] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [operator, setOperator] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"+\");\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Create transport\n    const transport = (0,_connectrpc_connect_web__WEBPACK_IMPORTED_MODULE_3__.createConnectTransport)({\n        baseUrl: \"http://localhost:8080\"\n    });\n    // Create client\n    const client = (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__.createPromiseClient)(_gen_proto_calculator_connect__WEBPACK_IMPORTED_MODULE_2__.CalculatorService, transport);\n    // 计算方法\n    const calculate = async ()=>{\n        try {\n            setError(\"\");\n            setResult(null);\n            // 验证输入\n            const num1 = parseFloat(firstNumber);\n            const num2 = parseFloat(secondNumber);\n            if (isNaN(num1) || isNaN(num2)) {\n                setError(\"请输入有效的数字\");\n                return;\n            }\n            // 调用RPC方法\n            const response = await client.calculate({\n                firstNumber: num1,\n                secondNumber: num2,\n                operator: operator\n            });\n            // 处理后端返回的错误\n            if (response.error) {\n                setError(response.error);\n                setResult(null);\n            } else {\n                setResult(response.result);\n            }\n        } catch (err) {\n            console.error(\"计算错误:\", err);\n            setError(err.message || \"计算过程中发生错误\");\n            setResult(null);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-br from-blue-100 via-white to-purple-100 flex items-center justify-center p-4 font-sans\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white/80 backdrop-blur-md rounded-3xl shadow-2xl p-10 w-full max-w-md border border-gray-200\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-4xl font-extrabold text-center mb-10 text-blue-700 drop-shadow-lg tracking-wide\",\n                    children: \"ConnectRPC 计算器\"\n                }, void 0, false, {\n                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                    lineNumber: 58,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-7\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                value: firstNumber,\n                                onChange: (e)=>setFirstNumber(e.target.value),\n                                className: \"w-full px-6 py-4 rounded-2xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition shadow-md text-black bg-white/70 placeholder-gray-400 text-lg\",\n                                placeholder: \"第一个数\"\n                            }, void 0, false, {\n                                fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                lineNumber: 61,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 60,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-center\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                value: operator,\n                                onChange: (e)=>setOperator(e.target.value),\n                                className: \"w-40 px-5 py-3 rounded-2xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent transition bg-white/80 shadow-md appearance-none cursor-pointer text-center font-bold text-xl text-blue-700 hover:bg-blue-50\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"+\",\n                                        children: \"加法 (+)\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                        lineNumber: 75,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"-\",\n                                        children: \"减法 (-)\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                        lineNumber: 76,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"*\",\n                                        children: \"乘法 (\\xd7)\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                        lineNumber: 77,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"/\",\n                                        children: \"除法 (\\xf7)\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                        lineNumber: 78,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                lineNumber: 70,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                value: secondNumber,\n                                onChange: (e)=>setSecondNumber(e.target.value),\n                                className: \"w-full px-6 py-4 rounded-2xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition shadow-md text-black bg-white/70 placeholder-gray-400 text-lg\",\n                                placeholder: \"第二个数\"\n                            }, void 0, false, {\n                                fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                lineNumber: 82,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 81,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: calculate,\n                            className: \"w-full bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 text-white font-bold py-4 rounded-2xl transition-all duration-300 transform hover:scale-105 active:scale-95 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 shadow-xl hover:shadow-2xl text-xl tracking-wide\",\n                            children: \"计算\"\n                        }, void 0, false, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 90,\n                            columnNumber: 11\n                        }, this),\n                        result !== null && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-6 bg-gradient-to-r from-blue-100 to-purple-100 border border-blue-200 rounded-2xl text-center shadow-inner mt-2 animate-fade-in\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-purple-700 text-2xl font-extrabold mb-1 drop-shadow\",\n                                    children: \"计算结果\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                    lineNumber: 98,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-blue-600 text-3xl font-mono tracking-widest select-all\",\n                                    children: result\n                                }, void 0, false, {\n                                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                    lineNumber: 99,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 97,\n                            columnNumber: 13\n                        }, this),\n                        error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-6 p-4 bg-red-100 border border-red-300 rounded-2xl text-red-700 flex items-center shadow-md animate-shake\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    className: \"h-6 w-6 mr-3 flex-shrink-0\",\n                                    viewBox: \"0 0 20 20\",\n                                    fill: \"currentColor\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        fillRule: \"evenodd\",\n                                        d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\",\n                                        clipRule: \"evenodd\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                        lineNumber: 107,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                    lineNumber: 106,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"font-semibold text-lg\",\n                                    children: error\n                                }, void 0, false, {\n                                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                                    lineNumber: 109,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                            lineNumber: 105,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                    lineNumber: 59,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-10 text-center text-gray-400 text-xs select-none\",\n                    children: [\n                        \"\\xa9 \",\n                        new Date().getFullYear(),\n                        \" ConnectRPC 计算器\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n                    lineNumber: 113,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n            lineNumber: 57,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/junny/test1/frontband/pages/index.tsx\",\n        lineNumber: 56,\n        columnNumber: 5\n    }, this);\n}\n_s(Calculator, \"VLgCOTQm6jH8EAMXm2cFzzL8y5A=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryReader: function() { return /* binding */ BinaryReader; },\n/* harmony export */   BinaryWriter: function() { return /* binding */ BinaryWriter; },\n/* harmony export */   WireType: function() { return /* binding */ WireType; }\n/* harmony export */ });\n/* harmony import */ var _google_varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/varint.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\");\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nclass BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertFloat32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nclass BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = _google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = _google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/codegen-info.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/codegen-info.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codegenInfo: function() { return /* binding */ codegenInfo; }\n/* harmony export */ });\n/* harmony import */ var _private_names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _private_field_wrapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/field-wrapper.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\");\n/* harmony import */ var _private_scalars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./private/scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _private_reify_wkt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/reify-wkt.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/reify-wkt.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\nconst packageName = \"@bufbuild/protobuf\";\nconst codegenInfo = {\n    packageName: \"@bufbuild/protobuf\",\n    localName: _private_names_js__WEBPACK_IMPORTED_MODULE_0__.localName,\n    reifyWkt: _private_reify_wkt_js__WEBPACK_IMPORTED_MODULE_1__.reifyWkt,\n    getUnwrappedFieldType: _private_field_wrapper_js__WEBPACK_IMPORTED_MODULE_2__.getUnwrappedFieldType,\n    scalarDefaultValue: _private_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarZeroValue,\n    scalarZeroValue: _private_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarZeroValue,\n    safeIdentifier: _private_names_js__WEBPACK_IMPORTED_MODULE_0__.safeIdentifier,\n    safeObjectProperty: _private_names_js__WEBPACK_IMPORTED_MODULE_0__.safeObjectProperty,\n    // prettier-ignore\n    symbols: {\n        proto2: { typeOnly: false, privateImportPath: \"./proto2.js\", publicImportPath: packageName },\n        proto3: { typeOnly: false, privateImportPath: \"./proto3.js\", publicImportPath: packageName },\n        Message: { typeOnly: false, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        PartialMessage: { typeOnly: true, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        PlainMessage: { typeOnly: true, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        FieldList: { typeOnly: true, privateImportPath: \"./field-list.js\", publicImportPath: packageName },\n        MessageType: { typeOnly: true, privateImportPath: \"./message-type.js\", publicImportPath: packageName },\n        Extension: { typeOnly: true, privateImportPath: \"./extension.js\", publicImportPath: packageName },\n        BinaryReadOptions: { typeOnly: true, privateImportPath: \"./binary-format.js\", publicImportPath: packageName },\n        BinaryWriteOptions: { typeOnly: true, privateImportPath: \"./binary-format.js\", publicImportPath: packageName },\n        JsonReadOptions: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonWriteOptions: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonValue: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonObject: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        protoDouble: { typeOnly: false, privateImportPath: \"./proto-double.js\", publicImportPath: packageName },\n        protoInt64: { typeOnly: false, privateImportPath: \"./proto-int64.js\", publicImportPath: packageName },\n        ScalarType: { typeOnly: false, privateImportPath: \"./scalar.js\", publicImportPath: packageName },\n        LongType: { typeOnly: false, privateImportPath: \"./scalar.js\", publicImportPath: packageName },\n        MethodKind: { typeOnly: false, privateImportPath: \"./service-type.js\", publicImportPath: packageName },\n        MethodIdempotency: { typeOnly: false, privateImportPath: \"./service-type.js\", publicImportPath: packageName },\n        IMessageTypeRegistry: { typeOnly: true, privateImportPath: \"./type-registry.js\", publicImportPath: packageName },\n    },\n    wktSourceFiles: [\n        \"google/protobuf/compiler/plugin.proto\",\n        \"google/protobuf/any.proto\",\n        \"google/protobuf/api.proto\",\n        \"google/protobuf/descriptor.proto\",\n        \"google/protobuf/duration.proto\",\n        \"google/protobuf/empty.proto\",\n        \"google/protobuf/field_mask.proto\",\n        \"google/protobuf/source_context.proto\",\n        \"google/protobuf/struct.proto\",\n        \"google/protobuf/timestamp.proto\",\n        \"google/protobuf/type.proto\",\n        \"google/protobuf/wrappers.proto\",\n    ],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW4taW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29GO0FBQ2pCO0FBQ1o7QUFDTDtBQUNDO0FBQ25EO0FBQ087QUFDUDtBQUNBLGFBQWE7QUFDYixZQUFZO0FBQ1oseUJBQXlCO0FBQ3pCLHdCQUF3QixnRUFBZTtBQUN2QyxtQkFBbUI7QUFDbkIsa0JBQWtCO0FBQ2xCLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0Esa0JBQWtCLGtGQUFrRjtBQUNwRyxrQkFBa0Isa0ZBQWtGO0FBQ3BHLG1CQUFtQixtRkFBbUY7QUFDdEcsMEJBQTBCLGtGQUFrRjtBQUM1Ryx3QkFBd0Isa0ZBQWtGO0FBQzFHLHFCQUFxQixxRkFBcUY7QUFDMUcsdUJBQXVCLHVGQUF1RjtBQUM5RyxxQkFBcUIsb0ZBQW9GO0FBQ3pHLDZCQUE2Qix3RkFBd0Y7QUFDckgsOEJBQThCLHdGQUF3RjtBQUN0SCwyQkFBMkIsc0ZBQXNGO0FBQ2pILDRCQUE0QixzRkFBc0Y7QUFDbEgscUJBQXFCLHNGQUFzRjtBQUMzRyxzQkFBc0Isc0ZBQXNGO0FBQzVHLHVCQUF1Qix3RkFBd0Y7QUFDL0csc0JBQXNCLHVGQUF1RjtBQUM3RyxzQkFBc0Isa0ZBQWtGO0FBQ3hHLG9CQUFvQixrRkFBa0Y7QUFDdEcsc0JBQXNCLHdGQUF3RjtBQUM5Ryw2QkFBNkIsd0ZBQXdGO0FBQ3JILGdDQUFnQyx3RkFBd0Y7QUFDeEgsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NvZGVnZW4taW5mby5qcz9lMWY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2NhbE5hbWUsIHNhZmVJZGVudGlmaWVyLCBzYWZlT2JqZWN0UHJvcGVydHksIH0gZnJvbSBcIi4vcHJpdmF0ZS9uYW1lcy5qc1wiO1xuaW1wb3J0IHsgZ2V0VW53cmFwcGVkRmllbGRUeXBlIH0gZnJvbSBcIi4vcHJpdmF0ZS9maWVsZC13cmFwcGVyLmpzXCI7XG5pbXBvcnQgeyBzY2FsYXJaZXJvVmFsdWUgfSBmcm9tIFwiLi9wcml2YXRlL3NjYWxhcnMuanNcIjtcbmltcG9ydCB7IHJlaWZ5V2t0IH0gZnJvbSBcIi4vcHJpdmF0ZS9yZWlmeS13a3QuanNcIjtcbmltcG9ydCB7IExvbmdUeXBlLCBTY2FsYXJUeXBlIH0gZnJvbSBcIi4vc2NhbGFyLmpzXCI7XG5jb25zdCBwYWNrYWdlTmFtZSA9IFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5leHBvcnQgY29uc3QgY29kZWdlbkluZm8gPSB7XG4gICAgcGFja2FnZU5hbWU6IFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCIsXG4gICAgbG9jYWxOYW1lLFxuICAgIHJlaWZ5V2t0LFxuICAgIGdldFVud3JhcHBlZEZpZWxkVHlwZSxcbiAgICBzY2FsYXJEZWZhdWx0VmFsdWU6IHNjYWxhclplcm9WYWx1ZSxcbiAgICBzY2FsYXJaZXJvVmFsdWUsXG4gICAgc2FmZUlkZW50aWZpZXIsXG4gICAgc2FmZU9iamVjdFByb3BlcnR5LFxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxuICAgIHN5bWJvbHM6IHtcbiAgICAgICAgcHJvdG8yOiB7IHR5cGVPbmx5OiBmYWxzZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9wcm90bzIuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgcHJvdG8zOiB7IHR5cGVPbmx5OiBmYWxzZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9wcm90bzMuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgTWVzc2FnZTogeyB0eXBlT25seTogZmFsc2UsIHByaXZhdGVJbXBvcnRQYXRoOiBcIi4vbWVzc2FnZS5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBQYXJ0aWFsTWVzc2FnZTogeyB0eXBlT25seTogdHJ1ZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9tZXNzYWdlLmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIFBsYWluTWVzc2FnZTogeyB0eXBlT25seTogdHJ1ZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9tZXNzYWdlLmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIEZpZWxkTGlzdDogeyB0eXBlT25seTogdHJ1ZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9maWVsZC1saXN0LmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIE1lc3NhZ2VUeXBlOiB7IHR5cGVPbmx5OiB0cnVlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL21lc3NhZ2UtdHlwZS5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBFeHRlbnNpb246IHsgdHlwZU9ubHk6IHRydWUsIHByaXZhdGVJbXBvcnRQYXRoOiBcIi4vZXh0ZW5zaW9uLmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIEJpbmFyeVJlYWRPcHRpb25zOiB7IHR5cGVPbmx5OiB0cnVlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL2JpbmFyeS1mb3JtYXQuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgQmluYXJ5V3JpdGVPcHRpb25zOiB7IHR5cGVPbmx5OiB0cnVlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL2JpbmFyeS1mb3JtYXQuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgSnNvblJlYWRPcHRpb25zOiB7IHR5cGVPbmx5OiB0cnVlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL2pzb24tZm9ybWF0LmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIEpzb25Xcml0ZU9wdGlvbnM6IHsgdHlwZU9ubHk6IHRydWUsIHByaXZhdGVJbXBvcnRQYXRoOiBcIi4vanNvbi1mb3JtYXQuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgSnNvblZhbHVlOiB7IHR5cGVPbmx5OiB0cnVlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL2pzb24tZm9ybWF0LmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgICAgIEpzb25PYmplY3Q6IHsgdHlwZU9ubHk6IHRydWUsIHByaXZhdGVJbXBvcnRQYXRoOiBcIi4vanNvbi1mb3JtYXQuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgcHJvdG9Eb3VibGU6IHsgdHlwZU9ubHk6IGZhbHNlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL3Byb3RvLWRvdWJsZS5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBwcm90b0ludDY0OiB7IHR5cGVPbmx5OiBmYWxzZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9wcm90by1pbnQ2NC5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBTY2FsYXJUeXBlOiB7IHR5cGVPbmx5OiBmYWxzZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9zY2FsYXIuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgTG9uZ1R5cGU6IHsgdHlwZU9ubHk6IGZhbHNlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL3NjYWxhci5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBNZXRob2RLaW5kOiB7IHR5cGVPbmx5OiBmYWxzZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi9zZXJ2aWNlLXR5cGUuanNcIiwgcHVibGljSW1wb3J0UGF0aDogcGFja2FnZU5hbWUgfSxcbiAgICAgICAgTWV0aG9kSWRlbXBvdGVuY3k6IHsgdHlwZU9ubHk6IGZhbHNlLCBwcml2YXRlSW1wb3J0UGF0aDogXCIuL3NlcnZpY2UtdHlwZS5qc1wiLCBwdWJsaWNJbXBvcnRQYXRoOiBwYWNrYWdlTmFtZSB9LFxuICAgICAgICBJTWVzc2FnZVR5cGVSZWdpc3RyeTogeyB0eXBlT25seTogdHJ1ZSwgcHJpdmF0ZUltcG9ydFBhdGg6IFwiLi90eXBlLXJlZ2lzdHJ5LmpzXCIsIHB1YmxpY0ltcG9ydFBhdGg6IHBhY2thZ2VOYW1lIH0sXG4gICAgfSxcbiAgICB3a3RTb3VyY2VGaWxlczogW1xuICAgICAgICBcImdvb2dsZS9wcm90b2J1Zi9jb21waWxlci9wbHVnaW4ucHJvdG9cIixcbiAgICAgICAgXCJnb29nbGUvcHJvdG9idWYvYW55LnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL2FwaS5wcm90b1wiLFxuICAgICAgICBcImdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJvdG9cIixcbiAgICAgICAgXCJnb29nbGUvcHJvdG9idWYvc291cmNlX2NvbnRleHQucHJvdG9cIixcbiAgICAgICAgXCJnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90b1wiLFxuICAgICAgICBcImdvb2dsZS9wcm90b2J1Zi90eXBlLnByb3RvXCIsXG4gICAgICAgIFwiZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvXCIsXG4gICAgXSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/codegen-info.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/create-descriptor-set.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/create-descriptor-set.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDescriptorSet: function() { return /* binding */ createDescriptorSet; }\n/* harmony export */ });\n/* harmony import */ var _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/protobuf/descriptor_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\");\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _service_type_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./service-type.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _private_names_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./private/names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _private_text_format_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./private/text-format.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/text-format.js\");\n/* harmony import */ var _private_feature_set_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/feature-set.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/feature-set.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n/**\n * Create a DescriptorSet, a convenient interface for working with a set of\n * google.protobuf.FileDescriptorProto.\n *\n * Note that files must be given in topological order, so each file appears\n * before any file that imports it. Protocol buffer compilers always produce\n * files in topological order.\n */\nfunction createDescriptorSet(input, options) {\n    var _a;\n    const cart = {\n        files: [],\n        enums: new Map(),\n        messages: new Map(),\n        services: new Map(),\n        extensions: new Map(),\n        mapEntries: new Map(),\n    };\n    const fileDescriptors = (0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(input, _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FileDescriptorSet)\n        ? input.file\n        : input instanceof Uint8Array\n            ? _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FileDescriptorSet.fromBinary(input).file\n            : input;\n    const resolverByEdition = new Map();\n    for (const proto of fileDescriptors) {\n        const edition = (_a = proto.edition) !== null && _a !== void 0 ? _a : parseFileSyntax(proto.syntax, proto.edition).edition;\n        let resolveFeatures = resolverByEdition.get(edition);\n        if (resolveFeatures === undefined) {\n            resolveFeatures = (0,_private_feature_set_js__WEBPACK_IMPORTED_MODULE_2__.createFeatureResolver)(edition, options === null || options === void 0 ? void 0 : options.featureSetDefaults, options === null || options === void 0 ? void 0 : options.serializationOptions);\n            resolverByEdition.set(edition, resolveFeatures);\n        }\n        addFile(proto, cart, resolveFeatures);\n    }\n    return cart;\n}\n/**\n * Create a descriptor for a file.\n */\nfunction addFile(proto, cart, resolveFeatures) {\n    var _a, _b;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid FileDescriptorProto: missing name`);\n    const file = Object.assign(Object.assign({ kind: \"file\", proto, deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false }, parseFileSyntax(proto.syntax, proto.edition)), { name: proto.name.replace(/\\.proto/, \"\"), dependencies: findFileDependencies(proto, cart), enums: [], messages: [], extensions: [], services: [], toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${this.proto.name}`;\n        },\n        getSyntaxComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Syntax,\n            ]);\n        },\n        getPackageComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Package,\n            ]);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures((_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        } });\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, undefined, cart, resolveFeatures);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto, file, undefined, cart, resolveFeatures);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto, file, cart, resolveFeatures);\n    }\n    addExtensions(file, cart, resolveFeatures);\n    for (const mapEntry of cart.mapEntries.values()) {\n        addFields(mapEntry, cart, resolveFeatures);\n    }\n    for (const message of file.messages) {\n        addFields(message, cart, resolveFeatures);\n        addExtensions(message, cart, resolveFeatures);\n    }\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    cart.files.push(file);\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc, cart, resolveFeatures) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc, undefined, cart, resolveFeatures);\n                desc.extensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc.file, desc, cart, resolveFeatures);\n                desc.nestedExtensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message, cart, resolveFeatures);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message, cart, resolveFeatures) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto, message, resolveFeatures));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto, allOneofs);\n        const field = newField(proto, message.file, message, oneof, cart, resolveFeatures);\n        message.fields.push(field);\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child, cart, resolveFeatures);\n    }\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */\nfunction addEnum(proto, file, parent, cart, resolveFeatures) {\n    var _a, _b, _c;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid EnumDescriptorProto: missing name`);\n    const desc = {\n        kind: \"enum\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        values: [],\n        sharedPrefix: (0,_private_names_js__WEBPACK_IMPORTED_MODULE_4__.findEnumSharedPrefix)(proto.name, proto.value.map((v) => { var _a; return (_a = v.name) !== null && _a !== void 0 ? _a : \"\"; })),\n        toString() {\n            return `enum ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_EnumType,\n                    this.parent.proto.enumType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_EnumType,\n                    this.file.proto.enumType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a, _b;\n            return resolveFeatures((_a = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _a !== void 0 ? _a : file.getFeatures(), (_b = proto.options) === null || _b === void 0 ? void 0 : _b.features);\n        },\n    };\n    cart.enums.set(desc.typeName, desc);\n    proto.value.forEach((proto) => {\n        var _a, _b;\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid EnumValueDescriptorProto: missing name`);\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.number !== undefined, `invalid EnumValueDescriptorProto: missing number`);\n        desc.values.push({\n            kind: \"enum_value\",\n            proto,\n            deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n            parent: desc,\n            name: proto.name,\n            number: proto.number,\n            toString() {\n                return `enum value ${desc.typeName}.${this.name}`;\n            },\n            declarationString() {\n                var _a;\n                let str = `${this.name} = ${this.number}`;\n                if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) === true) {\n                    str += \" [deprecated = true]\";\n                }\n                return str;\n            },\n            getComments() {\n                const path = [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.EnumDescriptorProto_Value,\n                    this.parent.proto.value.indexOf(this.proto),\n                ];\n                return findComments(file.proto.sourceCodeInfo, path);\n            },\n            getFeatures() {\n                var _a;\n                return resolveFeatures(desc.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n            },\n        });\n    });\n    ((_c = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _c !== void 0 ? _c : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto, file, parent, cart, resolveFeatures) {\n    var _a, _b, _c, _d;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid DescriptorProto: missing name`);\n    const desc = {\n        kind: \"message\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        fields: [],\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString() {\n            return `message ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_NestedType,\n                    this.parent.proto.nestedType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_MessageType,\n                    this.file.proto.messageType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a, _b;\n            return resolveFeatures((_a = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _a !== void 0 ? _a : file.getFeatures(), (_b = proto.options) === null || _b === void 0 ? void 0 : _b.features);\n        },\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        cart.mapEntries.set(desc.typeName, desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        cart.messages.set(desc.typeName, desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, desc, cart, resolveFeatures);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto, file, desc, cart, resolveFeatures);\n    }\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */\nfunction addService(proto, file, cart, resolveFeatures) {\n    var _a, _b;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid ServiceDescriptorProto: missing name`);\n    const desc = {\n        kind: \"service\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        name: proto.name,\n        typeName: makeTypeName(proto, undefined, file),\n        methods: [],\n        toString() {\n            return `service ${this.typeName}`;\n        },\n        getComments() {\n            const path = [\n                FieldNumber.FileDescriptorProto_Service,\n                this.file.proto.service.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(file.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n    file.services.push(desc);\n    cart.services.set(desc.typeName, desc);\n    for (const methodProto of proto.method) {\n        desc.methods.push(newMethod(methodProto, desc, cart, resolveFeatures));\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto, parent, cart, resolveFeatures) {\n    var _a, _b, _c;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid MethodDescriptorProto: missing name`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.inputType, `invalid MethodDescriptorProto: missing input_type`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.outputType, `invalid MethodDescriptorProto: missing output_type`);\n    let methodKind;\n    if (proto.clientStreaming === true && proto.serverStreaming === true) {\n        methodKind = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodKind.BiDiStreaming;\n    }\n    else if (proto.clientStreaming === true) {\n        methodKind = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodKind.ClientStreaming;\n    }\n    else if (proto.serverStreaming === true) {\n        methodKind = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodKind.ServerStreaming;\n    }\n    else {\n        methodKind = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodKind.Unary;\n    }\n    let idempotency;\n    switch ((_a = proto.options) === null || _a === void 0 ? void 0 : _a.idempotencyLevel) {\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.MethodOptions_IdempotencyLevel.IDEMPOTENT:\n            idempotency = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodIdempotency.Idempotent;\n            break;\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:\n            idempotency = _service_type_js__WEBPACK_IMPORTED_MODULE_5__.MethodIdempotency.NoSideEffects;\n            break;\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:\n        case undefined:\n            idempotency = undefined;\n            break;\n    }\n    const input = cart.messages.get(trimLeadingDot(proto.inputType));\n    const output = cart.messages.get(trimLeadingDot(proto.outputType));\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        parent,\n        name,\n        methodKind,\n        input,\n        output,\n        idempotency,\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.ServiceDescriptorProto_Method,\n                this.parent.proto.method.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto, parent, resolveFeatures) {\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid OneofDescriptorProto: missing name`);\n    return {\n        kind: \"oneof\",\n        proto,\n        deprecated: false,\n        parent,\n        fields: [],\n        name: proto.name,\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_OneofDecl,\n                this.parent.proto.oneofDecl.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n}\n/**\n * Create a descriptor for a field.\n */\nfunction newField(proto, file, parent, oneof, cart, resolveFeatures) {\n    var _a, _b, _c;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid FieldDescriptorProto: missing name`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.number, `invalid FieldDescriptorProto: missing number`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.type, `invalid FieldDescriptorProto: missing type`);\n    const common = {\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        parent,\n        oneof,\n        optional: isOptionalField(proto, file.syntax),\n        packedByDefault: isPackedFieldByDefault(proto, resolveFeatures),\n        packed: isPackedField(file, parent, proto, resolveFeatures),\n        jsonName: proto.jsonName === (0,_private_names_js__WEBPACK_IMPORTED_MODULE_4__.fieldJsonName)(proto.name) ? undefined : proto.jsonName,\n        scalar: undefined,\n        longType: undefined,\n        message: undefined,\n        enum: undefined,\n        mapKey: undefined,\n        mapValue: undefined,\n        declarationString,\n        // toString, getComments, getFeatures are overridden in newExtension\n        toString() {\n            return `field ${this.parent.typeName}.${this.name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_Field,\n                this.parent.proto.field.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n    const repeated = proto.label === _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Label.REPEATED;\n    switch (proto.type) {\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.MESSAGE:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.GROUP: {\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const mapEntry = cart.mapEntries.get(trimLeadingDot(proto.typeName));\n            if (mapEntry !== undefined) {\n                (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(repeated, `invalid FieldDescriptorProto: expected map entry to be repeated`);\n                return Object.assign(Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"map\", repeated: false }), getMapFieldTypes(mapEntry));\n            }\n            const message = cart.messages.get(trimLeadingDot(proto.typeName));\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(message !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"message\", repeated,\n                message });\n        }\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.ENUM: {\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const e = cart.enums.get(trimLeadingDot(proto.typeName));\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(e !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"enum\", getDefaultValue,\n                repeated, enum: e });\n        }\n        default: {\n            const scalar = fieldTypeToScalarType[proto.type];\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(scalar, `invalid FieldDescriptorProto: unknown type ${proto.type}`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"scalar\", getDefaultValue,\n                repeated,\n                scalar, longType: ((_c = proto.options) === null || _c === void 0 ? void 0 : _c.jstype) == _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldOptions_JSType.JS_STRING\n                    ? _scalar_js__WEBPACK_IMPORTED_MODULE_6__.LongType.STRING\n                    : _scalar_js__WEBPACK_IMPORTED_MODULE_6__.LongType.BIGINT });\n        }\n    }\n}\n/**\n * Create a descriptor for an extension field.\n */\nfunction newExtension(proto, file, parent, cart, resolveFeatures) {\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.extendee, `invalid FieldDescriptorProto: missing extendee`);\n    const field = newField(proto, file, null, // to safe us many lines of duplicated code, we trick the type system\n    undefined, cart, resolveFeatures);\n    const extendee = cart.messages.get(trimLeadingDot(proto.extendee));\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n    return Object.assign(Object.assign({}, field), { kind: \"extension\", typeName: makeTypeName(proto, parent, file), parent,\n        file,\n        extendee,\n        // Must override toString, getComments, getFeatures from newField, because we\n        // call newField with parent undefined.\n        toString() {\n            return `extension ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_Extension,\n                    this.parent.proto.extension.indexOf(proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_Extension,\n                    this.file.proto.extension.indexOf(proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures((parent !== null && parent !== void 0 ? parent : file).getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        } });\n}\n/**\n * Parse the \"syntax\" and \"edition\" fields, stripping test editions.\n */\nfunction parseFileSyntax(syntax, edition) {\n    let e;\n    let s;\n    switch (syntax) {\n        case undefined:\n        case \"proto2\":\n            s = \"proto2\";\n            e = _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_PROTO2;\n            break;\n        case \"proto3\":\n            s = \"proto3\";\n            e = _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_PROTO3;\n            break;\n        case \"editions\":\n            s = \"editions\";\n            switch (edition) {\n                case undefined:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_1_TEST_ONLY:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_2_TEST_ONLY:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_99997_TEST_ONLY:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_99998_TEST_ONLY:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_99999_TEST_ONLY:\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_UNKNOWN:\n                    e = _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_UNKNOWN;\n                    break;\n                default:\n                    e = edition;\n                    break;\n            }\n            break;\n        default:\n            throw new Error(`invalid FileDescriptorProto: unsupported syntax: ${syntax}`);\n    }\n    if (syntax === \"editions\" && edition === _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_UNKNOWN) {\n        throw new Error(`invalid FileDescriptorProto: syntax ${syntax} cannot have edition ${String(edition)}`);\n    }\n    return {\n        syntax: s,\n        edition: e,\n    };\n}\n/**\n * Resolve dependencies of FileDescriptorProto to DescFile.\n */\nfunction findFileDependencies(proto, cart) {\n    return proto.dependency.map((wantName) => {\n        const dep = cart.files.find((f) => f.proto.name === wantName);\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(dep);\n        return dep;\n    });\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto, parent, file) {\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(proto.name, `invalid ${proto.getType().typeName}: missing name`);\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package !== undefined) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\nfunction getMapFieldTypes(mapEntry) {\n    var _a, _b;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)((_a = mapEntry.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry, `invalid DescriptorProto: expected ${mapEntry.toString()} to be a map entry`);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(mapEntry.fields.length === 2, `invalid DescriptorProto: map entry ${mapEntry.toString()} has ${mapEntry.fields.length} fields`);\n    const keyField = mapEntry.fields.find((f) => f.proto.number === 1);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(keyField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing key field`);\n    const mapKey = keyField.scalar;\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(mapKey !== undefined &&\n        mapKey !== _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.BYTES &&\n        mapKey !== _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.FLOAT &&\n        mapKey !== _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.DOUBLE, `invalid DescriptorProto: map entry ${mapEntry.toString()} has unexpected key type ${(_b = keyField.proto.type) !== null && _b !== void 0 ? _b : -1}`);\n    const valueField = mapEntry.fields.find((f) => f.proto.number === 2);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(valueField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing value field`);\n    switch (valueField.fieldKind) {\n        case \"scalar\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"scalar\" }),\n            };\n        case \"message\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"message\" }),\n            };\n        case \"enum\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"enum\" }),\n            };\n        default:\n            throw new Error(\"invalid DescriptorProto: unsupported map entry value field\");\n    }\n}\n/**\n * Did the user put the field in a oneof group?\n * This handles proto3 optionals.\n */\nfunction findOneof(proto, allOneofs) {\n    var _a;\n    const oneofIndex = proto.oneofIndex;\n    if (oneofIndex === undefined) {\n        return undefined;\n    }\n    let oneof;\n    if (proto.proto3Optional !== true) {\n        oneof = allOneofs[oneofIndex];\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_3__.assert)(oneof, `invalid FieldDescriptorProto: oneof #${oneofIndex} for field #${(_a = proto.number) !== null && _a !== void 0 ? _a : -1} not found`);\n    }\n    return oneof;\n}\n/**\n * Did the user use the `optional` keyword?\n * This handles proto3 optionals.\n */\nfunction isOptionalField(proto, syntax) {\n    switch (syntax) {\n        case \"proto2\":\n            return (proto.oneofIndex === undefined &&\n                proto.label === _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Label.OPTIONAL);\n        case \"proto3\":\n            return proto.proto3Optional === true;\n        case \"editions\":\n            return false;\n    }\n}\n/**\n * Is this field packed by default? Only valid for repeated enum fields, and\n * for repeated scalar fields except BYTES and STRING.\n *\n * In proto3 syntax, fields are packed by default. In proto2 syntax, fields\n * are unpacked by default. With editions, the default is whatever the edition\n * specifies as a default. In edition 2023, fields are packed by default.\n */\nfunction isPackedFieldByDefault(proto, resolveFeatures) {\n    const { repeatedFieldEncoding } = resolveFeatures();\n    if (repeatedFieldEncoding != _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FeatureSet_RepeatedFieldEncoding.PACKED) {\n        return false;\n    }\n    // From the proto3 language guide:\n    // > In proto3, repeated fields of scalar numeric types are packed by default.\n    // This information is incomplete - according to the conformance tests, BOOL\n    // and ENUM are packed by default as well. This means only STRING and BYTES\n    // are not packed by default, which makes sense because they are length-delimited.\n    switch (proto.type) {\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.STRING:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.BYTES:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.GROUP:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.MESSAGE:\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Pack this repeated field?\n *\n * Respects field type, proto2/proto3 defaults and the `packed` option, or\n * edition defaults and the edition features.repeated_field_encoding options.\n */\nfunction isPackedField(file, parent, proto, resolveFeatures) {\n    var _a, _b, _c, _d, _e, _f;\n    switch (proto.type) {\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.STRING:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.BYTES:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.GROUP:\n        case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.MESSAGE:\n            // length-delimited types cannot be packed\n            return false;\n        default:\n            switch (file.edition) {\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_PROTO2:\n                    return (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== null && _b !== void 0 ? _b : false;\n                case _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.Edition.EDITION_PROTO3:\n                    return (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.packed) !== null && _d !== void 0 ? _d : true;\n                default: {\n                    const { repeatedFieldEncoding } = resolveFeatures((_e = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _e !== void 0 ? _e : file.getFeatures(), (_f = proto.options) === null || _f === void 0 ? void 0 : _f.features);\n                    return (repeatedFieldEncoding == _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FeatureSet_RepeatedFieldEncoding.PACKED);\n                }\n            }\n    }\n}\n/**\n * Map from a compiler-generated field type to our ScalarType, which is a\n * subset of field types declared by protobuf enum google.protobuf.FieldDescriptorProto.\n */\nconst fieldTypeToScalarType = {\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.DOUBLE]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.DOUBLE,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.FLOAT]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.FLOAT,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.INT64]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.INT64,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.UINT64]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.UINT64,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.INT32]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.INT32,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.FIXED64]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.FIXED64,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.FIXED32]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.FIXED32,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.BOOL]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.BOOL,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.STRING]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.STRING,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.GROUP]: undefined,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.MESSAGE]: undefined,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.BYTES]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.BYTES,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.UINT32]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.UINT32,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.ENUM]: undefined,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.SFIXED32]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.SFIXED32,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.SFIXED64]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.SFIXED64,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.SINT32]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.SINT32,\n    [_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.SINT64]: _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType.SINT64,\n};\n/**\n * Find comments.\n */\nfunction findComments(sourceCodeInfo, sourcePath) {\n    if (!sourceCodeInfo) {\n        return {\n            leadingDetached: [],\n            sourcePath,\n        };\n    }\n    for (const location of sourceCodeInfo.location) {\n        if (location.path.length !== sourcePath.length) {\n            continue;\n        }\n        if (location.path.some((value, index) => sourcePath[index] !== value)) {\n            continue;\n        }\n        return {\n            leadingDetached: location.leadingDetachedComments,\n            leading: location.leadingComments,\n            trailing: location.trailingComments,\n            sourcePath,\n        };\n    }\n    return {\n        leadingDetached: [],\n        sourcePath,\n    };\n}\n/**\n * The following field numbers are used to find comments in\n * google.protobuf.SourceCodeInfo.\n */\nvar FieldNumber;\n(function (FieldNumber) {\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Package\"] = 2] = \"FileDescriptorProto_Package\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_MessageType\"] = 4] = \"FileDescriptorProto_MessageType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_EnumType\"] = 5] = \"FileDescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Service\"] = 6] = \"FileDescriptorProto_Service\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Extension\"] = 7] = \"FileDescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Syntax\"] = 12] = \"FileDescriptorProto_Syntax\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Field\"] = 2] = \"DescriptorProto_Field\";\n    FieldNumber[FieldNumber[\"DescriptorProto_NestedType\"] = 3] = \"DescriptorProto_NestedType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_EnumType\"] = 4] = \"DescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Extension\"] = 6] = \"DescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"DescriptorProto_OneofDecl\"] = 8] = \"DescriptorProto_OneofDecl\";\n    FieldNumber[FieldNumber[\"EnumDescriptorProto_Value\"] = 2] = \"EnumDescriptorProto_Value\";\n    FieldNumber[FieldNumber[\"ServiceDescriptorProto_Method\"] = 2] = \"ServiceDescriptorProto_Method\";\n})(FieldNumber || (FieldNumber = {}));\n/**\n * Return a string that matches the definition of a field in the protobuf\n * source. Does not take custom options into account.\n */\nfunction declarationString() {\n    var _a, _b, _c;\n    const parts = [];\n    if (this.repeated) {\n        parts.push(\"repeated\");\n    }\n    if (this.optional) {\n        parts.push(\"optional\");\n    }\n    const file = this.kind === \"extension\" ? this.file : this.parent.file;\n    if (file.syntax == \"proto2\" &&\n        this.proto.label === _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Label.REQUIRED) {\n        parts.push(\"required\");\n    }\n    let type;\n    switch (this.fieldKind) {\n        case \"scalar\":\n            type = _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType[this.scalar].toLowerCase();\n            break;\n        case \"enum\":\n            type = this.enum.typeName;\n            break;\n        case \"message\":\n            type = this.message.typeName;\n            break;\n        case \"map\": {\n            const k = _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType[this.mapKey].toLowerCase();\n            let v;\n            switch (this.mapValue.kind) {\n                case \"scalar\":\n                    v = _scalar_js__WEBPACK_IMPORTED_MODULE_6__.ScalarType[this.mapValue.scalar].toLowerCase();\n                    break;\n                case \"enum\":\n                    v = this.mapValue.enum.typeName;\n                    break;\n                case \"message\":\n                    v = this.mapValue.message.typeName;\n                    break;\n            }\n            type = `map<${k}, ${v}>`;\n            break;\n        }\n    }\n    parts.push(`${type} ${this.name} = ${this.number}`);\n    const options = [];\n    if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== undefined) {\n        options.push(`packed = ${this.proto.options.packed.toString()}`);\n    }\n    let defaultValue = this.proto.defaultValue;\n    if (defaultValue !== undefined) {\n        if (this.proto.type == _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.BYTES ||\n            this.proto.type == _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldDescriptorProto_Type.STRING) {\n            defaultValue = '\"' + defaultValue.replace('\"', '\\\\\"') + '\"';\n        }\n        options.push(`default = ${defaultValue}`);\n    }\n    if (this.jsonName !== undefined) {\n        options.push(`json_name = \"${this.jsonName}\"`);\n    }\n    if (((_b = this.proto.options) === null || _b === void 0 ? void 0 : _b.jstype) !== undefined) {\n        options.push(`jstype = ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_1__.FieldOptions_JSType[this.proto.options.jstype]}`);\n    }\n    if (((_c = this.proto.options) === null || _c === void 0 ? void 0 : _c.deprecated) === true) {\n        options.push(`deprecated = true`);\n    }\n    if (options.length > 0) {\n        parts.push(\"[\" + options.join(\", \") + \"]\");\n    }\n    return parts.join(\" \");\n}\n/**\n * Parses a text-encoded default value (proto2) of a scalar or enum field.\n */\nfunction getDefaultValue() {\n    const d = this.proto.defaultValue;\n    if (d === undefined) {\n        return undefined;\n    }\n    switch (this.fieldKind) {\n        case \"enum\":\n            return (0,_private_text_format_js__WEBPACK_IMPORTED_MODULE_7__.parseTextFormatEnumValue)(this.enum, d);\n        case \"scalar\":\n            return (0,_private_text_format_js__WEBPACK_IMPORTED_MODULE_7__.parseTextFormatScalarValue)(this.scalar, d);\n        default:\n            return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/create-descriptor-set.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/create-registry-from-desc.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/create-registry-from-desc.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRegistryFromDescriptors: function() { return /* binding */ createRegistryFromDescriptors; }\n/* harmony export */ });\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _proto2_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./proto2.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto2.js\");\n/* harmony import */ var _private_names_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./private/names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _google_protobuf_timestamp_pb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./google/protobuf/timestamp_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js\");\n/* harmony import */ var _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/protobuf/duration_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js\");\n/* harmony import */ var _google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./google/protobuf/any_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n/* harmony import */ var _google_protobuf_empty_pb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./google/protobuf/empty_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js\");\n/* harmony import */ var _google_protobuf_field_mask_pb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./google/protobuf/field_mask_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js\");\n/* harmony import */ var _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./google/protobuf/struct_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js\");\n/* harmony import */ var _private_enum_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./private/enum.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\");\n/* harmony import */ var _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./google/protobuf/wrappers_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js\");\n/* harmony import */ var _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./google/protobuf/descriptor_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\");\n/* harmony import */ var _create_descriptor_set_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./create-descriptor-set.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/create-descriptor-set.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// well-known message types with specialized JSON representation\nconst wkMessages = [\n    _google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_0__.Any,\n    _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_1__.Duration,\n    _google_protobuf_empty_pb_js__WEBPACK_IMPORTED_MODULE_2__.Empty,\n    _google_protobuf_field_mask_pb_js__WEBPACK_IMPORTED_MODULE_3__.FieldMask,\n    _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_4__.Struct,\n    _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_4__.Value,\n    _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_4__.ListValue,\n    _google_protobuf_timestamp_pb_js__WEBPACK_IMPORTED_MODULE_5__.Timestamp,\n    _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_1__.Duration,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.DoubleValue,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.FloatValue,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.Int64Value,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.Int32Value,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.UInt32Value,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.UInt64Value,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.BoolValue,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.StringValue,\n    _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_6__.BytesValue,\n];\n// well-known enum types with specialized JSON representation\nconst wkEnums = [(0,_private_enum_js__WEBPACK_IMPORTED_MODULE_7__.getEnumType)(_google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_4__.NullValue)];\n/**\n * Create a registry from a set of descriptors. The types returned by this\n * registry behave exactly like types from generated code.\n *\n * This function accepts google.protobuf.FileDescriptorSet in serialized or\n * deserialized form. Alternatively, it also accepts a DescriptorSet (see\n * createDescriptorSet()).\n *\n * By default, all well-known types with a specialized JSON representation\n * are replaced with their generated counterpart in this package.\n */\nfunction createRegistryFromDescriptors(input, replaceWkt = true) {\n    const set = input instanceof Uint8Array || (0,_is_message_js__WEBPACK_IMPORTED_MODULE_8__.isMessage)(input, _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_9__.FileDescriptorSet)\n        ? (0,_create_descriptor_set_js__WEBPACK_IMPORTED_MODULE_10__.createDescriptorSet)(input)\n        : input;\n    const enums = new Map();\n    const messages = new Map();\n    const extensions = new Map();\n    const extensionsByExtendee = new Map();\n    const services = {};\n    if (replaceWkt) {\n        for (const mt of wkMessages) {\n            messages.set(mt.typeName, mt);\n        }\n        for (const et of wkEnums) {\n            enums.set(et.typeName, et);\n        }\n    }\n    return {\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findEnum(typeName) {\n            const existing = enums.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.enums.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? _proto3_js__WEBPACK_IMPORTED_MODULE_11__.proto3 : _proto2_js__WEBPACK_IMPORTED_MODULE_12__.proto2;\n            const type = runtime.makeEnumType(typeName, desc.values.map((u) => ({\n                no: u.number,\n                name: u.name,\n                localName: (0,_private_names_js__WEBPACK_IMPORTED_MODULE_13__.localName)(u),\n            })), {});\n            enums.set(typeName, type);\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findMessage(typeName) {\n            const existing = messages.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.messages.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? _proto3_js__WEBPACK_IMPORTED_MODULE_11__.proto3 : _proto2_js__WEBPACK_IMPORTED_MODULE_12__.proto2;\n            const fields = [];\n            const type = runtime.makeMessageType(typeName, () => fields, {\n                localName: (0,_private_names_js__WEBPACK_IMPORTED_MODULE_13__.localName)(desc),\n            });\n            messages.set(typeName, type);\n            for (const field of desc.fields) {\n                fields.push(makeFieldInfo(field, this));\n            }\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findService(typeName) {\n            const existing = services[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.services.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const methods = {};\n            for (const method of desc.methods) {\n                const I = resolve(method.input, this, method);\n                const O = resolve(method.output, this, method);\n                methods[(0,_private_names_js__WEBPACK_IMPORTED_MODULE_13__.localName)(method)] = {\n                    name: method.name,\n                    I,\n                    O,\n                    kind: method.methodKind,\n                    idempotency: method.idempotency,\n                    // We do not surface options at this time\n                    // options: {},\n                };\n            }\n            return (services[typeName] = {\n                typeName: desc.typeName,\n                methods,\n            });\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findExtensionFor(typeName, no) {\n            var _a;\n            if (!set.messages.has(typeName)) {\n                return undefined;\n            }\n            let extensionsByNo = extensionsByExtendee.get(typeName);\n            if (!extensionsByNo) {\n                // maintain a lookup for extension desc by number\n                extensionsByNo = new Map();\n                extensionsByExtendee.set(typeName, extensionsByNo);\n                for (const desc of set.extensions.values()) {\n                    if (desc.extendee.typeName == typeName) {\n                        extensionsByNo.set(desc.number, desc);\n                    }\n                }\n            }\n            const desc = (_a = extensionsByExtendee.get(typeName)) === null || _a === void 0 ? void 0 : _a.get(no);\n            return desc ? this.findExtension(desc.typeName) : undefined;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findExtension(typeName) {\n            const existing = extensions.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.extensions.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const extendee = resolve(desc.extendee, this, desc);\n            const runtime = desc.file.syntax == \"proto3\" ? _proto3_js__WEBPACK_IMPORTED_MODULE_11__.proto3 : _proto2_js__WEBPACK_IMPORTED_MODULE_12__.proto2;\n            const ext = runtime.makeExtension(typeName, extendee, makeFieldInfo(desc, this));\n            extensions.set(typeName, ext);\n            return ext;\n        },\n    };\n}\nfunction makeFieldInfo(desc, registry) {\n    var _a;\n    const f = {\n        kind: desc.fieldKind,\n        no: desc.number,\n        name: desc.name,\n        jsonName: desc.jsonName,\n        delimited: desc.proto.type == _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_9__.FieldDescriptorProto_Type.GROUP,\n        repeated: desc.repeated,\n        packed: desc.packed,\n        oneof: (_a = desc.oneof) === null || _a === void 0 ? void 0 : _a.name,\n        opt: desc.optional,\n        req: desc.proto.label === _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_9__.FieldDescriptorProto_Label.REQUIRED,\n    };\n    switch (desc.fieldKind) {\n        case \"map\": {\n            (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_14__.assert)(desc.kind == \"field\"); // maps are not allowed for extensions\n            let T;\n            switch (desc.mapValue.kind) {\n                case \"scalar\":\n                    T = desc.mapValue.scalar;\n                    break;\n                case \"enum\": {\n                    T = resolve(desc.mapValue.enum, registry, desc);\n                    break;\n                }\n                case \"message\": {\n                    T = resolve(desc.mapValue.message, registry, desc);\n                    break;\n                }\n            }\n            f.K = desc.mapKey;\n            f.V = {\n                kind: desc.mapValue.kind,\n                T,\n            };\n            break;\n        }\n        case \"message\": {\n            f.T = resolve(desc.message, registry, desc);\n            break;\n        }\n        case \"enum\": {\n            f.T = resolve(desc.enum, registry, desc);\n            f.default = desc.getDefaultValue();\n            break;\n        }\n        case \"scalar\": {\n            f.L = desc.longType;\n            f.T = desc.scalar;\n            f.default = desc.getDefaultValue();\n            break;\n        }\n    }\n    return f;\n}\nfunction resolve(desc, registry, context) {\n    const type = desc.kind == \"message\"\n        ? registry.findMessage(desc.typeName)\n        : registry.findEnum(desc.typeName);\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_14__.assert)(type, `${desc.toString()}\" for ${context.toString()} not found`);\n    return type;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/create-registry-from-desc.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/create-registry.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/create-registry.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMutableRegistry: function() { return /* binding */ createMutableRegistry; },\n/* harmony export */   createRegistry: function() { return /* binding */ createRegistry; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a new registry from the given types.\n */\nfunction createRegistry(...types) {\n    const mutable = createMutableRegistry(...types);\n    delete mutable.add;\n    return mutable;\n}\n/**\n * Create a mutable registry from the given types.\n */\nfunction createMutableRegistry(...types) {\n    const messages = {};\n    const enums = {};\n    const services = {};\n    const extensionsByName = new Map();\n    const extensionsByExtendee = new Map();\n    const registry = {\n        findMessage(typeName) {\n            return messages[typeName];\n        },\n        findEnum(typeName) {\n            return enums[typeName];\n        },\n        findService(typeName) {\n            return services[typeName];\n        },\n        findExtensionFor(typeName, no) {\n            var _a, _b;\n            return (_b = (_a = extensionsByExtendee.get(typeName)) === null || _a === void 0 ? void 0 : _a.get(no)) !== null && _b !== void 0 ? _b : undefined;\n        },\n        findExtension(typeName) {\n            var _a;\n            return (_a = extensionsByName.get(typeName)) !== null && _a !== void 0 ? _a : undefined;\n        },\n        add(type) {\n            var _a;\n            if (\"fields\" in type) {\n                if (!this.findMessage(type.typeName)) {\n                    messages[type.typeName] = type;\n                    type.fields.list().forEach(addField);\n                }\n            }\n            else if (\"methods\" in type) {\n                if (!this.findService(type.typeName)) {\n                    services[type.typeName] = type;\n                    for (const method of Object.values(type.methods)) {\n                        this.add(method.I);\n                        this.add(method.O);\n                    }\n                }\n            }\n            else if (\"extendee\" in type) {\n                if (!extensionsByName.has(type.typeName)) {\n                    extensionsByName.set(type.typeName, type);\n                    const extendeeName = type.extendee.typeName;\n                    if (!extensionsByExtendee.has(extendeeName)) {\n                        extensionsByExtendee.set(extendeeName, new Map());\n                    }\n                    (_a = extensionsByExtendee.get(extendeeName)) === null || _a === void 0 ? void 0 : _a.set(type.field.no, type);\n                    this.add(type.extendee);\n                    addField(type.field);\n                }\n            }\n            else {\n                enums[type.typeName] = type;\n            }\n        },\n    };\n    function addField(field) {\n        if (field.kind == \"message\") {\n            registry.add(field.T);\n        }\n        else if (field.kind == \"map\" && field.V.kind == \"message\") {\n            registry.add(field.V.T);\n        }\n        else if (field.kind == \"enum\") {\n            registry.add(field.T);\n        }\n    }\n    for (const type of types) {\n        registry.add(type);\n    }\n    return registry;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2NyZWF0ZS1yZWdpc3RyeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9jcmVhdGUtcmVnaXN0cnkuanM/Yzk0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgcmVnaXN0cnkgZnJvbSB0aGUgZ2l2ZW4gdHlwZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWdpc3RyeSguLi50eXBlcykge1xuICAgIGNvbnN0IG11dGFibGUgPSBjcmVhdGVNdXRhYmxlUmVnaXN0cnkoLi4udHlwZXMpO1xuICAgIGRlbGV0ZSBtdXRhYmxlLmFkZDtcbiAgICByZXR1cm4gbXV0YWJsZTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgbXV0YWJsZSByZWdpc3RyeSBmcm9tIHRoZSBnaXZlbiB0eXBlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU11dGFibGVSZWdpc3RyeSguLi50eXBlcykge1xuICAgIGNvbnN0IG1lc3NhZ2VzID0ge307XG4gICAgY29uc3QgZW51bXMgPSB7fTtcbiAgICBjb25zdCBzZXJ2aWNlcyA9IHt9O1xuICAgIGNvbnN0IGV4dGVuc2lvbnNCeU5hbWUgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgZXh0ZW5zaW9uc0J5RXh0ZW5kZWUgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgcmVnaXN0cnkgPSB7XG4gICAgICAgIGZpbmRNZXNzYWdlKHR5cGVOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZXNbdHlwZU5hbWVdO1xuICAgICAgICB9LFxuICAgICAgICBmaW5kRW51bSh0eXBlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIGVudW1zW3R5cGVOYW1lXTtcbiAgICAgICAgfSxcbiAgICAgICAgZmluZFNlcnZpY2UodHlwZU5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBzZXJ2aWNlc1t0eXBlTmFtZV07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRFeHRlbnNpb25Gb3IodHlwZU5hbWUsIG5vKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgcmV0dXJuIChfYiA9IChfYSA9IGV4dGVuc2lvbnNCeUV4dGVuZGVlLmdldCh0eXBlTmFtZSkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nZXQobm8pKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRFeHRlbnNpb24odHlwZU5hbWUpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSBleHRlbnNpb25zQnlOYW1lLmdldCh0eXBlTmFtZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgYWRkKHR5cGUpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmIChcImZpZWxkc1wiIGluIHR5cGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZmluZE1lc3NhZ2UodHlwZS50eXBlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXNbdHlwZS50eXBlTmFtZV0gPSB0eXBlO1xuICAgICAgICAgICAgICAgICAgICB0eXBlLmZpZWxkcy5saXN0KCkuZm9yRWFjaChhZGRGaWVsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoXCJtZXRob2RzXCIgaW4gdHlwZSkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5maW5kU2VydmljZSh0eXBlLnR5cGVOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlc1t0eXBlLnR5cGVOYW1lXSA9IHR5cGU7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbWV0aG9kIG9mIE9iamVjdC52YWx1ZXModHlwZS5tZXRob2RzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGQobWV0aG9kLkkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGQobWV0aG9kLk8pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoXCJleHRlbmRlZVwiIGluIHR5cGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWV4dGVuc2lvbnNCeU5hbWUuaGFzKHR5cGUudHlwZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbnNCeU5hbWUuc2V0KHR5cGUudHlwZU5hbWUsIHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRlbmRlZU5hbWUgPSB0eXBlLmV4dGVuZGVlLnR5cGVOYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWV4dGVuc2lvbnNCeUV4dGVuZGVlLmhhcyhleHRlbmRlZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25zQnlFeHRlbmRlZS5zZXQoZXh0ZW5kZWVOYW1lLCBuZXcgTWFwKCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIChfYSA9IGV4dGVuc2lvbnNCeUV4dGVuZGVlLmdldChleHRlbmRlZU5hbWUpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2V0KHR5cGUuZmllbGQubm8sIHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZCh0eXBlLmV4dGVuZGVlKTtcbiAgICAgICAgICAgICAgICAgICAgYWRkRmllbGQodHlwZS5maWVsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW51bXNbdHlwZS50eXBlTmFtZV0gPSB0eXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG4gICAgZnVuY3Rpb24gYWRkRmllbGQoZmllbGQpIHtcbiAgICAgICAgaWYgKGZpZWxkLmtpbmQgPT0gXCJtZXNzYWdlXCIpIHtcbiAgICAgICAgICAgIHJlZ2lzdHJ5LmFkZChmaWVsZC5UKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChmaWVsZC5raW5kID09IFwibWFwXCIgJiYgZmllbGQuVi5raW5kID09IFwibWVzc2FnZVwiKSB7XG4gICAgICAgICAgICByZWdpc3RyeS5hZGQoZmllbGQuVi5UKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChmaWVsZC5raW5kID09IFwiZW51bVwiKSB7XG4gICAgICAgICAgICByZWdpc3RyeS5hZGQoZmllbGQuVCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCB0eXBlIG9mIHR5cGVzKSB7XG4gICAgICAgIHJlZ2lzdHJ5LmFkZCh0eXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlZ2lzdHJ5O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/create-registry.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearExtension: function() { return /* binding */ clearExtension; },\n/* harmony export */   getExtension: function() { return /* binding */ getExtension; },\n/* harmony export */   hasExtension: function() { return /* binding */ hasExtension; },\n/* harmony export */   setExtension: function() { return /* binding */ setExtension; }\n/* harmony export */ });\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _private_extensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction getExtension(message, extension, options) {\n    assertExtendee(extension, message);\n    const opt = extension.runtime.bin.makeReadOptions(options);\n    const ufs = (0,_private_extensions_js__WEBPACK_IMPORTED_MODULE_0__.filterUnknownFields)(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n    const [container, get] = (0,_private_extensions_js__WEBPACK_IMPORTED_MODULE_0__.createExtensionContainer)(extension);\n    for (const uf of ufs) {\n        extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction setExtension(message, extension, value, options) {\n    assertExtendee(extension, message);\n    const readOpt = extension.runtime.bin.makeReadOptions(options);\n    const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n    if (hasExtension(message, extension)) {\n        const ufs = message\n            .getType()\n            .runtime.bin.listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        message.getType().runtime.bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            message\n                .getType()\n                .runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n    const writer = writeOpt.writerFactory();\n    let f = extension.field;\n    // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n    // We patch the field info to use explicit presence:\n    if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n        f = Object.assign(Object.assign({}, extension.field), { opt: true });\n    }\n    extension.runtime.bin.writeField(f, value, writer, writeOpt);\n    const reader = readOpt.readerFactory(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n    }\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (hasExtension(message, extension)) {\n        const bin = message.getType().runtime.bin;\n        const ufs = bin\n            .listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n}\n/**\n * Check whether an extension is set on a message.\n */\nfunction hasExtension(message, extension) {\n    const messageType = message.getType();\n    return (extension.extendee.typeName === messageType.typeName &&\n        !!messageType.runtime.bin\n            .listUnknownFields(message)\n            .find((uf) => uf.no == extension.field.no));\n}\nfunction assertExtendee(extension, message) {\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_1__.assert)(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2V4dGVuc2lvbi1hY2Nlc3Nvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUM0QztBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLDJFQUFtQjtBQUNuQyw2QkFBNkIsZ0ZBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsc0JBQXNCLFdBQVc7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksMERBQU0seUVBQXlFLG9CQUFvQixpQ0FBaUMsNEJBQTRCO0FBQ3BLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vZXh0ZW5zaW9uLWFjY2Vzc29yLmpzPzUxNzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGFzc2VydCB9IGZyb20gXCIuL3ByaXZhdGUvYXNzZXJ0LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVFeHRlbnNpb25Db250YWluZXIsIGZpbHRlclVua25vd25GaWVsZHMsIH0gZnJvbSBcIi4vcHJpdmF0ZS9leHRlbnNpb25zLmpzXCI7XG4vKipcbiAqIFJldHJpZXZlIGFuIGV4dGVuc2lvbiB2YWx1ZSBmcm9tIGEgbWVzc2FnZS5cbiAqXG4gKiBUaGUgZnVuY3Rpb24gbmV2ZXIgcmV0dXJucyB1bmRlZmluZWQuIFVzZSBoYXNFeHRlbnNpb24oKSB0byBjaGVjayB3aGV0aGVyIGFuXG4gKiBleHRlbnNpb24gaXMgc2V0LiBJZiB0aGUgZXh0ZW5zaW9uIGlzIG5vdCBzZXQsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGVcbiAqIGRlZmF1bHQgdmFsdWUgKGlmIG9uZSB3YXMgc3BlY2lmaWVkIGluIHRoZSBwcm90b2J1ZiBzb3VyY2UpLCBvciB0aGUgemVybyB2YWx1ZVxuICogKGZvciBleGFtcGxlIGAwYCBmb3IgbnVtZXJpYyB0eXBlcywgYFtdYCBmb3IgcmVwZWF0ZWQgZXh0ZW5zaW9uIGZpZWxkcywgYW5kXG4gKiBhbiBlbXB0eSBtZXNzYWdlIGluc3RhbmNlIGZvciBtZXNzYWdlIGZpZWxkcykuXG4gKlxuICogRXh0ZW5zaW9ucyBhcmUgc3RvcmVkIGFzIHVua25vd24gZmllbGRzIG9uIGEgbWVzc2FnZS4gVG8gbXV0YXRlIGFuIGV4dGVuc2lvblxuICogdmFsdWUsIG1ha2Ugc3VyZSB0byBzdG9yZSB0aGUgbmV3IHZhbHVlIHdpdGggc2V0RXh0ZW5zaW9uKCkgYWZ0ZXIgbXV0YXRpbmcuXG4gKlxuICogSWYgdGhlIGV4dGVuc2lvbiBkb2VzIG5vdCBleHRlbmQgdGhlIGdpdmVuIG1lc3NhZ2UsIGFuIGVycm9yIGlzIHJhaXNlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEV4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24sIG9wdGlvbnMpIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGNvbnN0IG9wdCA9IGV4dGVuc2lvbi5ydW50aW1lLmJpbi5tYWtlUmVhZE9wdGlvbnMob3B0aW9ucyk7XG4gICAgY29uc3QgdWZzID0gZmlsdGVyVW5rbm93bkZpZWxkcyhtZXNzYWdlLmdldFR5cGUoKS5ydW50aW1lLmJpbi5saXN0VW5rbm93bkZpZWxkcyhtZXNzYWdlKSwgZXh0ZW5zaW9uLmZpZWxkKTtcbiAgICBjb25zdCBbY29udGFpbmVyLCBnZXRdID0gY3JlYXRlRXh0ZW5zaW9uQ29udGFpbmVyKGV4dGVuc2lvbik7XG4gICAgZm9yIChjb25zdCB1ZiBvZiB1ZnMpIHtcbiAgICAgICAgZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLnJlYWRGaWVsZChjb250YWluZXIsIG9wdC5yZWFkZXJGYWN0b3J5KHVmLmRhdGEpLCBleHRlbnNpb24uZmllbGQsIHVmLndpcmVUeXBlLCBvcHQpO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0KCk7XG59XG4vKipcbiAqIFNldCBhbiBleHRlbnNpb24gdmFsdWUgb24gYSBtZXNzYWdlLiBJZiB0aGUgbWVzc2FnZSBhbHJlYWR5IGhhcyBhIHZhbHVlIGZvclxuICogdGhpcyBleHRlbnNpb24sIHRoZSB2YWx1ZSBpcyByZXBsYWNlZC5cbiAqXG4gKiBJZiB0aGUgZXh0ZW5zaW9uIGRvZXMgbm90IGV4dGVuZCB0aGUgZ2l2ZW4gbWVzc2FnZSwgYW4gZXJyb3IgaXMgcmFpc2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0RXh0ZW5zaW9uKG1lc3NhZ2UsIGV4dGVuc2lvbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGNvbnN0IHJlYWRPcHQgPSBleHRlbnNpb24ucnVudGltZS5iaW4ubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgIGNvbnN0IHdyaXRlT3B0ID0gZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLm1ha2VXcml0ZU9wdGlvbnMob3B0aW9ucyk7XG4gICAgaWYgKGhhc0V4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pKSB7XG4gICAgICAgIGNvbnN0IHVmcyA9IG1lc3NhZ2VcbiAgICAgICAgICAgIC5nZXRUeXBlKClcbiAgICAgICAgICAgIC5ydW50aW1lLmJpbi5saXN0VW5rbm93bkZpZWxkcyhtZXNzYWdlKVxuICAgICAgICAgICAgLmZpbHRlcigodWYpID0+IHVmLm5vICE9IGV4dGVuc2lvbi5maWVsZC5ubyk7XG4gICAgICAgIG1lc3NhZ2UuZ2V0VHlwZSgpLnJ1bnRpbWUuYmluLmRpc2NhcmRVbmtub3duRmllbGRzKG1lc3NhZ2UpO1xuICAgICAgICBmb3IgKGNvbnN0IHVmIG9mIHVmcykge1xuICAgICAgICAgICAgbWVzc2FnZVxuICAgICAgICAgICAgICAgIC5nZXRUeXBlKClcbiAgICAgICAgICAgICAgICAucnVudGltZS5iaW4ub25Vbmtub3duRmllbGQobWVzc2FnZSwgdWYubm8sIHVmLndpcmVUeXBlLCB1Zi5kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB3cml0ZXIgPSB3cml0ZU9wdC53cml0ZXJGYWN0b3J5KCk7XG4gICAgbGV0IGYgPSBleHRlbnNpb24uZmllbGQ7XG4gICAgLy8gSW1wbGljaXQgcHJlc2VuY2UgZG9lcyBub3QgYXBwbHkgdG8gZXh0ZW5zaW9ucywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm90b2NvbGJ1ZmZlcnMvcHJvdG9idWYvaXNzdWVzLzgyMzRcbiAgICAvLyBXZSBwYXRjaCB0aGUgZmllbGQgaW5mbyB0byB1c2UgZXhwbGljaXQgcHJlc2VuY2U6XG4gICAgaWYgKCFmLm9wdCAmJiAhZi5yZXBlYXRlZCAmJiAoZi5raW5kID09IFwiZW51bVwiIHx8IGYua2luZCA9PSBcInNjYWxhclwiKSkge1xuICAgICAgICBmID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBleHRlbnNpb24uZmllbGQpLCB7IG9wdDogdHJ1ZSB9KTtcbiAgICB9XG4gICAgZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLndyaXRlRmllbGQoZiwgdmFsdWUsIHdyaXRlciwgd3JpdGVPcHQpO1xuICAgIGNvbnN0IHJlYWRlciA9IHJlYWRPcHQucmVhZGVyRmFjdG9yeSh3cml0ZXIuZmluaXNoKCkpO1xuICAgIHdoaWxlIChyZWFkZXIucG9zIDwgcmVhZGVyLmxlbikge1xuICAgICAgICBjb25zdCBbbm8sIHdpcmVUeXBlXSA9IHJlYWRlci50YWcoKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHJlYWRlci5za2lwKHdpcmVUeXBlLCBubyk7XG4gICAgICAgIG1lc3NhZ2UuZ2V0VHlwZSgpLnJ1bnRpbWUuYmluLm9uVW5rbm93bkZpZWxkKG1lc3NhZ2UsIG5vLCB3aXJlVHlwZSwgZGF0YSk7XG4gICAgfVxufVxuLyoqXG4gKiBSZW1vdmUgYW4gZXh0ZW5zaW9uIHZhbHVlIGZyb20gYSBtZXNzYWdlLlxuICpcbiAqIElmIHRoZSBleHRlbnNpb24gZG9lcyBub3QgZXh0ZW5kIHRoZSBnaXZlbiBtZXNzYWdlLCBhbiBlcnJvciBpcyByYWlzZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckV4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGlmIChoYXNFeHRlbnNpb24obWVzc2FnZSwgZXh0ZW5zaW9uKSkge1xuICAgICAgICBjb25zdCBiaW4gPSBtZXNzYWdlLmdldFR5cGUoKS5ydW50aW1lLmJpbjtcbiAgICAgICAgY29uc3QgdWZzID0gYmluXG4gICAgICAgICAgICAubGlzdFVua25vd25GaWVsZHMobWVzc2FnZSlcbiAgICAgICAgICAgIC5maWx0ZXIoKHVmKSA9PiB1Zi5ubyAhPSBleHRlbnNpb24uZmllbGQubm8pO1xuICAgICAgICBiaW4uZGlzY2FyZFVua25vd25GaWVsZHMobWVzc2FnZSk7XG4gICAgICAgIGZvciAoY29uc3QgdWYgb2YgdWZzKSB7XG4gICAgICAgICAgICBiaW4ub25Vbmtub3duRmllbGQobWVzc2FnZSwgdWYubm8sIHVmLndpcmVUeXBlLCB1Zi5kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBleHRlbnNpb24gaXMgc2V0IG9uIGEgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0V4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pIHtcbiAgICBjb25zdCBtZXNzYWdlVHlwZSA9IG1lc3NhZ2UuZ2V0VHlwZSgpO1xuICAgIHJldHVybiAoZXh0ZW5zaW9uLmV4dGVuZGVlLnR5cGVOYW1lID09PSBtZXNzYWdlVHlwZS50eXBlTmFtZSAmJlxuICAgICAgICAhIW1lc3NhZ2VUeXBlLnJ1bnRpbWUuYmluXG4gICAgICAgICAgICAubGlzdFVua25vd25GaWVsZHMobWVzc2FnZSlcbiAgICAgICAgICAgIC5maW5kKCh1ZikgPT4gdWYubm8gPT0gZXh0ZW5zaW9uLmZpZWxkLm5vKSk7XG59XG5mdW5jdGlvbiBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpIHtcbiAgICBhc3NlcnQoZXh0ZW5zaW9uLmV4dGVuZGVlLnR5cGVOYW1lID09IG1lc3NhZ2UuZ2V0VHlwZSgpLnR5cGVOYW1lLCBgZXh0ZW5zaW9uICR7ZXh0ZW5zaW9uLnR5cGVOYW1lfSBjYW4gb25seSBiZSBhcHBsaWVkIHRvIG1lc3NhZ2UgJHtleHRlbnNpb24uZXh0ZW5kZWUudHlwZU5hbWV9YCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Any: function() { return /* binding */ Any; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *     // or ...\n *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n *       foo = any.unpack(Foo.getDefaultInstance());\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */\nclass Any extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one \"/\" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g., leading \".\" is not accepted).\n         *\n         * In practice, teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However, for URLs which use the\n         * scheme `http`, `https`, or no scheme, one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided, `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format, or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL, or have them precompiled into a binary to avoid any\n         *   lookup. Therefore, binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release, and it is not used for type URLs beginning with\n         * type.googleapis.com. As of May 2023, there are no widely used type server\n         * implementations and no plans to implement one.\n         *\n         * Schemes other than `http`, `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */\n        this.typeUrl = \"\";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */\n        this.value = new Uint8Array(0);\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === \"\") {\n            return {};\n        }\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n        }\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith(\"google.protobuf.\") || (json === null || Array.isArray(json) || typeof json !== \"object\")) {\n            json = { value: json };\n        }\n        json[\"@type\"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json, options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != \"object\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n        }\n        if (Object.keys(json).length == 0) {\n            return this;\n        }\n        const typeUrl = json[\"@type\"];\n        if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n        }\n        const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        }\n        let message;\n        if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) {\n            message = messageType.fromJson(json[\"value\"], options);\n        }\n        else {\n            const copy = Object.assign({}, json);\n            delete copy[\"@type\"];\n            message = messageType.fromJson(copy, options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) {\n            return false;\n        }\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === \"\") {\n            return undefined;\n        }\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) {\n            return undefined;\n        }\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === '') {\n            return false;\n        }\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = '';\n        if (typeof type === 'string') {\n            typeName = type;\n        }\n        else {\n            typeName = type.typeName;\n        }\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        const slash = url.lastIndexOf(\"/\");\n        const name = slash >= 0 ? url.substring(slash + 1) : url;\n        if (!name.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        return name;\n    }\n    static pack(message) {\n        const any = new Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes, options) {\n        return new Any().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Any().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Any().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Any, a, b);\n    }\n}\nAny.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nAny.typeName = \"google.protobuf.Any\";\nAny.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/api_pb.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/api_pb.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Api: function() { return /* binding */ Api; },\n/* harmony export */   Method: function() { return /* binding */ Method; },\n/* harmony export */   Mixin: function() { return /* binding */ Mixin; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _type_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js\");\n/* harmony import */ var _source_context_pb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./source_context_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Api is a light-weight descriptor for an API Interface.\n *\n * Interfaces are also described as \"protocol buffer services\" in some contexts,\n * such as by the \"service\" keyword in a .proto file, but they are different\n * from API Services, which represent a concrete implementation of an interface\n * as opposed to simply a description of methods and bindings. They are also\n * sometimes simply referred to as \"APIs\" in other contexts, such as the name of\n * this message itself. See https://cloud.google.com/apis/design/glossary for\n * detailed terminology.\n *\n * @generated from message google.protobuf.Api\n */\nclass Api extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of this interface, including package name\n         * followed by the interface's simple name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The methods of this interface, in unspecified order.\n         *\n         * @generated from field: repeated google.protobuf.Method methods = 2;\n         */\n        this.methods = [];\n        /**\n         * Any metadata attached to the interface.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * A version string for this interface. If specified, must have the form\n         * `major-version.minor-version`, as in `1.10`. If the minor version is\n         * omitted, it defaults to zero. If the entire version field is empty, the\n         * major version is derived from the package name, as outlined below. If the\n         * field is not empty, the version in the package name will be verified to be\n         * consistent with what is provided here.\n         *\n         * The versioning schema uses [semantic\n         * versioning](http://semver.org) where the major version number\n         * indicates a breaking change and the minor version an additive,\n         * non-breaking change. Both version numbers are signals to users\n         * what to expect from different versions, and should be carefully\n         * chosen based on the product plan.\n         *\n         * The major version is also reflected in the package name of the\n         * interface, which must end in `v<major-version>`, as in\n         * `google.feature.v1`. For major versions 0 and 1, the suffix can\n         * be omitted. Zero major versions must only be used for\n         * experimental, non-GA interfaces.\n         *\n         *\n         * @generated from field: string version = 4;\n         */\n        this.version = \"\";\n        /**\n         * Included interfaces. See [Mixin][].\n         *\n         * @generated from field: repeated google.protobuf.Mixin mixins = 6;\n         */\n        this.mixins = [];\n        /**\n         * The source syntax of the service.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = _type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Syntax.PROTO2;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Api().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Api().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Api().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.equals(Api, a, b);\n    }\n}\nApi.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3;\nApi.typeName = \"google.protobuf.Api\";\nApi.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"methods\", kind: \"message\", T: Method, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: _type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Option, repeated: true },\n    { no: 4, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"source_context\", kind: \"message\", T: _source_context_pb_js__WEBPACK_IMPORTED_MODULE_3__.SourceContext },\n    { no: 6, name: \"mixins\", kind: \"message\", T: Mixin, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.getEnumType(_type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Syntax) },\n]);\n/**\n * Method represents a method of an API interface.\n *\n * @generated from message google.protobuf.Method\n */\nclass Method extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The simple name of this method.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * A URL of the input message type.\n         *\n         * @generated from field: string request_type_url = 2;\n         */\n        this.requestTypeUrl = \"\";\n        /**\n         * If true, the request is streamed.\n         *\n         * @generated from field: bool request_streaming = 3;\n         */\n        this.requestStreaming = false;\n        /**\n         * The URL of the output message type.\n         *\n         * @generated from field: string response_type_url = 4;\n         */\n        this.responseTypeUrl = \"\";\n        /**\n         * If true, the response is streamed.\n         *\n         * @generated from field: bool response_streaming = 5;\n         */\n        this.responseStreaming = false;\n        /**\n         * Any metadata attached to the method.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 6;\n         */\n        this.options = [];\n        /**\n         * The source syntax of this method.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = _type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Syntax.PROTO2;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Method().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Method().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Method().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.equals(Method, a, b);\n    }\n}\nMethod.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3;\nMethod.typeName = \"google.protobuf.Method\";\nMethod.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"request_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"request_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"response_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"response_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"options\", kind: \"message\", T: _type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Option, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.getEnumType(_type_pb_js__WEBPACK_IMPORTED_MODULE_1__.Syntax) },\n]);\n/**\n * Declares an API Interface to be included in this interface. The including\n * interface must redeclare all the methods from the included interface, but\n * documentation and options are inherited as follows:\n *\n * - If after comment and whitespace stripping, the documentation\n *   string of the redeclared method is empty, it will be inherited\n *   from the original method.\n *\n * - Each annotation belonging to the service config (http,\n *   visibility) which is not set in the redeclared method will be\n *   inherited.\n *\n * - If an http annotation is inherited, the path pattern will be\n *   modified as follows. Any version prefix will be replaced by the\n *   version of the including interface plus the [root][] path if\n *   specified.\n *\n * Example of a simple mixin:\n *\n *     package google.acl.v1;\n *     service AccessControl {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n *       }\n *     }\n *\n *     package google.storage.v2;\n *     service Storage {\n *       rpc GetAcl(GetAclRequest) returns (Acl);\n *\n *       // Get a data record.\n *       rpc GetData(GetDataRequest) returns (Data) {\n *         option (google.api.http).get = \"/v2/{resource=**}\";\n *       }\n *     }\n *\n * Example of a mixin configuration:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *\n * The mixin construct implies that all methods in `AccessControl` are\n * also declared with same name and request/response types in\n * `Storage`. A documentation generator or annotation processor will\n * see the effective `Storage.GetAcl` method after inherting\n * documentation and annotations as follows:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * Note how the version in the path pattern changed from `v1` to `v2`.\n *\n * If the `root` field in the mixin is specified, it should be a\n * relative path under which inherited HTTP paths are placed. Example:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *         root: acls\n *\n * This implies the following inherited HTTP annotation:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * @generated from message google.protobuf.Mixin\n */\nclass Mixin extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of the interface which is included.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * If non-empty specifies a path under which inherited HTTP paths\n         * are rooted.\n         *\n         * @generated from field: string root = 2;\n         */\n        this.root = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Mixin().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Mixin().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Mixin().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.equals(Mixin, a, b);\n    }\n}\nMixin.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3;\nMixin.typeName = \"google.protobuf.Mixin\";\nMixin.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"root\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/api_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CodeGeneratorRequest: function() { return /* binding */ CodeGeneratorRequest; },\n/* harmony export */   CodeGeneratorResponse: function() { return /* binding */ CodeGeneratorResponse; },\n/* harmony export */   CodeGeneratorResponse_Feature: function() { return /* binding */ CodeGeneratorResponse_Feature; },\n/* harmony export */   CodeGeneratorResponse_File: function() { return /* binding */ CodeGeneratorResponse_File; },\n/* harmony export */   Version: function() { return /* binding */ Version; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../proto2.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto2.js\");\n/* harmony import */ var _descriptor_pb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../descriptor_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * The version number of protocol compiler.\n *\n * @generated from message google.protobuf.compiler.Version\n */\nclass Version extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Version().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Version().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Version().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.equals(Version, a, b);\n    }\n}\nVersion.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2;\nVersion.typeName = \"google.protobuf.compiler.Version\";\nVersion.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"major\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"minor\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"patch\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"suffix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * An encoded CodeGeneratorRequest is written to the plugin's stdin.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorRequest\n */\nclass CodeGeneratorRequest extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The .proto files that were explicitly listed on the command-line.  The\n         * code generator should generate code only for these files.  Each file's\n         * descriptor will be included in proto_file, below.\n         *\n         * @generated from field: repeated string file_to_generate = 1;\n         */\n        this.fileToGenerate = [];\n        /**\n         * FileDescriptorProtos for all files in files_to_generate and everything\n         * they import.  The files will appear in topological order, so each file\n         * appears before any file that imports it.\n         *\n         * Note: the files listed in files_to_generate will include runtime-retention\n         * options only, but all other files will include source-retention options.\n         * The source_file_descriptors field below is available in case you need\n         * source-retention options for files_to_generate.\n         *\n         * protoc guarantees that all proto_files will be written after\n         * the fields above, even though this is not technically guaranteed by the\n         * protobuf wire format.  This theoretically could allow a plugin to stream\n         * in the FileDescriptorProtos and handle them one by one rather than read\n         * the entire set into memory at once.  However, as of this writing, this\n         * is not similarly optimized on protoc's end -- it will store all fields in\n         * memory at once before sending them to the plugin.\n         *\n         * Type names of fields and extensions in the FileDescriptorProto are always\n         * fully qualified.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_file = 15;\n         */\n        this.protoFile = [];\n        /**\n         * File descriptors with all options, including source-retention options.\n         * These descriptors are only provided for the files listed in\n         * files_to_generate.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto source_file_descriptors = 17;\n         */\n        this.sourceFileDescriptors = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.equals(CodeGeneratorRequest, a, b);\n    }\n}\nCodeGeneratorRequest.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2;\nCodeGeneratorRequest.typeName = \"google.protobuf.compiler.CodeGeneratorRequest\";\nCodeGeneratorRequest.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"file_to_generate\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"parameter\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"proto_file\", kind: \"message\", T: _descriptor_pb_js__WEBPACK_IMPORTED_MODULE_2__.FileDescriptorProto, repeated: true },\n    { no: 17, name: \"source_file_descriptors\", kind: \"message\", T: _descriptor_pb_js__WEBPACK_IMPORTED_MODULE_2__.FileDescriptorProto, repeated: true },\n    { no: 3, name: \"compiler_version\", kind: \"message\", T: Version, opt: true },\n]);\n/**\n * The plugin writes an encoded CodeGeneratorResponse to stdout.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse\n */\nclass CodeGeneratorResponse extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.compiler.CodeGeneratorResponse.File file = 15;\n         */\n        this.file = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.equals(CodeGeneratorResponse, a, b);\n    }\n}\nCodeGeneratorResponse.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2;\nCodeGeneratorResponse.typeName = \"google.protobuf.compiler.CodeGeneratorResponse\";\nCodeGeneratorResponse.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"supported_features\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 3, name: \"minimum_edition\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"maximum_edition\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 15, name: \"file\", kind: \"message\", T: CodeGeneratorResponse_File, repeated: true },\n]);\n/**\n * Sync with code_generator.h.\n *\n * @generated from enum google.protobuf.compiler.CodeGeneratorResponse.Feature\n */\nvar CodeGeneratorResponse_Feature;\n(function (CodeGeneratorResponse_Feature) {\n    /**\n     * @generated from enum value: FEATURE_NONE = 0;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * @generated from enum value: FEATURE_PROTO3_OPTIONAL = 1;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"PROTO3_OPTIONAL\"] = 1] = \"PROTO3_OPTIONAL\";\n    /**\n     * @generated from enum value: FEATURE_SUPPORTS_EDITIONS = 2;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"SUPPORTS_EDITIONS\"] = 2] = \"SUPPORTS_EDITIONS\";\n})(CodeGeneratorResponse_Feature || (CodeGeneratorResponse_Feature = {}));\n// Retrieve enum metadata with: proto2.getEnumType(CodeGeneratorResponse_Feature)\n_proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.setEnumType(CodeGeneratorResponse_Feature, \"google.protobuf.compiler.CodeGeneratorResponse.Feature\", [\n    { no: 0, name: \"FEATURE_NONE\" },\n    { no: 1, name: \"FEATURE_PROTO3_OPTIONAL\" },\n    { no: 2, name: \"FEATURE_SUPPORTS_EDITIONS\" },\n]);\n/**\n * Represents a single generated file.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse.File\n */\nclass CodeGeneratorResponse_File extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse_File().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse_File().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse_File().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.equals(CodeGeneratorResponse_File, a, b);\n    }\n}\nCodeGeneratorResponse_File.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2;\nCodeGeneratorResponse_File.typeName = \"google.protobuf.compiler.CodeGeneratorResponse.File\";\nCodeGeneratorResponse_File.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"insertion_point\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"generated_code_info\", kind: \"message\", T: _descriptor_pb_js__WEBPACK_IMPORTED_MODULE_2__.GeneratedCodeInfo, opt: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DescriptorProto: function() { return /* binding */ DescriptorProto; },\n/* harmony export */   DescriptorProto_ExtensionRange: function() { return /* binding */ DescriptorProto_ExtensionRange; },\n/* harmony export */   DescriptorProto_ReservedRange: function() { return /* binding */ DescriptorProto_ReservedRange; },\n/* harmony export */   Edition: function() { return /* binding */ Edition; },\n/* harmony export */   EnumDescriptorProto: function() { return /* binding */ EnumDescriptorProto; },\n/* harmony export */   EnumDescriptorProto_EnumReservedRange: function() { return /* binding */ EnumDescriptorProto_EnumReservedRange; },\n/* harmony export */   EnumOptions: function() { return /* binding */ EnumOptions; },\n/* harmony export */   EnumValueDescriptorProto: function() { return /* binding */ EnumValueDescriptorProto; },\n/* harmony export */   EnumValueOptions: function() { return /* binding */ EnumValueOptions; },\n/* harmony export */   ExtensionRangeOptions: function() { return /* binding */ ExtensionRangeOptions; },\n/* harmony export */   ExtensionRangeOptions_Declaration: function() { return /* binding */ ExtensionRangeOptions_Declaration; },\n/* harmony export */   ExtensionRangeOptions_VerificationState: function() { return /* binding */ ExtensionRangeOptions_VerificationState; },\n/* harmony export */   FeatureSet: function() { return /* binding */ FeatureSet; },\n/* harmony export */   FeatureSetDefaults: function() { return /* binding */ FeatureSetDefaults; },\n/* harmony export */   FeatureSetDefaults_FeatureSetEditionDefault: function() { return /* binding */ FeatureSetDefaults_FeatureSetEditionDefault; },\n/* harmony export */   FeatureSet_EnumType: function() { return /* binding */ FeatureSet_EnumType; },\n/* harmony export */   FeatureSet_FieldPresence: function() { return /* binding */ FeatureSet_FieldPresence; },\n/* harmony export */   FeatureSet_JsonFormat: function() { return /* binding */ FeatureSet_JsonFormat; },\n/* harmony export */   FeatureSet_MessageEncoding: function() { return /* binding */ FeatureSet_MessageEncoding; },\n/* harmony export */   FeatureSet_RepeatedFieldEncoding: function() { return /* binding */ FeatureSet_RepeatedFieldEncoding; },\n/* harmony export */   FeatureSet_Utf8Validation: function() { return /* binding */ FeatureSet_Utf8Validation; },\n/* harmony export */   FieldDescriptorProto: function() { return /* binding */ FieldDescriptorProto; },\n/* harmony export */   FieldDescriptorProto_Label: function() { return /* binding */ FieldDescriptorProto_Label; },\n/* harmony export */   FieldDescriptorProto_Type: function() { return /* binding */ FieldDescriptorProto_Type; },\n/* harmony export */   FieldOptions: function() { return /* binding */ FieldOptions; },\n/* harmony export */   FieldOptions_CType: function() { return /* binding */ FieldOptions_CType; },\n/* harmony export */   FieldOptions_EditionDefault: function() { return /* binding */ FieldOptions_EditionDefault; },\n/* harmony export */   FieldOptions_FeatureSupport: function() { return /* binding */ FieldOptions_FeatureSupport; },\n/* harmony export */   FieldOptions_JSType: function() { return /* binding */ FieldOptions_JSType; },\n/* harmony export */   FieldOptions_OptionRetention: function() { return /* binding */ FieldOptions_OptionRetention; },\n/* harmony export */   FieldOptions_OptionTargetType: function() { return /* binding */ FieldOptions_OptionTargetType; },\n/* harmony export */   FileDescriptorProto: function() { return /* binding */ FileDescriptorProto; },\n/* harmony export */   FileDescriptorSet: function() { return /* binding */ FileDescriptorSet; },\n/* harmony export */   FileOptions: function() { return /* binding */ FileOptions; },\n/* harmony export */   FileOptions_OptimizeMode: function() { return /* binding */ FileOptions_OptimizeMode; },\n/* harmony export */   GeneratedCodeInfo: function() { return /* binding */ GeneratedCodeInfo; },\n/* harmony export */   GeneratedCodeInfo_Annotation: function() { return /* binding */ GeneratedCodeInfo_Annotation; },\n/* harmony export */   GeneratedCodeInfo_Annotation_Semantic: function() { return /* binding */ GeneratedCodeInfo_Annotation_Semantic; },\n/* harmony export */   MessageOptions: function() { return /* binding */ MessageOptions; },\n/* harmony export */   MethodDescriptorProto: function() { return /* binding */ MethodDescriptorProto; },\n/* harmony export */   MethodOptions: function() { return /* binding */ MethodOptions; },\n/* harmony export */   MethodOptions_IdempotencyLevel: function() { return /* binding */ MethodOptions_IdempotencyLevel; },\n/* harmony export */   OneofDescriptorProto: function() { return /* binding */ OneofDescriptorProto; },\n/* harmony export */   OneofOptions: function() { return /* binding */ OneofOptions; },\n/* harmony export */   ServiceDescriptorProto: function() { return /* binding */ ServiceDescriptorProto; },\n/* harmony export */   ServiceOptions: function() { return /* binding */ ServiceOptions; },\n/* harmony export */   SourceCodeInfo: function() { return /* binding */ SourceCodeInfo; },\n/* harmony export */   SourceCodeInfo_Location: function() { return /* binding */ SourceCodeInfo_Location; },\n/* harmony export */   UninterpretedOption: function() { return /* binding */ UninterpretedOption; },\n/* harmony export */   UninterpretedOption_NamePart: function() { return /* binding */ UninterpretedOption_NamePart; }\n/* harmony export */ });\n/* harmony import */ var _proto2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../proto2.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto2.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Author: kenton@google.com (Kenton Varda)\n//  Based on original Protocol Buffers design by\n//  Sanjay Ghemawat, Jeff Dean, and others.\n//\n// The messages in this file describe the definitions found in .proto files.\n// A valid .proto file can be translated directly to a FileDescriptorProto\n// without any other information (e.g. without reading its imports).\n// @generated by protoc-gen-es v1.10.1 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/descriptor.proto (package google.protobuf, syntax proto2)\n/* eslint-disable */\n\n\n/**\n * The full set of known editions.\n *\n * @generated from enum google.protobuf.Edition\n */\nvar Edition;\n(function (Edition) {\n    /**\n     * A placeholder for an unknown edition value.\n     *\n     * @generated from enum value: EDITION_UNKNOWN = 0;\n     */\n    Edition[Edition[\"EDITION_UNKNOWN\"] = 0] = \"EDITION_UNKNOWN\";\n    /**\n     * A placeholder edition for specifying default behaviors *before* a feature\n     * was first introduced.  This is effectively an \"infinite past\".\n     *\n     * @generated from enum value: EDITION_LEGACY = 900;\n     */\n    Edition[Edition[\"EDITION_LEGACY\"] = 900] = \"EDITION_LEGACY\";\n    /**\n     * Legacy syntax \"editions\".  These pre-date editions, but behave much like\n     * distinct editions.  These can't be used to specify the edition of proto\n     * files, but feature definitions must supply proto2/proto3 defaults for\n     * backwards compatibility.\n     *\n     * @generated from enum value: EDITION_PROTO2 = 998;\n     */\n    Edition[Edition[\"EDITION_PROTO2\"] = 998] = \"EDITION_PROTO2\";\n    /**\n     * @generated from enum value: EDITION_PROTO3 = 999;\n     */\n    Edition[Edition[\"EDITION_PROTO3\"] = 999] = \"EDITION_PROTO3\";\n    /**\n     * Editions that have been released.  The specific values are arbitrary and\n     * should not be depended on, but they will always be time-ordered for easy\n     * comparison.\n     *\n     * @generated from enum value: EDITION_2023 = 1000;\n     */\n    Edition[Edition[\"EDITION_2023\"] = 1000] = \"EDITION_2023\";\n    /**\n     * @generated from enum value: EDITION_2024 = 1001;\n     */\n    Edition[Edition[\"EDITION_2024\"] = 1001] = \"EDITION_2024\";\n    /**\n     * Placeholder editions for testing feature resolution.  These should not be\n     * used or relyed on outside of tests.\n     *\n     * @generated from enum value: EDITION_1_TEST_ONLY = 1;\n     */\n    Edition[Edition[\"EDITION_1_TEST_ONLY\"] = 1] = \"EDITION_1_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_2_TEST_ONLY = 2;\n     */\n    Edition[Edition[\"EDITION_2_TEST_ONLY\"] = 2] = \"EDITION_2_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99997_TEST_ONLY = 99997;\n     */\n    Edition[Edition[\"EDITION_99997_TEST_ONLY\"] = 99997] = \"EDITION_99997_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99998_TEST_ONLY = 99998;\n     */\n    Edition[Edition[\"EDITION_99998_TEST_ONLY\"] = 99998] = \"EDITION_99998_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99999_TEST_ONLY = 99999;\n     */\n    Edition[Edition[\"EDITION_99999_TEST_ONLY\"] = 99999] = \"EDITION_99999_TEST_ONLY\";\n    /**\n     * Placeholder for specifying unbounded edition support.  This should only\n     * ever be used by plugins that can expect to never require any changes to\n     * support a new edition.\n     *\n     * @generated from enum value: EDITION_MAX = 2147483647;\n     */\n    Edition[Edition[\"EDITION_MAX\"] = 2147483647] = \"EDITION_MAX\";\n})(Edition || (Edition = {}));\n// Retrieve enum metadata with: proto2.getEnumType(Edition)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(Edition, \"google.protobuf.Edition\", [\n    { no: 0, name: \"EDITION_UNKNOWN\" },\n    { no: 900, name: \"EDITION_LEGACY\" },\n    { no: 998, name: \"EDITION_PROTO2\" },\n    { no: 999, name: \"EDITION_PROTO3\" },\n    { no: 1000, name: \"EDITION_2023\" },\n    { no: 1001, name: \"EDITION_2024\" },\n    { no: 1, name: \"EDITION_1_TEST_ONLY\" },\n    { no: 2, name: \"EDITION_2_TEST_ONLY\" },\n    { no: 99997, name: \"EDITION_99997_TEST_ONLY\" },\n    { no: 99998, name: \"EDITION_99998_TEST_ONLY\" },\n    { no: 99999, name: \"EDITION_99999_TEST_ONLY\" },\n    { no: 2147483647, name: \"EDITION_MAX\" },\n]);\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n *\n * @generated from message google.protobuf.FileDescriptorSet\n */\nclass FileDescriptorSet extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FileDescriptorProto file = 1;\n         */\n        this.file = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FileDescriptorSet, a, b);\n    }\n}\nFileDescriptorSet.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFileDescriptorSet.typeName = \"google.protobuf.FileDescriptorSet\";\nFileDescriptorSet.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"file\", kind: \"message\", T: FileDescriptorProto, repeated: true },\n]);\n/**\n * Describes a complete .proto file.\n *\n * @generated from message google.protobuf.FileDescriptorProto\n */\nclass FileDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Names of files imported by this file.\n         *\n         * @generated from field: repeated string dependency = 3;\n         */\n        this.dependency = [];\n        /**\n         * Indexes of the public imported files in the dependency list above.\n         *\n         * @generated from field: repeated int32 public_dependency = 10;\n         */\n        this.publicDependency = [];\n        /**\n         * Indexes of the weak imported files in the dependency list.\n         * For Google-internal migration only. Do not use.\n         *\n         * @generated from field: repeated int32 weak_dependency = 11;\n         */\n        this.weakDependency = [];\n        /**\n         * All top-level definitions in this file.\n         *\n         * @generated from field: repeated google.protobuf.DescriptorProto message_type = 4;\n         */\n        this.messageType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 5;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.ServiceDescriptorProto service = 6;\n         */\n        this.service = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 7;\n         */\n        this.extension = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FileDescriptorProto, a, b);\n    }\n}\nFileDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFileDescriptorProto.typeName = \"google.protobuf.FileDescriptorProto\";\nFileDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"dependency\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 10, name: \"public_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 11, name: \"weak_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 4, name: \"message_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 5, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 6, name: \"service\", kind: \"message\", T: ServiceDescriptorProto, repeated: true },\n    { no: 7, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FileOptions, opt: true },\n    { no: 9, name: \"source_code_info\", kind: \"message\", T: SourceCodeInfo, opt: true },\n    { no: 12, name: \"syntax\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 14, name: \"edition\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * Describes a message type.\n *\n * @generated from message google.protobuf.DescriptorProto\n */\nclass DescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto field = 2;\n         */\n        this.field = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 6;\n         */\n        this.extension = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto nested_type = 3;\n         */\n        this.nestedType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 4;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;\n         */\n        this.extensionRange = [];\n        /**\n         * @generated from field: repeated google.protobuf.OneofDescriptorProto oneof_decl = 8;\n         */\n        this.oneofDecl = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved field names, which may not be used by fields in the same message.\n         * A given name may only be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 10;\n         */\n        this.reservedName = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(DescriptorProto, a, b);\n    }\n}\nDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nDescriptorProto.typeName = \"google.protobuf.DescriptorProto\";\nDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"field\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 6, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 3, name: \"nested_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 4, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 5, name: \"extension_range\", kind: \"message\", T: DescriptorProto_ExtensionRange, repeated: true },\n    { no: 8, name: \"oneof_decl\", kind: \"message\", T: OneofDescriptorProto, repeated: true },\n    { no: 7, name: \"options\", kind: \"message\", T: MessageOptions, opt: true },\n    { no: 9, name: \"reserved_range\", kind: \"message\", T: DescriptorProto_ReservedRange, repeated: true },\n    { no: 10, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.DescriptorProto.ExtensionRange\n */\nclass DescriptorProto_ExtensionRange extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ExtensionRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ExtensionRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ExtensionRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(DescriptorProto_ExtensionRange, a, b);\n    }\n}\nDescriptorProto_ExtensionRange.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nDescriptorProto_ExtensionRange.typeName = \"google.protobuf.DescriptorProto.ExtensionRange\";\nDescriptorProto_ExtensionRange.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ExtensionRangeOptions, opt: true },\n]);\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n *\n * @generated from message google.protobuf.DescriptorProto.ReservedRange\n */\nclass DescriptorProto_ReservedRange extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(DescriptorProto_ReservedRange, a, b);\n    }\n}\nDescriptorProto_ReservedRange.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nDescriptorProto_ReservedRange.typeName = \"google.protobuf.DescriptorProto.ReservedRange\";\nDescriptorProto_ReservedRange.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions\n */\nclass ExtensionRangeOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        /**\n         * For external users: DO NOT USE. We are in the process of open sourcing\n         * extension declaration and executing internal cleanups before it can be\n         * used externally.\n         *\n         * @generated from field: repeated google.protobuf.ExtensionRangeOptions.Declaration declaration = 2;\n         */\n        this.declaration = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(ExtensionRangeOptions, a, b);\n    }\n}\nExtensionRangeOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nExtensionRangeOptions.typeName = \"google.protobuf.ExtensionRangeOptions\";\nExtensionRangeOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n    { no: 2, name: \"declaration\", kind: \"message\", T: ExtensionRangeOptions_Declaration, repeated: true },\n    { no: 50, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 3, name: \"verification\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(ExtensionRangeOptions_VerificationState), opt: true, default: ExtensionRangeOptions_VerificationState.UNVERIFIED },\n]);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */\nvar ExtensionRangeOptions_VerificationState;\n(function (ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})(ExtensionRangeOptions_VerificationState || (ExtensionRangeOptions_VerificationState = {}));\n// Retrieve enum metadata with: proto2.getEnumType(ExtensionRangeOptions_VerificationState)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(ExtensionRangeOptions_VerificationState, \"google.protobuf.ExtensionRangeOptions.VerificationState\", [\n    { no: 0, name: \"DECLARATION\" },\n    { no: 1, name: \"UNVERIFIED\" },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions.Declaration\n */\nclass ExtensionRangeOptions_Declaration extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions_Declaration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions_Declaration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions_Declaration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(ExtensionRangeOptions_Declaration, a, b);\n    }\n}\nExtensionRangeOptions_Declaration.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nExtensionRangeOptions_Declaration.typeName = \"google.protobuf.ExtensionRangeOptions.Declaration\";\nExtensionRangeOptions_Declaration.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"full_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"reserved\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"repeated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * Describes a field within a message.\n *\n * @generated from message google.protobuf.FieldDescriptorProto\n */\nclass FieldDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FieldDescriptorProto, a, b);\n    }\n}\nFieldDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFieldDescriptorProto.typeName = \"google.protobuf.FieldDescriptorProto\";\nFieldDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"label\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldDescriptorProto_Label), opt: true },\n    { no: 5, name: \"type\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldDescriptorProto_Type), opt: true },\n    { no: 6, name: \"type_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"extendee\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 9, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FieldOptions, opt: true },\n    { no: 17, name: \"proto3_optional\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nvar FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported after google.protobuf. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.  In Editions, the group wire format\n     * can be enabled via the `message_encoding` feature.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})(FieldDescriptorProto_Type || (FieldDescriptorProto_Type = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Type)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldDescriptorProto_Type, \"google.protobuf.FieldDescriptorProto.Type\", [\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nvar FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n    /**\n     * The required label is only allowed in google.protobuf.  In proto3 and Editions\n     * it's explicitly prohibited.  In Editions, the `field_presence` feature\n     * can be used to get this behavior.\n     *\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n})(FieldDescriptorProto_Label || (FieldDescriptorProto_Label = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Label)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldDescriptorProto_Label, \"google.protobuf.FieldDescriptorProto.Label\", [\n    { no: 1, name: \"LABEL_OPTIONAL\" },\n    { no: 3, name: \"LABEL_REPEATED\" },\n    { no: 2, name: \"LABEL_REQUIRED\" },\n]);\n/**\n * Describes a oneof.\n *\n * @generated from message google.protobuf.OneofDescriptorProto\n */\nclass OneofDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(OneofDescriptorProto, a, b);\n    }\n}\nOneofDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nOneofDescriptorProto.typeName = \"google.protobuf.OneofDescriptorProto\";\nOneofDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"options\", kind: \"message\", T: OneofOptions, opt: true },\n]);\n/**\n * Describes an enum type.\n *\n * @generated from message google.protobuf.EnumDescriptorProto\n */\nclass EnumDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.EnumValueDescriptorProto value = 2;\n         */\n        this.value = [];\n        /**\n         * Range of reserved numeric values. Reserved numeric values may not be used\n         * by enum values in the same enum declaration. Reserved ranges may not\n         * overlap.\n         *\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved enum value names, which may not be reused. A given name may only\n         * be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 5;\n         */\n        this.reservedName = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(EnumDescriptorProto, a, b);\n    }\n}\nEnumDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nEnumDescriptorProto.typeName = \"google.protobuf.EnumDescriptorProto\";\nEnumDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"value\", kind: \"message\", T: EnumValueDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumOptions, opt: true },\n    { no: 4, name: \"reserved_range\", kind: \"message\", T: EnumDescriptorProto_EnumReservedRange, repeated: true },\n    { no: 5, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n *\n * @generated from message google.protobuf.EnumDescriptorProto.EnumReservedRange\n */\nclass EnumDescriptorProto_EnumReservedRange extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(EnumDescriptorProto_EnumReservedRange, a, b);\n    }\n}\nEnumDescriptorProto_EnumReservedRange.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nEnumDescriptorProto_EnumReservedRange.typeName = \"google.protobuf.EnumDescriptorProto.EnumReservedRange\";\nEnumDescriptorProto_EnumReservedRange.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * Describes a value within an enum.\n *\n * @generated from message google.protobuf.EnumValueDescriptorProto\n */\nclass EnumValueDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(EnumValueDescriptorProto, a, b);\n    }\n}\nEnumValueDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nEnumValueDescriptorProto.typeName = \"google.protobuf.EnumValueDescriptorProto\";\nEnumValueDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumValueOptions, opt: true },\n]);\n/**\n * Describes a service.\n *\n * @generated from message google.protobuf.ServiceDescriptorProto\n */\nclass ServiceDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.MethodDescriptorProto method = 2;\n         */\n        this.method = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(ServiceDescriptorProto, a, b);\n    }\n}\nServiceDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nServiceDescriptorProto.typeName = \"google.protobuf.ServiceDescriptorProto\";\nServiceDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"method\", kind: \"message\", T: MethodDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ServiceOptions, opt: true },\n]);\n/**\n * Describes a method of a service.\n *\n * @generated from message google.protobuf.MethodDescriptorProto\n */\nclass MethodDescriptorProto extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(MethodDescriptorProto, a, b);\n    }\n}\nMethodDescriptorProto.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nMethodDescriptorProto.typeName = \"google.protobuf.MethodDescriptorProto\";\nMethodDescriptorProto.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"input_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"output_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"options\", kind: \"message\", T: MethodOptions, opt: true },\n    { no: 5, name: \"client_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"server_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n]);\n/**\n * @generated from message google.protobuf.FileOptions\n */\nclass FileOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here.\n         * See the documentation for the \"Options\" section above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FileOptions, a, b);\n    }\n}\nFileOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFileOptions.typeName = \"google.protobuf.FileOptions\";\nFileOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"java_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"java_outer_classname\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 10, name: \"java_multiple_files\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 20, name: \"java_generate_equals_and_hash\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 27, name: \"java_string_check_utf8\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 9, name: \"optimize_for\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FileOptions_OptimizeMode), opt: true, default: FileOptions_OptimizeMode.SPEED },\n    { no: 11, name: \"go_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"cc_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"java_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 18, name: \"py_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 23, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 31, name: \"cc_enable_arenas\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: true },\n    { no: 36, name: \"objc_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 37, name: \"csharp_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 39, name: \"swift_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 40, name: \"php_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 41, name: \"php_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 44, name: \"php_metadata_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 45, name: \"ruby_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 50, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nvar FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})(FileOptions_OptimizeMode || (FileOptions_OptimizeMode = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FileOptions_OptimizeMode)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FileOptions_OptimizeMode, \"google.protobuf.FileOptions.OptimizeMode\", [\n    { no: 1, name: \"SPEED\" },\n    { no: 2, name: \"CODE_SIZE\" },\n    { no: 3, name: \"LITE_RUNTIME\" },\n]);\n/**\n * @generated from message google.protobuf.MessageOptions\n */\nclass MessageOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MessageOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MessageOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MessageOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(MessageOptions, a, b);\n    }\n}\nMessageOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nMessageOptions.typeName = \"google.protobuf.MessageOptions\";\nMessageOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"message_set_wire_format\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 2, name: \"no_standard_descriptor_accessor\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 7, name: \"map_entry\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 11, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 12, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.FieldOptions\n */\nclass FieldOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.OptionTargetType targets = 19;\n         */\n        this.targets = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.EditionDefault edition_defaults = 20;\n         */\n        this.editionDefaults = [];\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FieldOptions, a, b);\n    }\n}\nFieldOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFieldOptions.typeName = \"google.protobuf.FieldOptions\";\nFieldOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"ctype\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldOptions_CType), opt: true, default: FieldOptions_CType.STRING },\n    { no: 2, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"jstype\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldOptions_JSType), opt: true, default: FieldOptions_JSType.JS_NORMAL },\n    { no: 5, name: \"lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 15, name: \"unverified_lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 10, name: \"weak\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 16, name: \"debug_redact\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"retention\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldOptions_OptionRetention), opt: true },\n    { no: 19, name: \"targets\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FieldOptions_OptionTargetType), repeated: true },\n    { no: 20, name: \"edition_defaults\", kind: \"message\", T: FieldOptions_EditionDefault, repeated: true },\n    { no: 21, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 22, name: \"feature_support\", kind: \"message\", T: FieldOptions_FeatureSupport, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nvar FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})(FieldOptions_CType || (FieldOptions_CType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_CType)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldOptions_CType, \"google.protobuf.FieldOptions.CType\", [\n    { no: 0, name: \"STRING\" },\n    { no: 1, name: \"CORD\" },\n    { no: 2, name: \"STRING_PIECE\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nvar FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})(FieldOptions_JSType || (FieldOptions_JSType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_JSType)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldOptions_JSType, \"google.protobuf.FieldOptions.JSType\", [\n    { no: 0, name: \"JS_NORMAL\" },\n    { no: 1, name: \"JS_STRING\" },\n    { no: 2, name: \"JS_NUMBER\" },\n]);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n * Note: as of January 2023, support for this is in progress and does not yet\n * have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */\nvar FieldOptions_OptionRetention;\n(function (FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})(FieldOptions_OptionRetention || (FieldOptions_OptionRetention = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionRetention)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldOptions_OptionRetention, \"google.protobuf.FieldOptions.OptionRetention\", [\n    { no: 0, name: \"RETENTION_UNKNOWN\" },\n    { no: 1, name: \"RETENTION_RUNTIME\" },\n    { no: 2, name: \"RETENTION_SOURCE\" },\n]);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity. Note: as of January 2023, support for this is\n * in progress and does not yet have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */\nvar FieldOptions_OptionTargetType;\n(function (FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})(FieldOptions_OptionTargetType || (FieldOptions_OptionTargetType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionTargetType)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FieldOptions_OptionTargetType, \"google.protobuf.FieldOptions.OptionTargetType\", [\n    { no: 0, name: \"TARGET_TYPE_UNKNOWN\" },\n    { no: 1, name: \"TARGET_TYPE_FILE\" },\n    { no: 2, name: \"TARGET_TYPE_EXTENSION_RANGE\" },\n    { no: 3, name: \"TARGET_TYPE_MESSAGE\" },\n    { no: 4, name: \"TARGET_TYPE_FIELD\" },\n    { no: 5, name: \"TARGET_TYPE_ONEOF\" },\n    { no: 6, name: \"TARGET_TYPE_ENUM\" },\n    { no: 7, name: \"TARGET_TYPE_ENUM_ENTRY\" },\n    { no: 8, name: \"TARGET_TYPE_SERVICE\" },\n    { no: 9, name: \"TARGET_TYPE_METHOD\" },\n]);\n/**\n * @generated from message google.protobuf.FieldOptions.EditionDefault\n */\nclass FieldOptions_EditionDefault extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions_EditionDefault().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions_EditionDefault().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions_EditionDefault().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FieldOptions_EditionDefault, a, b);\n    }\n}\nFieldOptions_EditionDefault.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFieldOptions_EditionDefault.typeName = \"google.protobuf.FieldOptions.EditionDefault\";\nFieldOptions_EditionDefault.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 3, name: \"edition\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * Information about the support window of a feature.\n *\n * @generated from message google.protobuf.FieldOptions.FeatureSupport\n */\nclass FieldOptions_FeatureSupport extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions_FeatureSupport().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions_FeatureSupport().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions_FeatureSupport().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FieldOptions_FeatureSupport, a, b);\n    }\n}\nFieldOptions_FeatureSupport.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFieldOptions_FeatureSupport.typeName = \"google.protobuf.FieldOptions.FeatureSupport\";\nFieldOptions_FeatureSupport.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"edition_introduced\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n    { no: 2, name: \"edition_deprecated\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n    { no: 3, name: \"deprecation_warning\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"edition_removed\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * @generated from message google.protobuf.OneofOptions\n */\nclass OneofOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(OneofOptions, a, b);\n    }\n}\nOneofOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nOneofOptions.typeName = \"google.protobuf.OneofOptions\";\nOneofOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumOptions\n */\nclass EnumOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(EnumOptions, a, b);\n    }\n}\nEnumOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nEnumOptions.typeName = \"google.protobuf.EnumOptions\";\nEnumOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 2, name: \"allow_alias\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 7, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumValueOptions\n */\nclass EnumValueOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(EnumValueOptions, a, b);\n    }\n}\nEnumValueOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nEnumValueOptions.typeName = \"google.protobuf.EnumValueOptions\";\nEnumValueOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 2, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 3, name: \"debug_redact\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 4, name: \"feature_support\", kind: \"message\", T: FieldOptions_FeatureSupport, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.ServiceOptions\n */\nclass ServiceOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(ServiceOptions, a, b);\n    }\n}\nServiceOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nServiceOptions.typeName = \"google.protobuf.ServiceOptions\";\nServiceOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 34, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.MethodOptions\n */\nclass MethodOptions extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(MethodOptions, a, b);\n    }\n}\nMethodOptions.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nMethodOptions.typeName = \"google.protobuf.MethodOptions\";\nMethodOptions.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 34, name: \"idempotency_level\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(MethodOptions_IdempotencyLevel), opt: true, default: MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN },\n    { no: 35, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nvar MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})(MethodOptions_IdempotencyLevel || (MethodOptions_IdempotencyLevel = {}));\n// Retrieve enum metadata with: proto2.getEnumType(MethodOptions_IdempotencyLevel)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(MethodOptions_IdempotencyLevel, \"google.protobuf.MethodOptions.IdempotencyLevel\", [\n    { no: 0, name: \"IDEMPOTENCY_UNKNOWN\" },\n    { no: 1, name: \"NO_SIDE_EFFECTS\" },\n    { no: 2, name: \"IDEMPOTENT\" },\n]);\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n *\n * @generated from message google.protobuf.UninterpretedOption\n */\nclass UninterpretedOption extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.UninterpretedOption.NamePart name = 2;\n         */\n        this.name = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(UninterpretedOption, a, b);\n    }\n}\nUninterpretedOption.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nUninterpretedOption.typeName = \"google.protobuf.UninterpretedOption\";\nUninterpretedOption.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 2, name: \"name\", kind: \"message\", T: UninterpretedOption_NamePart, repeated: true },\n    { no: 3, name: \"identifier_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"positive_int_value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 5, name: \"negative_int_value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, opt: true },\n    { no: 6, name: \"double_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 7, name: \"string_value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n    { no: 8, name: \"aggregate_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n * \"foo.(bar.baz).moo\".\n *\n * @generated from message google.protobuf.UninterpretedOption.NamePart\n */\nclass UninterpretedOption_NamePart extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption_NamePart().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption_NamePart().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption_NamePart().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(UninterpretedOption_NamePart, a, b);\n    }\n}\nUninterpretedOption_NamePart.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nUninterpretedOption_NamePart.typeName = \"google.protobuf.UninterpretedOption.NamePart\";\nUninterpretedOption_NamePart.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name_part\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"is_extension\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n]);\n/**\n * TODO Enums in C++ gencode (and potentially other languages) are\n * not well scoped.  This means that each of the feature enums below can clash\n * with each other.  The short names we've chosen maximize call-site\n * readability, but leave us very open to this scenario.  A future feature will\n * be designed and implemented to handle this, hopefully before we ever hit a\n * conflict here.\n *\n * @generated from message google.protobuf.FeatureSet\n */\nclass FeatureSet extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FeatureSet, a, b);\n    }\n}\nFeatureSet.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFeatureSet.typeName = \"google.protobuf.FeatureSet\";\nFeatureSet.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"field_presence\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_FieldPresence), opt: true },\n    { no: 2, name: \"enum_type\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_EnumType), opt: true },\n    { no: 3, name: \"repeated_field_encoding\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_RepeatedFieldEncoding), opt: true },\n    { no: 4, name: \"utf8_validation\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_Utf8Validation), opt: true },\n    { no: 5, name: \"message_encoding\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_MessageEncoding), opt: true },\n    { no: 6, name: \"json_format\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(FeatureSet_JsonFormat), opt: true },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.FieldPresence\n */\nvar FeatureSet_FieldPresence;\n(function (FeatureSet_FieldPresence) {\n    /**\n     * @generated from enum value: FIELD_PRESENCE_UNKNOWN = 0;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"FIELD_PRESENCE_UNKNOWN\"] = 0] = \"FIELD_PRESENCE_UNKNOWN\";\n    /**\n     * @generated from enum value: EXPLICIT = 1;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"EXPLICIT\"] = 1] = \"EXPLICIT\";\n    /**\n     * @generated from enum value: IMPLICIT = 2;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"IMPLICIT\"] = 2] = \"IMPLICIT\";\n    /**\n     * @generated from enum value: LEGACY_REQUIRED = 3;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"LEGACY_REQUIRED\"] = 3] = \"LEGACY_REQUIRED\";\n})(FeatureSet_FieldPresence || (FeatureSet_FieldPresence = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_FieldPresence)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_FieldPresence, \"google.protobuf.FeatureSet.FieldPresence\", [\n    { no: 0, name: \"FIELD_PRESENCE_UNKNOWN\" },\n    { no: 1, name: \"EXPLICIT\" },\n    { no: 2, name: \"IMPLICIT\" },\n    { no: 3, name: \"LEGACY_REQUIRED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnumType\n */\nvar FeatureSet_EnumType;\n(function (FeatureSet_EnumType) {\n    /**\n     * @generated from enum value: ENUM_TYPE_UNKNOWN = 0;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"ENUM_TYPE_UNKNOWN\"] = 0] = \"ENUM_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: OPEN = 1;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"OPEN\"] = 1] = \"OPEN\";\n    /**\n     * @generated from enum value: CLOSED = 2;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"CLOSED\"] = 2] = \"CLOSED\";\n})(FeatureSet_EnumType || (FeatureSet_EnumType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_EnumType)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_EnumType, \"google.protobuf.FeatureSet.EnumType\", [\n    { no: 0, name: \"ENUM_TYPE_UNKNOWN\" },\n    { no: 1, name: \"OPEN\" },\n    { no: 2, name: \"CLOSED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.RepeatedFieldEncoding\n */\nvar FeatureSet_RepeatedFieldEncoding;\n(function (FeatureSet_RepeatedFieldEncoding) {\n    /**\n     * @generated from enum value: REPEATED_FIELD_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"REPEATED_FIELD_ENCODING_UNKNOWN\"] = 0] = \"REPEATED_FIELD_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: PACKED = 1;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * @generated from enum value: EXPANDED = 2;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"EXPANDED\"] = 2] = \"EXPANDED\";\n})(FeatureSet_RepeatedFieldEncoding || (FeatureSet_RepeatedFieldEncoding = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_RepeatedFieldEncoding)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_RepeatedFieldEncoding, \"google.protobuf.FeatureSet.RepeatedFieldEncoding\", [\n    { no: 0, name: \"REPEATED_FIELD_ENCODING_UNKNOWN\" },\n    { no: 1, name: \"PACKED\" },\n    { no: 2, name: \"EXPANDED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.Utf8Validation\n */\nvar FeatureSet_Utf8Validation;\n(function (FeatureSet_Utf8Validation) {\n    /**\n     * @generated from enum value: UTF8_VALIDATION_UNKNOWN = 0;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"UTF8_VALIDATION_UNKNOWN\"] = 0] = \"UTF8_VALIDATION_UNKNOWN\";\n    /**\n     * @generated from enum value: VERIFY = 2;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"VERIFY\"] = 2] = \"VERIFY\";\n    /**\n     * @generated from enum value: NONE = 3;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"NONE\"] = 3] = \"NONE\";\n})(FeatureSet_Utf8Validation || (FeatureSet_Utf8Validation = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_Utf8Validation)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_Utf8Validation, \"google.protobuf.FeatureSet.Utf8Validation\", [\n    { no: 0, name: \"UTF8_VALIDATION_UNKNOWN\" },\n    { no: 2, name: \"VERIFY\" },\n    { no: 3, name: \"NONE\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.MessageEncoding\n */\nvar FeatureSet_MessageEncoding;\n(function (FeatureSet_MessageEncoding) {\n    /**\n     * @generated from enum value: MESSAGE_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"MESSAGE_ENCODING_UNKNOWN\"] = 0] = \"MESSAGE_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: LENGTH_PREFIXED = 1;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"LENGTH_PREFIXED\"] = 1] = \"LENGTH_PREFIXED\";\n    /**\n     * @generated from enum value: DELIMITED = 2;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"DELIMITED\"] = 2] = \"DELIMITED\";\n})(FeatureSet_MessageEncoding || (FeatureSet_MessageEncoding = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_MessageEncoding)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_MessageEncoding, \"google.protobuf.FeatureSet.MessageEncoding\", [\n    { no: 0, name: \"MESSAGE_ENCODING_UNKNOWN\" },\n    { no: 1, name: \"LENGTH_PREFIXED\" },\n    { no: 2, name: \"DELIMITED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.JsonFormat\n */\nvar FeatureSet_JsonFormat;\n(function (FeatureSet_JsonFormat) {\n    /**\n     * @generated from enum value: JSON_FORMAT_UNKNOWN = 0;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"JSON_FORMAT_UNKNOWN\"] = 0] = \"JSON_FORMAT_UNKNOWN\";\n    /**\n     * @generated from enum value: ALLOW = 1;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"ALLOW\"] = 1] = \"ALLOW\";\n    /**\n     * @generated from enum value: LEGACY_BEST_EFFORT = 2;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"LEGACY_BEST_EFFORT\"] = 2] = \"LEGACY_BEST_EFFORT\";\n})(FeatureSet_JsonFormat || (FeatureSet_JsonFormat = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_JsonFormat)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(FeatureSet_JsonFormat, \"google.protobuf.FeatureSet.JsonFormat\", [\n    { no: 0, name: \"JSON_FORMAT_UNKNOWN\" },\n    { no: 1, name: \"ALLOW\" },\n    { no: 2, name: \"LEGACY_BEST_EFFORT\" },\n]);\n/**\n * A compiled specification for the defaults of a set of features.  These\n * messages are generated from FeatureSet extensions and can be used to seed\n * feature resolution. The resolution with this object becomes a simple search\n * for the closest matching edition, followed by proto merges.\n *\n * @generated from message google.protobuf.FeatureSetDefaults\n */\nclass FeatureSetDefaults extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault defaults = 1;\n         */\n        this.defaults = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSetDefaults().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSetDefaults().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSetDefaults().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FeatureSetDefaults, a, b);\n    }\n}\nFeatureSetDefaults.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFeatureSetDefaults.typeName = \"google.protobuf.FeatureSetDefaults\";\nFeatureSetDefaults.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"defaults\", kind: \"message\", T: FeatureSetDefaults_FeatureSetEditionDefault, repeated: true },\n    { no: 4, name: \"minimum_edition\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n    { no: 5, name: \"maximum_edition\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * A map from every known edition with a unique set of defaults to its\n * defaults. Not all editions may be contained here.  For a given edition,\n * the defaults at the closest matching edition ordered at or before it should\n * be used.  This field must be in strict ascending order by edition.\n *\n * @generated from message google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\n */\nclass FeatureSetDefaults_FeatureSetEditionDefault extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(FeatureSetDefaults_FeatureSetEditionDefault, a, b);\n    }\n}\nFeatureSetDefaults_FeatureSetEditionDefault.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nFeatureSetDefaults_FeatureSetEditionDefault.typeName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\";\nFeatureSetDefaults_FeatureSetEditionDefault.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 3, name: \"edition\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(Edition), opt: true },\n    { no: 4, name: \"overridable_features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 5, name: \"fixed_features\", kind: \"message\", T: FeatureSet, opt: true },\n]);\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n *\n * @generated from message google.protobuf.SourceCodeInfo\n */\nclass SourceCodeInfo extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * A Location identifies a piece of source code in a .proto file which\n         * corresponds to a particular definition.  This information is intended\n         * to be useful to IDEs, code indexers, documentation generators, and similar\n         * tools.\n         *\n         * For example, say we have a file like:\n         *   message Foo {\n         *     optional string foo = 1;\n         *   }\n         * Let's look at just the field definition:\n         *   optional string foo = 1;\n         *   ^       ^^     ^^  ^  ^^^\n         *   a       bc     de  f  ghi\n         * We have the following locations:\n         *   span   path               represents\n         *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n         *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n         *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n         *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n         *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n         *\n         * Notes:\n         * - A location may refer to a repeated field itself (i.e. not to any\n         *   particular index within it).  This is used whenever a set of elements are\n         *   logically enclosed in a single code segment.  For example, an entire\n         *   extend block (possibly containing multiple extension definitions) will\n         *   have an outer location whose path refers to the \"extensions\" repeated\n         *   field without an index.\n         * - Multiple locations may have the same path.  This happens when a single\n         *   logical declaration is spread out across multiple places.  The most\n         *   obvious example is the \"extend\" block again -- there may be multiple\n         *   extend blocks in the same scope, each of which will have the same path.\n         * - A location's span is not always a subset of its parent's span.  For\n         *   example, the \"extendee\" of an extension declaration appears at the\n         *   beginning of the \"extend\" block and is shared by all extensions within\n         *   the block.\n         * - Just because a location's span is a subset of some other location's span\n         *   does not mean that it is a descendant.  For example, a \"group\" defines\n         *   both a type and a field in a single declaration.  Thus, the locations\n         *   corresponding to the type and field and their components will overlap.\n         * - Code which tries to interpret locations should probably be designed to\n         *   ignore those that it doesn't understand, as more types of locations could\n         *   be recorded in the future.\n         *\n         * @generated from field: repeated google.protobuf.SourceCodeInfo.Location location = 1;\n         */\n        this.location = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(SourceCodeInfo, a, b);\n    }\n}\nSourceCodeInfo.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nSourceCodeInfo.typeName = \"google.protobuf.SourceCodeInfo\";\nSourceCodeInfo.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"location\", kind: \"message\", T: SourceCodeInfo_Location, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.SourceCodeInfo.Location\n */\nclass SourceCodeInfo_Location extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies which part of the FileDescriptorProto was defined at this\n         * location.\n         *\n         * Each element is a field number or an index.  They form a path from\n         * the root FileDescriptorProto to the place where the definition appears.\n         * For example, this path:\n         *   [ 4, 3, 2, 7, 1 ]\n         * refers to:\n         *   file.message_type(3)  // 4, 3\n         *       .field(7)         // 2, 7\n         *       .name()           // 1\n         * This is because FileDescriptorProto.message_type has field number 4:\n         *   repeated DescriptorProto message_type = 4;\n         * and DescriptorProto.field has field number 2:\n         *   repeated FieldDescriptorProto field = 2;\n         * and FieldDescriptorProto.name has field number 1:\n         *   optional string name = 1;\n         *\n         * Thus, the above path gives the location of a field name.  If we removed\n         * the last element:\n         *   [ 4, 3, 2, 7 ]\n         * this path refers to the whole field declaration (from the beginning\n         * of the label to the terminating semicolon).\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        /**\n         * Always has exactly three or four elements: start line, start column,\n         * end line (optional, otherwise assumed same as start line), end column.\n         * These are packed into a single field for efficiency.  Note that line\n         * and column numbers are zero-based -- typically you will want to add\n         * 1 to each before displaying to a user.\n         *\n         * @generated from field: repeated int32 span = 2 [packed = true];\n         */\n        this.span = [];\n        /**\n         * @generated from field: repeated string leading_detached_comments = 6;\n         */\n        this.leadingDetachedComments = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo_Location().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo_Location().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo_Location().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(SourceCodeInfo_Location, a, b);\n    }\n}\nSourceCodeInfo_Location.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nSourceCodeInfo_Location.typeName = \"google.protobuf.SourceCodeInfo.Location\";\nSourceCodeInfo_Location.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"span\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 3, name: \"leading_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"trailing_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"leading_detached_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n *\n * @generated from message google.protobuf.GeneratedCodeInfo\n */\nclass GeneratedCodeInfo extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * An Annotation connects some span of text in generated code to an element\n         * of its generating .proto file.\n         *\n         * @generated from field: repeated google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;\n         */\n        this.annotation = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(GeneratedCodeInfo, a, b);\n    }\n}\nGeneratedCodeInfo.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nGeneratedCodeInfo.typeName = \"google.protobuf.GeneratedCodeInfo\";\nGeneratedCodeInfo.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"annotation\", kind: \"message\", T: GeneratedCodeInfo_Annotation, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.GeneratedCodeInfo.Annotation\n */\nclass GeneratedCodeInfo_Annotation extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies the element in the original source .proto file. This field\n         * is formatted the same as SourceCodeInfo.Location.path.\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo_Annotation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo_Annotation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo_Annotation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.equals(GeneratedCodeInfo_Annotation, a, b);\n    }\n}\nGeneratedCodeInfo_Annotation.runtime = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2;\nGeneratedCodeInfo_Annotation.typeName = \"google.protobuf.GeneratedCodeInfo.Annotation\";\nGeneratedCodeInfo_Annotation.fields = _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"source_file\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"begin\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 5, name: \"semantic\", kind: \"enum\", T: _proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic), opt: true },\n]);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */\nvar GeneratedCodeInfo_Annotation_Semantic;\n(function (GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})(GeneratedCodeInfo_Annotation_Semantic || (GeneratedCodeInfo_Annotation_Semantic = {}));\n// Retrieve enum metadata with: proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic)\n_proto2_js__WEBPACK_IMPORTED_MODULE_0__.proto2.util.setEnumType(GeneratedCodeInfo_Annotation_Semantic, \"google.protobuf.GeneratedCodeInfo.Annotation.Semantic\", [\n    { no: 0, name: \"NONE\" },\n    { no: 1, name: \"SET\" },\n    { no: 2, name: \"ALIAS\" },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Duration: function() { return /* binding */ Duration; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n *\n *\n * @generated from message google.protobuf.Duration\n */\nclass Duration extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Signed seconds of the span of time. Must be from -315,576,000,000\n         * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n         * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.zero;\n        /**\n         * Signed fractions of a second at nanosecond resolution of the span\n         * of time. Durations less than one second are represented with a 0\n         * `seconds` field and a positive or negative `nanos` field. For durations\n         * of one second or more, a non-zero value for the `nanos` field must be\n         * of the same sign as the `seconds` field. Must be from -999,999,999\n         * to +999,999,999 inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${_proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.json.debug(json)}`);\n        }\n        const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n        if (match === null) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${_proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.json.debug(json)}`);\n        }\n        const longSeconds = Number(match[1]);\n        if (longSeconds > 315576000000 || longSeconds < -315576000000) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${_proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.json.debug(json)}`);\n        }\n        this.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.parse(longSeconds);\n        if (typeof match[2] == \"string\") {\n            const nanosStr = match[2] + \"0\".repeat(9 - match[2].length);\n            this.nanos = parseInt(nanosStr);\n            if (longSeconds < 0 || Object.is(longSeconds, -0)) {\n                this.nanos = -this.nanos;\n            }\n        }\n        return this;\n    }\n    toJson(options) {\n        if (Number(this.seconds) > 315576000000 || Number(this.seconds) < -315576000000) {\n            throw new Error(`cannot encode google.protobuf.Duration to JSON: value out of range`);\n        }\n        let text = this.seconds.toString();\n        if (this.nanos !== 0) {\n            let nanosStr = Math.abs(this.nanos).toString();\n            nanosStr = \"0\".repeat(9 - nanosStr.length) + nanosStr;\n            if (nanosStr.substring(3) === \"000000\") {\n                nanosStr = nanosStr.substring(0, 3);\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                nanosStr = nanosStr.substring(0, 6);\n            }\n            text += \".\" + nanosStr;\n            if (this.nanos < 0 && Number(this.seconds) == 0) {\n                text = \"-\" + text;\n            }\n        }\n        return text + \"s\";\n    }\n    static fromBinary(bytes, options) {\n        return new Duration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Duration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Duration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.equals(Duration, a, b);\n    }\n}\nDuration.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3;\nDuration.typeName = \"google.protobuf.Duration\";\nDuration.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Empty: function() { return /* binding */ Empty; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * A generic empty message that you can re-use to avoid defining duplicated\n * empty messages in your APIs. A typical example is to use it as the request\n * or the response type of an API method. For instance:\n *\n *     service Foo {\n *       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *     }\n *\n *\n * @generated from message google.protobuf.Empty\n */\nclass Empty extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Empty().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Empty().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Empty().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Empty, a, b);\n    }\n}\nEmpty.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nEmpty.typeName = \"google.protobuf.Empty\";\nEmpty.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => []);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2dvb2dsZS9wcm90b2J1Zi9lbXB0eV9wYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMyQztBQUNGO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixnREFBTztBQUNsQztBQUNBO0FBQ0EsUUFBUSw4Q0FBTTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUFNO0FBQ3JCO0FBQ0E7QUFDQSxnQkFBZ0IsOENBQU07QUFDdEI7QUFDQSxlQUFlLDhDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vZ29vZ2xlL3Byb3RvYnVmL2VtcHR5X3BiLmpzPzUyNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi4vLi4vbWVzc2FnZS5qc1wiO1xuaW1wb3J0IHsgcHJvdG8zIH0gZnJvbSBcIi4uLy4uL3Byb3RvMy5qc1wiO1xuLyoqXG4gKiBBIGdlbmVyaWMgZW1wdHkgbWVzc2FnZSB0aGF0IHlvdSBjYW4gcmUtdXNlIHRvIGF2b2lkIGRlZmluaW5nIGR1cGxpY2F0ZWRcbiAqIGVtcHR5IG1lc3NhZ2VzIGluIHlvdXIgQVBJcy4gQSB0eXBpY2FsIGV4YW1wbGUgaXMgdG8gdXNlIGl0IGFzIHRoZSByZXF1ZXN0XG4gKiBvciB0aGUgcmVzcG9uc2UgdHlwZSBvZiBhbiBBUEkgbWV0aG9kLiBGb3IgaW5zdGFuY2U6XG4gKlxuICogICAgIHNlcnZpY2UgRm9vIHtcbiAqICAgICAgIHJwYyBCYXIoZ29vZ2xlLnByb3RvYnVmLkVtcHR5KSByZXR1cm5zIChnb29nbGUucHJvdG9idWYuRW1wdHkpO1xuICogICAgIH1cbiAqXG4gKlxuICogQGdlbmVyYXRlZCBmcm9tIG1lc3NhZ2UgZ29vZ2xlLnByb3RvYnVmLkVtcHR5XG4gKi9cbmV4cG9ydCBjbGFzcyBFbXB0eSBleHRlbmRzIE1lc3NhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgcHJvdG8zLnV0aWwuaW5pdFBhcnRpYWwoZGF0YSwgdGhpcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgRW1wdHkoKS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IEVtcHR5KCkuZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFbXB0eSgpLmZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBzdGF0aWMgZXF1YWxzKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvMy51dGlsLmVxdWFscyhFbXB0eSwgYSwgYik7XG4gICAgfVxufVxuRW1wdHkucnVudGltZSA9IHByb3RvMztcbkVtcHR5LnR5cGVOYW1lID0gXCJnb29nbGUucHJvdG9idWYuRW1wdHlcIjtcbkVtcHR5LmZpZWxkcyA9IHByb3RvMy51dGlsLm5ld0ZpZWxkTGlzdCgoKSA9PiBbXSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FieldMask: function() { return /* binding */ FieldMask; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * `FieldMask` represents a set of symbolic field paths, for example:\n *\n *     paths: \"f.a\"\n *     paths: \"f.b.d\"\n *\n * Here `f` represents a field in some root message, `a` and `b`\n * fields in the message found in `f`, and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection, a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example, if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x,y and z\n * (their value will be set to the default, and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation, the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation, the\n * field mask applies directly to the response, but in case of a REST\n * list operation, the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method,\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case, the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values, the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation, new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation, then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example, given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: [\"f.b\", \"f.c\"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1, 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default, the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence, in order to reset all fields of a resource, provide a default\n * instance of the resource and set all fields in the mask, or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update, the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution, this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior, a specific service may require a client to always specify\n * a field mask, producing an error if not.\n *\n * As with get operations, the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case, the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON, a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example, consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: \"user.display_name\"\n *       paths: \"photo\"\n *     }\n *\n * In JSON, the same mask is represented as below:\n *\n *     {\n *       mask: \"user.displayName,photo\"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: \"name\"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: \"sub_message\"\n *     }\n *\n * Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths, and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */\nclass FieldMask extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */\n        this.paths = [];\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for (let i = 0; i < snakeCase.length; i++) {\n                let c = snakeCase.charAt(i);\n                switch (c) {\n                    case '_':\n                        capNext = true;\n                        break;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join('');\n        }\n        return this.paths.map(p => {\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n                throw new Error(\"cannot encode google.protobuf.FieldMask to JSON: lowerCamelCase of path name \\\"\" + p + \"\\\" is irreversible\");\n            }\n            return protoCamelCase(p);\n        }).join(\",\");\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: \" + _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.debug(json));\n        }\n        if (json === \"\") {\n            return this;\n        }\n        function camelToSnake(str) {\n            if (str.includes(\"_\")) {\n                throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase\");\n            }\n            const sc = str.replace(/[A-Z]/g, letter => \"_\" + letter.toLowerCase());\n            return (sc[0] === \"_\") ? sc.substring(1) : sc;\n        }\n        this.paths = json.split(\",\").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FieldMask().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldMask().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldMask().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(FieldMask, a, b);\n    }\n}\nFieldMask.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nFieldMask.typeName = \"google.protobuf.FieldMask\";\nFieldMask.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"paths\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SourceContext: function() { return /* binding */ SourceContext; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * `SourceContext` represents information about the source of a\n * protobuf element, like the file in which it is defined.\n *\n * @generated from message google.protobuf.SourceContext\n */\nclass SourceContext extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The path-qualified name of the .proto file that contained the associated\n         * protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n         *\n         * @generated from field: string file_name = 1;\n         */\n        this.fileName = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceContext().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceContext().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceContext().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(SourceContext, a, b);\n    }\n}\nSourceContext.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nSourceContext.typeName = \"google.protobuf.SourceContext\";\nSourceContext.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"file_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2dvb2dsZS9wcm90b2J1Zi9zb3VyY2VfY29udGV4dF9wYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMyQztBQUNGO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QixnREFBTztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhDQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOENBQU07QUFDckI7QUFDQTtBQUNBLHdCQUF3Qiw4Q0FBTTtBQUM5QjtBQUNBLHVCQUF1Qiw4Q0FBTTtBQUM3QixNQUFNLHdFQUF3RTtBQUM5RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2dvb2dsZS9wcm90b2J1Zi9zb3VyY2VfY29udGV4dF9wYi5qcz9iZGYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4uLy4uL21lc3NhZ2UuanNcIjtcbmltcG9ydCB7IHByb3RvMyB9IGZyb20gXCIuLi8uLi9wcm90bzMuanNcIjtcbi8qKlxuICogYFNvdXJjZUNvbnRleHRgIHJlcHJlc2VudHMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNvdXJjZSBvZiBhXG4gKiBwcm90b2J1ZiBlbGVtZW50LCBsaWtlIHRoZSBmaWxlIGluIHdoaWNoIGl0IGlzIGRlZmluZWQuXG4gKlxuICogQGdlbmVyYXRlZCBmcm9tIG1lc3NhZ2UgZ29vZ2xlLnByb3RvYnVmLlNvdXJjZUNvbnRleHRcbiAqL1xuZXhwb3J0IGNsYXNzIFNvdXJjZUNvbnRleHQgZXh0ZW5kcyBNZXNzYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgcGF0aC1xdWFsaWZpZWQgbmFtZSBvZiB0aGUgLnByb3RvIGZpbGUgdGhhdCBjb250YWluZWQgdGhlIGFzc29jaWF0ZWRcbiAgICAgICAgICogcHJvdG9idWYgZWxlbWVudC4gIEZvciBleGFtcGxlOiBgXCJnb29nbGUvcHJvdG9idWYvc291cmNlX2NvbnRleHQucHJvdG9cImAuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBnZW5lcmF0ZWQgZnJvbSBmaWVsZDogc3RyaW5nIGZpbGVfbmFtZSA9IDE7XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmZpbGVOYW1lID0gXCJcIjtcbiAgICAgICAgcHJvdG8zLnV0aWwuaW5pdFBhcnRpYWwoZGF0YSwgdGhpcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgU291cmNlQ29udGV4dCgpLmZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgU291cmNlQ29udGV4dCgpLmZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgU291cmNlQ29udGV4dCgpLmZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBzdGF0aWMgZXF1YWxzKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvMy51dGlsLmVxdWFscyhTb3VyY2VDb250ZXh0LCBhLCBiKTtcbiAgICB9XG59XG5Tb3VyY2VDb250ZXh0LnJ1bnRpbWUgPSBwcm90bzM7XG5Tb3VyY2VDb250ZXh0LnR5cGVOYW1lID0gXCJnb29nbGUucHJvdG9idWYuU291cmNlQ29udGV4dFwiO1xuU291cmNlQ29udGV4dC5maWVsZHMgPSBwcm90bzMudXRpbC5uZXdGaWVsZExpc3QoKCkgPT4gW1xuICAgIHsgbm86IDEsIG5hbWU6IFwiZmlsZV9uYW1lXCIsIGtpbmQ6IFwic2NhbGFyXCIsIFQ6IDkgLyogU2NhbGFyVHlwZS5TVFJJTkcgKi8gfSxcbl0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListValue: function() { return /* binding */ ListValue; },\n/* harmony export */   NullValue: function() { return /* binding */ NullValue; },\n/* harmony export */   Struct: function() { return /* binding */ Struct; },\n/* harmony export */   Value: function() { return /* binding */ Value; }\n/* harmony export */ });\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v1.10.1 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/struct.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\n\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */\nvar NullValue;\n(function (NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */\n    NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})(NullValue || (NullValue = {}));\n// Retrieve enum metadata with: proto3.getEnumType(NullValue)\n_proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(NullValue, \"google.protobuf.NullValue\", [\n    { no: 0, name: \"NULL_VALUE\" },\n]);\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from message google.protobuf.Struct\n */\nclass Struct extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Unordered map of dynamically typed values.\n         *\n         * @generated from field: map<string, google.protobuf.Value> fields = 1;\n         */\n        this.fields = {};\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        const json = {};\n        for (const [k, v] of Object.entries(this.fields)) {\n            json[k] = v.toJson(options);\n        }\n        return json;\n    }\n    fromJson(json, options) {\n        if (typeof json != \"object\" || json == null || Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.Struct from JSON \" + _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.json.debug(json));\n        }\n        for (const [k, v] of Object.entries(json)) {\n            this.fields[k] = Value.fromJson(v);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Struct().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Struct().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Struct().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Struct, a, b);\n    }\n}\nStruct.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nStruct.typeName = \"google.protobuf.Struct\";\nStruct.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"fields\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"message\", T: Value } },\n]);\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from message google.protobuf.Value\n */\nclass Value extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The kind of value.\n         *\n         * @generated from oneof google.protobuf.Value.kind\n         */\n        this.kind = { case: undefined };\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        switch (this.kind.case) {\n            case \"nullValue\":\n                return null;\n            case \"numberValue\":\n                if (!Number.isFinite(this.kind.value)) {\n                    throw new Error(\"google.protobuf.Value cannot be NaN or Infinity\");\n                }\n                return this.kind.value;\n            case \"boolValue\":\n                return this.kind.value;\n            case \"stringValue\":\n                return this.kind.value;\n            case \"structValue\":\n            case \"listValue\":\n                return this.kind.value.toJson(Object.assign(Object.assign({}, options), { emitDefaultValues: true }));\n        }\n        throw new Error(\"google.protobuf.Value must have a value\");\n    }\n    fromJson(json, options) {\n        switch (typeof json) {\n            case \"number\":\n                this.kind = { case: \"numberValue\", value: json };\n                break;\n            case \"string\":\n                this.kind = { case: \"stringValue\", value: json };\n                break;\n            case \"boolean\":\n                this.kind = { case: \"boolValue\", value: json };\n                break;\n            case \"object\":\n                if (json === null) {\n                    this.kind = { case: \"nullValue\", value: NullValue.NULL_VALUE };\n                }\n                else if (Array.isArray(json)) {\n                    this.kind = { case: \"listValue\", value: ListValue.fromJson(json) };\n                }\n                else {\n                    this.kind = { case: \"structValue\", value: Struct.fromJson(json) };\n                }\n                break;\n            default:\n                throw new Error(\"cannot decode google.protobuf.Value from JSON \" + _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.json.debug(json));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Value, a, b);\n    }\n}\nValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nValue.typeName = \"google.protobuf.Value\";\nValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"null_value\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(NullValue), oneof: \"kind\" },\n    { no: 2, name: \"number_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, oneof: \"kind\" },\n    { no: 3, name: \"string_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"kind\" },\n    { no: 4, name: \"bool_value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"kind\" },\n    { no: 5, name: \"struct_value\", kind: \"message\", T: Struct, oneof: \"kind\" },\n    { no: 6, name: \"list_value\", kind: \"message\", T: ListValue, oneof: \"kind\" },\n]);\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from message google.protobuf.ListValue\n */\nclass ListValue extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Repeated field of dynamically typed values.\n         *\n         * @generated from field: repeated google.protobuf.Value values = 1;\n         */\n        this.values = [];\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return this.values.map(v => v.toJson());\n    }\n    fromJson(json, options) {\n        if (!Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.ListValue from JSON \" + _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.json.debug(json));\n        }\n        for (let e of json) {\n            this.values.push(Value.fromJson(e));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new ListValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(ListValue, a, b);\n    }\n}\nListValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nListValue.typeName = \"google.protobuf.ListValue\";\nListValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"values\", kind: \"message\", T: Value, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timestamp: function() { return /* binding */ Timestamp; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nclass Timestamp extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${_proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_2__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Enum: function() { return /* binding */ Enum; },\n/* harmony export */   EnumValue: function() { return /* binding */ EnumValue; },\n/* harmony export */   Field: function() { return /* binding */ Field; },\n/* harmony export */   Field_Cardinality: function() { return /* binding */ Field_Cardinality; },\n/* harmony export */   Field_Kind: function() { return /* binding */ Field_Kind; },\n/* harmony export */   Option: function() { return /* binding */ Option; },\n/* harmony export */   Syntax: function() { return /* binding */ Syntax; },\n/* harmony export */   Type: function() { return /* binding */ Type; }\n/* harmony export */ });\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _source_context_pb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./source_context_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js\");\n/* harmony import */ var _any_pb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./any_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v1.10.1 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/type.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\n\n\n\n\n/**\n * The syntax in which a protocol buffer element is defined.\n *\n * @generated from enum google.protobuf.Syntax\n */\nvar Syntax;\n(function (Syntax) {\n    /**\n     * Syntax `proto2`.\n     *\n     * @generated from enum value: SYNTAX_PROTO2 = 0;\n     */\n    Syntax[Syntax[\"PROTO2\"] = 0] = \"PROTO2\";\n    /**\n     * Syntax `proto3`.\n     *\n     * @generated from enum value: SYNTAX_PROTO3 = 1;\n     */\n    Syntax[Syntax[\"PROTO3\"] = 1] = \"PROTO3\";\n    /**\n     * Syntax `editions`.\n     *\n     * @generated from enum value: SYNTAX_EDITIONS = 2;\n     */\n    Syntax[Syntax[\"EDITIONS\"] = 2] = \"EDITIONS\";\n})(Syntax || (Syntax = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Syntax)\n_proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(Syntax, \"google.protobuf.Syntax\", [\n    { no: 0, name: \"SYNTAX_PROTO2\" },\n    { no: 1, name: \"SYNTAX_PROTO3\" },\n    { no: 2, name: \"SYNTAX_EDITIONS\" },\n]);\n/**\n * A protocol buffer message type.\n *\n * @generated from message google.protobuf.Type\n */\nclass Type extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified message name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The list of fields.\n         *\n         * @generated from field: repeated google.protobuf.Field fields = 2;\n         */\n        this.fields = [];\n        /**\n         * The list of types appearing in `oneof` definitions in this type.\n         *\n         * @generated from field: repeated string oneofs = 3;\n         */\n        this.oneofs = [];\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 4;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 6;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 7;\n         */\n        this.edition = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Type().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Type().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Type().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Type, a, b);\n    }\n}\nType.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nType.typeName = \"google.protobuf.Type\";\nType.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fields\", kind: \"message\", T: Field, repeated: true },\n    { no: 3, name: \"oneofs\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 5, name: \"source_context\", kind: \"message\", T: _source_context_pb_js__WEBPACK_IMPORTED_MODULE_2__.SourceContext },\n    { no: 6, name: \"syntax\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Syntax) },\n    { no: 7, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * A single field of a message type.\n *\n * @generated from message google.protobuf.Field\n */\nclass Field extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The field type.\n         *\n         * @generated from field: google.protobuf.Field.Kind kind = 1;\n         */\n        this.kind = Field_Kind.TYPE_UNKNOWN;\n        /**\n         * The field cardinality.\n         *\n         * @generated from field: google.protobuf.Field.Cardinality cardinality = 2;\n         */\n        this.cardinality = Field_Cardinality.UNKNOWN;\n        /**\n         * The field number.\n         *\n         * @generated from field: int32 number = 3;\n         */\n        this.number = 0;\n        /**\n         * The field name.\n         *\n         * @generated from field: string name = 4;\n         */\n        this.name = \"\";\n        /**\n         * The field type URL, without the scheme, for message or enumeration\n         * types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n         *\n         * @generated from field: string type_url = 6;\n         */\n        this.typeUrl = \"\";\n        /**\n         * The index of the field type in `Type.oneofs`, for message or enumeration\n         * types. The first type has index 1; zero means the type is not in the list.\n         *\n         * @generated from field: int32 oneof_index = 7;\n         */\n        this.oneofIndex = 0;\n        /**\n         * Whether to use alternative packed wire representation.\n         *\n         * @generated from field: bool packed = 8;\n         */\n        this.packed = false;\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 9;\n         */\n        this.options = [];\n        /**\n         * The field JSON name.\n         *\n         * @generated from field: string json_name = 10;\n         */\n        this.jsonName = \"\";\n        /**\n         * The string value of the default value of this field. Proto2 syntax only.\n         *\n         * @generated from field: string default_value = 11;\n         */\n        this.defaultValue = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Field().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Field().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Field().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Field, a, b);\n    }\n}\nField.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nField.typeName = \"google.protobuf.Field\";\nField.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Field_Kind) },\n    { no: 2, name: \"cardinality\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Field_Cardinality) },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 8, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Basic field types.\n *\n * @generated from enum google.protobuf.Field.Kind\n */\nvar Field_Kind;\n(function (Field_Kind) {\n    /**\n     * Field type unknown.\n     *\n     * @generated from enum value: TYPE_UNKNOWN = 0;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UNKNOWN\"] = 0] = \"TYPE_UNKNOWN\";\n    /**\n     * Field type double.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    Field_Kind[Field_Kind[\"TYPE_DOUBLE\"] = 1] = \"TYPE_DOUBLE\";\n    /**\n     * Field type float.\n     *\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FLOAT\"] = 2] = \"TYPE_FLOAT\";\n    /**\n     * Field type int64.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT64\"] = 3] = \"TYPE_INT64\";\n    /**\n     * Field type uint64.\n     *\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT64\"] = 4] = \"TYPE_UINT64\";\n    /**\n     * Field type int32.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT32\"] = 5] = \"TYPE_INT32\";\n    /**\n     * Field type fixed64.\n     *\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED64\"] = 6] = \"TYPE_FIXED64\";\n    /**\n     * Field type fixed32.\n     *\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED32\"] = 7] = \"TYPE_FIXED32\";\n    /**\n     * Field type bool.\n     *\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BOOL\"] = 8] = \"TYPE_BOOL\";\n    /**\n     * Field type string.\n     *\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    Field_Kind[Field_Kind[\"TYPE_STRING\"] = 9] = \"TYPE_STRING\";\n    /**\n     * Field type group. Proto2 syntax only, and deprecated.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    Field_Kind[Field_Kind[\"TYPE_GROUP\"] = 10] = \"TYPE_GROUP\";\n    /**\n     * Field type message.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    Field_Kind[Field_Kind[\"TYPE_MESSAGE\"] = 11] = \"TYPE_MESSAGE\";\n    /**\n     * Field type bytes.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BYTES\"] = 12] = \"TYPE_BYTES\";\n    /**\n     * Field type uint32.\n     *\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT32\"] = 13] = \"TYPE_UINT32\";\n    /**\n     * Field type enum.\n     *\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    Field_Kind[Field_Kind[\"TYPE_ENUM\"] = 14] = \"TYPE_ENUM\";\n    /**\n     * Field type sfixed32.\n     *\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED32\"] = 15] = \"TYPE_SFIXED32\";\n    /**\n     * Field type sfixed64.\n     *\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED64\"] = 16] = \"TYPE_SFIXED64\";\n    /**\n     * Field type sint32.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT32\"] = 17] = \"TYPE_SINT32\";\n    /**\n     * Field type sint64.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT64\"] = 18] = \"TYPE_SINT64\";\n})(Field_Kind || (Field_Kind = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Kind)\n_proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(Field_Kind, \"google.protobuf.Field.Kind\", [\n    { no: 0, name: \"TYPE_UNKNOWN\" },\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * Whether a field is optional, required, or repeated.\n *\n * @generated from enum google.protobuf.Field.Cardinality\n */\nvar Field_Cardinality;\n(function (Field_Cardinality) {\n    /**\n     * For fields with unknown cardinality.\n     *\n     * @generated from enum value: CARDINALITY_UNKNOWN = 0;\n     */\n    Field_Cardinality[Field_Cardinality[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * For optional fields.\n     *\n     * @generated from enum value: CARDINALITY_OPTIONAL = 1;\n     */\n    Field_Cardinality[Field_Cardinality[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * For required fields. Proto2 syntax only.\n     *\n     * @generated from enum value: CARDINALITY_REQUIRED = 2;\n     */\n    Field_Cardinality[Field_Cardinality[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * For repeated fields.\n     *\n     * @generated from enum value: CARDINALITY_REPEATED = 3;\n     */\n    Field_Cardinality[Field_Cardinality[\"REPEATED\"] = 3] = \"REPEATED\";\n})(Field_Cardinality || (Field_Cardinality = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Cardinality)\n_proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(Field_Cardinality, \"google.protobuf.Field.Cardinality\", [\n    { no: 0, name: \"CARDINALITY_UNKNOWN\" },\n    { no: 1, name: \"CARDINALITY_OPTIONAL\" },\n    { no: 2, name: \"CARDINALITY_REQUIRED\" },\n    { no: 3, name: \"CARDINALITY_REPEATED\" },\n]);\n/**\n * Enum type definition.\n *\n * @generated from message google.protobuf.Enum\n */\nclass Enum extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum type name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value definitions.\n         *\n         * @generated from field: repeated google.protobuf.EnumValue enumvalue = 2;\n         */\n        this.enumvalue = [];\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 5;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 6;\n         */\n        this.edition = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Enum().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Enum().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Enum().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Enum, a, b);\n    }\n}\nEnum.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nEnum.typeName = \"google.protobuf.Enum\";\nEnum.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"enumvalue\", kind: \"message\", T: EnumValue, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 4, name: \"source_context\", kind: \"message\", T: _source_context_pb_js__WEBPACK_IMPORTED_MODULE_2__.SourceContext },\n    { no: 5, name: \"syntax\", kind: \"enum\", T: _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Syntax) },\n    { no: 6, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Enum value definition.\n *\n * @generated from message google.protobuf.EnumValue\n */\nclass EnumValue extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum value name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value number.\n         *\n         * @generated from field: int32 number = 2;\n         */\n        this.number = 0;\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(EnumValue, a, b);\n    }\n}\nEnumValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nEnumValue.typeName = \"google.protobuf.EnumValue\";\nEnumValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n]);\n/**\n * A protocol buffer option, which can be attached to a message, field,\n * enumeration, etc.\n *\n * @generated from message google.protobuf.Option\n */\nclass Option extends _message_js__WEBPACK_IMPORTED_MODULE_1__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The option's name. For protobuf built-in options (options defined in\n         * descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n         * For custom options, it should be the fully-qualified name. For example,\n         * `\"google.api.http\"`.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Option().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Option().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Option().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Option, a, b);\n    }\n}\nOption.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3;\nOption.typeName = \"google.protobuf.Option\";\nOption.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"message\", T: _any_pb_js__WEBPACK_IMPORTED_MODULE_3__.Any },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoolValue: function() { return /* binding */ BoolValue; },\n/* harmony export */   BytesValue: function() { return /* binding */ BytesValue; },\n/* harmony export */   DoubleValue: function() { return /* binding */ DoubleValue; },\n/* harmony export */   FloatValue: function() { return /* binding */ FloatValue; },\n/* harmony export */   Int32Value: function() { return /* binding */ Int32Value; },\n/* harmony export */   Int64Value: function() { return /* binding */ Int64Value; },\n/* harmony export */   StringValue: function() { return /* binding */ StringValue; },\n/* harmony export */   UInt32Value: function() { return /* binding */ UInt32Value; },\n/* harmony export */   UInt64Value: function() { return /* binding */ UInt64Value; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */\nclass DoubleValue extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */\n        this.value = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new DoubleValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DoubleValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DoubleValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(DoubleValue, a, b);\n    }\n}\nDoubleValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nDoubleValue.typeName = \"google.protobuf.DoubleValue\";\nDoubleValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n]);\nDoubleValue.fieldWrapper = {\n    wrapField(value) {\n        return new DoubleValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */\nclass FloatValue extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */\n        this.value = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FloatValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FloatValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FloatValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(FloatValue, a, b);\n    }\n}\nFloatValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nFloatValue.typeName = \"google.protobuf.FloatValue\";\nFloatValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n]);\nFloatValue.fieldWrapper = {\n    wrapField(value) {\n        return new FloatValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */\nclass Int64Value extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */\n        this.value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_3__.protoInt64.zero;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Int64Value, a, b);\n    }\n}\nInt64Value.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nInt64Value.typeName = \"google.protobuf.Int64Value\";\nInt64Value.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n]);\nInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */\nclass UInt64Value extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */\n        this.value = _proto_int64_js__WEBPACK_IMPORTED_MODULE_3__.protoInt64.zero;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(UInt64Value, a, b);\n    }\n}\nUInt64Value.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nUInt64Value.typeName = \"google.protobuf.UInt64Value\";\nUInt64Value.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n]);\nUInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */\nclass Int32Value extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */\n        this.value = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Int32Value, a, b);\n    }\n}\nInt32Value.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nInt32Value.typeName = \"google.protobuf.Int32Value\";\nInt32Value.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\nInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */\nclass UInt32Value extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */\n        this.value = 0;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(UInt32Value, a, b);\n    }\n}\nUInt32Value.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nUInt32Value.typeName = \"google.protobuf.UInt32Value\";\nUInt32Value.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n]);\nUInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */\nclass BoolValue extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */\n        this.value = false;\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BoolValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BoolValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BoolValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(BoolValue, a, b);\n    }\n}\nBoolValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nBoolValue.typeName = \"google.protobuf.BoolValue\";\nBoolValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\nBoolValue.fieldWrapper = {\n    wrapField(value) {\n        return new BoolValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */\nclass StringValue extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */\n        this.value = \"\";\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new StringValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new StringValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new StringValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(StringValue, a, b);\n    }\n}\nStringValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nStringValue.typeName = \"google.protobuf.StringValue\";\nStringValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\nStringValue.fieldWrapper = {\n    wrapField(value) {\n        return new StringValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */\nclass BytesValue extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */\n        this.value = new Uint8Array(0);\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.writeScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.readScalar(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BytesValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BytesValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BytesValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(BytesValue, a, b);\n    }\n}\nBytesValue.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nBytesValue.typeName = \"google.protobuf.BytesValue\";\nBytesValue.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\nBytesValue.fieldWrapper = {\n    wrapField(value) {\n        return new BytesValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int64FromString: function() { return /* binding */ int64FromString; },\n/* harmony export */   int64ToString: function() { return /* binding */ int64ToString; },\n/* harmony export */   uInt64ToString: function() { return /* binding */ uInt64ToString; },\n/* harmony export */   varint32read: function() { return /* binding */ varint32read; },\n/* harmony export */   varint32write: function() { return /* binding */ varint32write; },\n/* harmony export */   varint64read: function() { return /* binding */ varint64read; },\n/* harmony export */   varint64write: function() { return /* binding */ varint64write; }\n/* harmony export */ });\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryReader: function() { return /* reexport safe */ _binary_encoding_js__WEBPACK_IMPORTED_MODULE_12__.BinaryReader; },\n/* harmony export */   BinaryWriter: function() { return /* reexport safe */ _binary_encoding_js__WEBPACK_IMPORTED_MODULE_12__.BinaryWriter; },\n/* harmony export */   LongType: function() { return /* reexport safe */ _scalar_js__WEBPACK_IMPORTED_MODULE_9__.LongType; },\n/* harmony export */   Message: function() { return /* reexport safe */ _message_js__WEBPACK_IMPORTED_MODULE_7__.Message; },\n/* harmony export */   MethodIdempotency: function() { return /* reexport safe */ _service_type_js__WEBPACK_IMPORTED_MODULE_11__.MethodIdempotency; },\n/* harmony export */   MethodKind: function() { return /* reexport safe */ _service_type_js__WEBPACK_IMPORTED_MODULE_11__.MethodKind; },\n/* harmony export */   ScalarType: function() { return /* reexport safe */ _scalar_js__WEBPACK_IMPORTED_MODULE_9__.ScalarType; },\n/* harmony export */   WireType: function() { return /* reexport safe */ _binary_encoding_js__WEBPACK_IMPORTED_MODULE_12__.WireType; },\n/* harmony export */   clearExtension: function() { return /* reexport safe */ _extension_accessor_js__WEBPACK_IMPORTED_MODULE_10__.clearExtension; },\n/* harmony export */   codegenInfo: function() { return /* reexport safe */ _codegen_info_js__WEBPACK_IMPORTED_MODULE_6__.codegenInfo; },\n/* harmony export */   createDescriptorSet: function() { return /* reexport safe */ _create_descriptor_set_js__WEBPACK_IMPORTED_MODULE_13__.createDescriptorSet; },\n/* harmony export */   createMutableRegistry: function() { return /* reexport safe */ _create_registry_js__WEBPACK_IMPORTED_MODULE_14__.createMutableRegistry; },\n/* harmony export */   createRegistry: function() { return /* reexport safe */ _create_registry_js__WEBPACK_IMPORTED_MODULE_14__.createRegistry; },\n/* harmony export */   createRegistryFromDescriptors: function() { return /* reexport safe */ _create_registry_from_desc_js__WEBPACK_IMPORTED_MODULE_15__.createRegistryFromDescriptors; },\n/* harmony export */   getExtension: function() { return /* reexport safe */ _extension_accessor_js__WEBPACK_IMPORTED_MODULE_10__.getExtension; },\n/* harmony export */   hasExtension: function() { return /* reexport safe */ _extension_accessor_js__WEBPACK_IMPORTED_MODULE_10__.hasExtension; },\n/* harmony export */   isMessage: function() { return /* reexport safe */ _is_message_js__WEBPACK_IMPORTED_MODULE_8__.isMessage; },\n/* harmony export */   proto2: function() { return /* reexport safe */ _proto2_js__WEBPACK_IMPORTED_MODULE_1__.proto2; },\n/* harmony export */   proto3: function() { return /* reexport safe */ _proto3_js__WEBPACK_IMPORTED_MODULE_0__.proto3; },\n/* harmony export */   protoBase64: function() { return /* reexport safe */ _proto_base64_js__WEBPACK_IMPORTED_MODULE_4__.protoBase64; },\n/* harmony export */   protoDelimited: function() { return /* reexport safe */ _proto_delimited_js__WEBPACK_IMPORTED_MODULE_5__.protoDelimited; },\n/* harmony export */   protoDouble: function() { return /* reexport safe */ _proto_double_js__WEBPACK_IMPORTED_MODULE_2__.protoDouble; },\n/* harmony export */   protoInt64: function() { return /* reexport safe */ _proto_int64_js__WEBPACK_IMPORTED_MODULE_3__.protoInt64; },\n/* harmony export */   setExtension: function() { return /* reexport safe */ _extension_accessor_js__WEBPACK_IMPORTED_MODULE_10__.setExtension; },\n/* harmony export */   toPlainMessage: function() { return /* reexport safe */ _to_plain_message_js__WEBPACK_IMPORTED_MODULE_16__.toPlainMessage; }\n/* harmony export */ });\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _proto2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./proto2.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto2.js\");\n/* harmony import */ var _proto_double_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proto-double.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-double.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _proto_base64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./proto-base64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _proto_delimited_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./proto-delimited.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-delimited.js\");\n/* harmony import */ var _codegen_info_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./codegen-info.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/codegen-info.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _extension_accessor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./extension-accessor.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\");\n/* harmony import */ var _service_type_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./service-type.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _binary_encoding_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./binary-encoding.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\");\n/* harmony import */ var _create_descriptor_set_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./create-descriptor-set.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/create-descriptor-set.js\");\n/* harmony import */ var _create_registry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./create-registry.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/create-registry.js\");\n/* harmony import */ var _create_registry_from_desc_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./create-registry-from-desc.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/create-registry-from-desc.js\");\n/* harmony import */ var _to_plain_message_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./to-plain-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/to-plain-message.js\");\n/* harmony import */ var _google_protobuf_compiler_plugin_pb_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./google/protobuf/compiler/plugin_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_compiler_plugin_pb_js__WEBPACK_IMPORTED_MODULE_17__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_compiler_plugin_pb_js__WEBPACK_IMPORTED_MODULE_17__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_api_pb_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./google/protobuf/api_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/api_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_api_pb_js__WEBPACK_IMPORTED_MODULE_18__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_api_pb_js__WEBPACK_IMPORTED_MODULE_18__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./google/protobuf/any_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_19__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_any_pb_js__WEBPACK_IMPORTED_MODULE_19__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./google/protobuf/descriptor_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_20__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_20__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./google/protobuf/duration_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_21__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_duration_pb_js__WEBPACK_IMPORTED_MODULE_21__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_empty_pb_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./google/protobuf/empty_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_empty_pb_js__WEBPACK_IMPORTED_MODULE_22__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_empty_pb_js__WEBPACK_IMPORTED_MODULE_22__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_field_mask_pb_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./google/protobuf/field_mask_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_field_mask_pb_js__WEBPACK_IMPORTED_MODULE_23__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_field_mask_pb_js__WEBPACK_IMPORTED_MODULE_23__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_source_context_pb_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./google/protobuf/source_context_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_source_context_pb_js__WEBPACK_IMPORTED_MODULE_24__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_source_context_pb_js__WEBPACK_IMPORTED_MODULE_24__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./google/protobuf/struct_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_struct_pb_js__WEBPACK_IMPORTED_MODULE_25__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_timestamp_pb_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./google/protobuf/timestamp_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_timestamp_pb_js__WEBPACK_IMPORTED_MODULE_26__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_timestamp_pb_js__WEBPACK_IMPORTED_MODULE_26__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_type_pb_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./google/protobuf/type_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_type_pb_js__WEBPACK_IMPORTED_MODULE_27__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_type_pb_js__WEBPACK_IMPORTED_MODULE_27__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./google/protobuf/wrappers_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_28__) if([\"default\",\"proto3\",\"proto2\",\"protoDouble\",\"protoInt64\",\"protoBase64\",\"protoDelimited\",\"codegenInfo\",\"Message\",\"isMessage\",\"LongType\",\"ScalarType\",\"getExtension\",\"setExtension\",\"hasExtension\",\"clearExtension\",\"MethodKind\",\"MethodIdempotency\",\"WireType\",\"BinaryWriter\",\"BinaryReader\",\"createDescriptorSet\",\"createRegistry\",\"createMutableRegistry\",\"createRegistryFromDescriptors\",\"toPlainMessage\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _google_protobuf_wrappers_pb_js__WEBPACK_IMPORTED_MODULE_28__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ideally, we would export these types with sub-path exports:\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FDO0FBQ0E7QUFDVztBQUNGO0FBQ0U7QUFDTTtBQUNOO0FBQ1Q7QUFDSztBQUNPO0FBQ2lEO0FBQ2xDO0FBQ1U7QUFDWDtBQUNZO0FBQ0U7QUFDeEI7QUFDdkQ7QUFDd0Q7QUFDWjtBQUNBO0FBQ087QUFDRjtBQUNIO0FBQ0s7QUFDSTtBQUNSO0FBQ0c7QUFDTDtBQUNJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vaW5kZXguanM/NGZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuZXhwb3J0IHsgcHJvdG8zIH0gZnJvbSBcIi4vcHJvdG8zLmpzXCI7XG5leHBvcnQgeyBwcm90bzIgfSBmcm9tIFwiLi9wcm90bzIuanNcIjtcbmV4cG9ydCB7IHByb3RvRG91YmxlIH0gZnJvbSBcIi4vcHJvdG8tZG91YmxlLmpzXCI7XG5leHBvcnQgeyBwcm90b0ludDY0IH0gZnJvbSBcIi4vcHJvdG8taW50NjQuanNcIjtcbmV4cG9ydCB7IHByb3RvQmFzZTY0IH0gZnJvbSBcIi4vcHJvdG8tYmFzZTY0LmpzXCI7XG5leHBvcnQgeyBwcm90b0RlbGltaXRlZCB9IGZyb20gXCIuL3Byb3RvLWRlbGltaXRlZC5qc1wiO1xuZXhwb3J0IHsgY29kZWdlbkluZm8gfSBmcm9tIFwiLi9jb2RlZ2VuLWluZm8uanNcIjtcbmV4cG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi9tZXNzYWdlLmpzXCI7XG5leHBvcnQgeyBpc01lc3NhZ2UgfSBmcm9tIFwiLi9pcy1tZXNzYWdlLmpzXCI7XG5leHBvcnQgeyBMb25nVHlwZSwgU2NhbGFyVHlwZSB9IGZyb20gXCIuL3NjYWxhci5qc1wiO1xuZXhwb3J0IHsgZ2V0RXh0ZW5zaW9uLCBzZXRFeHRlbnNpb24sIGhhc0V4dGVuc2lvbiwgY2xlYXJFeHRlbnNpb24sIH0gZnJvbSBcIi4vZXh0ZW5zaW9uLWFjY2Vzc29yLmpzXCI7XG5leHBvcnQgeyBNZXRob2RLaW5kLCBNZXRob2RJZGVtcG90ZW5jeSB9IGZyb20gXCIuL3NlcnZpY2UtdHlwZS5qc1wiO1xuZXhwb3J0IHsgV2lyZVR5cGUsIEJpbmFyeVdyaXRlciwgQmluYXJ5UmVhZGVyIH0gZnJvbSBcIi4vYmluYXJ5LWVuY29kaW5nLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVEZXNjcmlwdG9yU2V0IH0gZnJvbSBcIi4vY3JlYXRlLWRlc2NyaXB0b3Itc2V0LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVSZWdpc3RyeSwgY3JlYXRlTXV0YWJsZVJlZ2lzdHJ5IH0gZnJvbSBcIi4vY3JlYXRlLXJlZ2lzdHJ5LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVSZWdpc3RyeUZyb21EZXNjcmlwdG9ycyB9IGZyb20gXCIuL2NyZWF0ZS1yZWdpc3RyeS1mcm9tLWRlc2MuanNcIjtcbmV4cG9ydCB7IHRvUGxhaW5NZXNzYWdlIH0gZnJvbSBcIi4vdG8tcGxhaW4tbWVzc2FnZS5qc1wiO1xuLy8gaWRlYWxseSwgd2Ugd291bGQgZXhwb3J0IHRoZXNlIHR5cGVzIHdpdGggc3ViLXBhdGggZXhwb3J0czpcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9jb21waWxlci9wbHVnaW5fcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9hcGlfcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9hbnlfcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yX3BiLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nb29nbGUvcHJvdG9idWYvZHVyYXRpb25fcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9lbXB0eV9wYi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2tfcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi9zb3VyY2VfY29udGV4dF9wYi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ29vZ2xlL3Byb3RvYnVmL3N0cnVjdF9wYi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcF9wYi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ29vZ2xlL3Byb3RvYnVmL3R5cGVfcGIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dvb2dsZS9wcm90b2J1Zi93cmFwcGVyc19wYi5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/is-message.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/is-message.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessage: function() { return /* binding */ isMessage; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nfunction isMessage(arg, type) {\n    if (arg === null || typeof arg != \"object\") {\n        return false;\n    }\n    if (!Object.getOwnPropertyNames(_message_js__WEBPACK_IMPORTED_MODULE_0__.Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n        return false;\n    }\n    const actualType = arg.getType();\n    if (actualType === null ||\n        typeof actualType != \"function\" ||\n        !(\"typeName\" in actualType) ||\n        typeof actualType.typeName != \"string\") {\n        return false;\n    }\n    return type === undefined ? true : actualType.typeName == type.typeName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2lzLW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxnREFBTztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vaXMtbWVzc2FnZS5qcz85YmIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4vbWVzc2FnZS5qc1wiO1xuLyoqXG4gKiBDaGVjayB3aGV0aGVyIHRoZSBnaXZlbiBvYmplY3QgaXMgYW55IHN1YnR5cGUgb2YgTWVzc2FnZSBvciBpcyBhIHNwZWNpZmljXG4gKiBNZXNzYWdlIGJ5IHBhc3NpbmcgdGhlIHR5cGUuXG4gKlxuICogSnVzdCBsaWtlIGBpbnN0YW5jZW9mYCwgYGlzTWVzc2FnZWAgbmFycm93cyB0aGUgdHlwZS4gVGhlIGFkdmFudGFnZSBvZlxuICogYGlzTWVzc2FnZWAgaXMgdGhhdCBpdCBjb21wYXJlcyBpZGVudGl0eSBieSB0aGUgbWVzc2FnZSB0eXBlIG5hbWUsIG5vdCBieVxuICogY2xhc3MgaWRlbnRpdHkuIFRoaXMgbWFrZXMgaXQgcm9idXN0IGFnYWluc3QgdGhlIGR1YWwgcGFja2FnZSBoYXphcmQgYW5kXG4gKiBzaW1pbGFyIHNpdHVhdGlvbnMsIHdoZXJlIHRoZSBzYW1lIG1lc3NhZ2UgaXMgZHVwbGljYXRlZC5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIF9tb3N0bHlfIGVxdWl2YWxlbnQgdG8gdGhlIGBpbnN0YW5jZW9mYCBvcGVyYXRvci4gRm9yXG4gKiBleGFtcGxlLCBgaXNNZXNzYWdlKGZvbywgTXlNZXNzYWdlKWAgaXMgdGhlIHNhbWUgYXMgYGZvbyBpbnN0YW5jZW9mIE15TWVzc2FnZWAsXG4gKiBhbmQgYGlzTWVzc2FnZShmb28pYCBpcyB0aGUgc2FtZSBhcyBgZm9vIGluc3RhbmNlb2YgTWVzc2FnZWAuIEluIG1vc3QgY2FzZXMsXG4gKiBgaXNNZXNzYWdlYCBzaG91bGQgYmUgcHJlZmVycmVkIG92ZXIgYGluc3RhbmNlb2ZgLlxuICpcbiAqIEhvd2V2ZXIsIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGBpc01lc3NhZ2VgIGRvZXMgbm90IHVzZSBjbGFzcyBpZGVudGl0eSwgdGhlcmVcbiAqIGFyZSBzdWJ0bGUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGlzIGZ1bmN0aW9uIGFuZCBgaW5zdGFuY2VvZmAuIE5vdGFibHksXG4gKiBjYWxsaW5nIGBpc01lc3NhZ2VgIG9uIGFuIGV4cGxpY2l0IHR5cGUgb2YgTWVzc2FnZSB3aWxsIHJldHVybiBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTWVzc2FnZShhcmcsIHR5cGUpIHtcbiAgICBpZiAoYXJnID09PSBudWxsIHx8IHR5cGVvZiBhcmcgIT0gXCJvYmplY3RcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTWVzc2FnZS5wcm90b3R5cGUpLmV2ZXJ5KChtKSA9PiBtIGluIGFyZyAmJiB0eXBlb2YgYXJnW21dID09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBhY3R1YWxUeXBlID0gYXJnLmdldFR5cGUoKTtcbiAgICBpZiAoYWN0dWFsVHlwZSA9PT0gbnVsbCB8fFxuICAgICAgICB0eXBlb2YgYWN0dWFsVHlwZSAhPSBcImZ1bmN0aW9uXCIgfHxcbiAgICAgICAgIShcInR5cGVOYW1lXCIgaW4gYWN0dWFsVHlwZSkgfHxcbiAgICAgICAgdHlwZW9mIGFjdHVhbFR5cGUudHlwZU5hbWUgIT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0eXBlID09PSB1bmRlZmluZWQgPyB0cnVlIDogYWN0dWFsVHlwZS50eXBlTmFtZSA9PSB0eXBlLnR5cGVOYW1lO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/message.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/message.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Message: function() { return /* binding */ Message; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nclass Message {\n    /**\n     * Compare with a message of the same type.\n     * Note that this function disregards extensions and unknown fields.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMseUJBQXlCLGFBQWEsMkNBQTJDO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL21lc3NhZ2UuanM/MWQ2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBNZXNzYWdlIGlzIHRoZSBiYXNlIGNsYXNzIG9mIGV2ZXJ5IG1lc3NhZ2UsIGdlbmVyYXRlZCwgb3IgY3JlYXRlZCBhdFxuICogcnVudGltZS5cbiAqXG4gKiBJdCBpcyBfbm90XyBzYWZlIHRvIGV4dGVuZCB0aGlzIGNsYXNzLiBJZiB5b3Ugd2FudCB0byBjcmVhdGUgYSBtZXNzYWdlIGF0XG4gKiBydW4gdGltZSwgdXNlIHByb3RvMy5tYWtlTWVzc2FnZVR5cGUoKS5cbiAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2Uge1xuICAgIC8qKlxuICAgICAqIENvbXBhcmUgd2l0aCBhIG1lc3NhZ2Ugb2YgdGhlIHNhbWUgdHlwZS5cbiAgICAgKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBkaXNyZWdhcmRzIGV4dGVuc2lvbnMgYW5kIHVua25vd24gZmllbGRzLlxuICAgICAqL1xuICAgIGVxdWFscyhvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRUeXBlKCkucnVudGltZS51dGlsLmVxdWFscyh0aGlzLmdldFR5cGUoKSwgdGhpcywgb3RoZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBkZWVwIGNvcHkuXG4gICAgICovXG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFR5cGUoKS5ydW50aW1lLnV0aWwuY2xvbmUodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlIGZyb20gYmluYXJ5IGRhdGEsIG1lcmdpbmcgZmllbGRzLlxuICAgICAqXG4gICAgICogUmVwZWF0ZWQgZmllbGRzIGFyZSBhcHBlbmRlZC4gTWFwIGVudHJpZXMgYXJlIGFkZGVkLCBvdmVyd3JpdGluZ1xuICAgICAqIGV4aXN0aW5nIGtleXMuXG4gICAgICpcbiAgICAgKiBJZiBhIG1lc3NhZ2UgZmllbGQgaXMgYWxyZWFkeSBwcmVzZW50LCBpdCB3aWxsIGJlIG1lcmdlZCB3aXRoIHRoZVxuICAgICAqIG5ldyBkYXRhLlxuICAgICAqL1xuICAgIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0VHlwZSgpLCBmb3JtYXQgPSB0eXBlLnJ1bnRpbWUuYmluLCBvcHQgPSBmb3JtYXQubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICBmb3JtYXQucmVhZE1lc3NhZ2UodGhpcywgb3B0LnJlYWRlckZhY3RvcnkoYnl0ZXMpLCBieXRlcy5ieXRlTGVuZ3RoLCBvcHQpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgYSBtZXNzYWdlIGZyb20gYSBKU09OIHZhbHVlLlxuICAgICAqL1xuICAgIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCksIGZvcm1hdCA9IHR5cGUucnVudGltZS5qc29uLCBvcHQgPSBmb3JtYXQubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICBmb3JtYXQucmVhZE1lc3NhZ2UodHlwZSwganNvblZhbHVlLCBvcHQsIHRoaXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgYSBtZXNzYWdlIGZyb20gYSBKU09OIHN0cmluZy5cbiAgICAgKi9cbiAgICBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIGxldCBqc29uO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAganNvbiA9IEpTT04ucGFyc2UoanNvblN0cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IGRlY29kZSAke3RoaXMuZ2V0VHlwZSgpLnR5cGVOYW1lfSBmcm9tIEpTT046ICR7ZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21Kc29uKGpzb24sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXJpYWxpemUgdGhlIG1lc3NhZ2UgdG8gYmluYXJ5IGRhdGEuXG4gICAgICovXG4gICAgdG9CaW5hcnkob3B0aW9ucykge1xuICAgICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCksIGJpbiA9IHR5cGUucnVudGltZS5iaW4sIG9wdCA9IGJpbi5tYWtlV3JpdGVPcHRpb25zKG9wdGlvbnMpLCB3cml0ZXIgPSBvcHQud3JpdGVyRmFjdG9yeSgpO1xuICAgICAgICBiaW4ud3JpdGVNZXNzYWdlKHRoaXMsIHdyaXRlciwgb3B0KTtcbiAgICAgICAgcmV0dXJuIHdyaXRlci5maW5pc2goKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VyaWFsaXplIHRoZSBtZXNzYWdlIHRvIGEgSlNPTiB2YWx1ZSwgYSBKYXZhU2NyaXB0IHZhbHVlIHRoYXQgY2FuIGJlXG4gICAgICogcGFzc2VkIHRvIEpTT04uc3RyaW5naWZ5KCkuXG4gICAgICovXG4gICAgdG9Kc29uKG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0VHlwZSgpLCBqc29uID0gdHlwZS5ydW50aW1lLmpzb24sIG9wdCA9IGpzb24ubWFrZVdyaXRlT3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGpzb24ud3JpdGVNZXNzYWdlKHRoaXMsIG9wdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlcmlhbGl6ZSB0aGUgbWVzc2FnZSB0byBhIEpTT04gc3RyaW5nLlxuICAgICAqL1xuICAgIHRvSnNvblN0cmluZyhvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnRvSnNvbihvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBudWxsLCAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucHJldHR5U3BhY2VzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgZm9yIHNlcmlhbGl6YXRpb24gYmVoYXZpb3IuIFRoaXMgd2lsbCBiZSBpbnZva2VkIHdoZW4gY2FsbGluZ1xuICAgICAqIEpTT04uc3RyaW5naWZ5IG9uIHRoaXMgbWVzc2FnZSAoaS5lLiBKU09OLnN0cmluZ2lmeShtc2cpKS5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB0aGlzIHdpbGwgbm90IHNlcmlhbGl6ZSBnb29nbGUucHJvdG9idWYuQW55IHdpdGggYSBwYWNrZWRcbiAgICAgKiBtZXNzYWdlIGJlY2F1c2UgdGhlIHByb3RvYnVmIEpTT04gZm9ybWF0IHNwZWNpZmllcyB0aGF0IGl0IG5lZWRzIHRvIGJlXG4gICAgICogdW5wYWNrZWQsIGFuZCB0aGlzIGlzIG9ubHkgcG9zc2libGUgd2l0aCBhIHR5cGUgcmVnaXN0cnkgdG8gbG9vayB1cCB0aGVcbiAgICAgKiBtZXNzYWdlIHR5cGUuICBBcyBhIHJlc3VsdCwgYXR0ZW1wdGluZyB0byBzZXJpYWxpemUgYSBtZXNzYWdlIHdpdGggdGhpc1xuICAgICAqIHR5cGUgd2lsbCB0aHJvdyBhbiBFcnJvci5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIHByb3RlY3RlZCBiZWNhdXNlIHlvdSBzaG91bGQgbm90IG5lZWQgdG8gaW52b2tlIGl0XG4gICAgICogZGlyZWN0bHkgLS0gaW5zdGVhZCB1c2UgSlNPTi5zdHJpbmdpZnkgb3IgdG9Kc29uU3RyaW5nIGZvclxuICAgICAqIHN0cmluZ2lmaWVkIEpTT04uICBBbHRlcm5hdGl2ZWx5LCBpZiBhY3R1YWwgSlNPTiBpcyBkZXNpcmVkLCB5b3Ugc2hvdWxkXG4gICAgICogdXNlIHRvSnNvbi5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvSnNvbih7XG4gICAgICAgICAgICBlbWl0RGVmYXVsdFZhbHVlczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIHRoZSBNZXNzYWdlVHlwZSBvZiB0aGlzIG1lc3NhZ2UgLSBhIHNpbmdsZXRvbiB0aGF0IHJlcHJlc2VudHNcbiAgICAgKiB0aGUgcHJvdG9idWYgbWVzc2FnZSBkZWNsYXJhdGlvbiBhbmQgcHJvdmlkZXMgbWV0YWRhdGEgZm9yIHJlZmxlY3Rpb24tXG4gICAgICogYmFzZWQgb3BlcmF0aW9ucy5cbiAgICAgKi9cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICAvLyBBbnkgY2xhc3MgdGhhdCBleHRlbmRzIE1lc3NhZ2UgX211c3RfIHByb3ZpZGUgYSBjb21wbGV0ZSBzdGF0aWNcbiAgICAgICAgLy8gaW1wbGVtZW50YXRpb24gb2YgTWVzc2FnZVR5cGUuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm5cbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/message.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: function() { return /* binding */ assert; },\n/* harmony export */   assertFloat32: function() { return /* binding */ assertFloat32; },\n/* harmony export */   assertInt32: function() { return /* binding */ assertInt32; },\n/* harmony export */   assertUInt32: function() { return /* binding */ assertUInt32; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nfunction assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvYXNzZXJ0LmpzPzgxZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQXNzZXJ0IHRoYXQgY29uZGl0aW9uIGlzIHRydXRoeSBvciB0aHJvdyBlcnJvciAod2l0aCBtZXNzYWdlKVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbXNnKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9zdHJpY3QtYm9vbGVhbi1leHByZXNzaW9ucyAtLSB3ZSB3YW50IHRoZSBpbXBsaWNpdCBjb252ZXJzaW9uIHRvIGJvb2xlYW5cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG59XG5jb25zdCBGTE9BVDMyX01BWCA9IDMuNDAyODIzNDY2Mzg1Mjg4NmUzOCwgRkxPQVQzMl9NSU4gPSAtMy40MDI4MjM0NjYzODUyODg2ZTM4LCBVSU5UMzJfTUFYID0gMHhmZmZmZmZmZiwgSU5UMzJfTUFYID0gMHg3ZmZmZmZmZiwgSU5UMzJfTUlOID0gLTB4ODAwMDAwMDA7XG4vKipcbiAqIEFzc2VydCBhIHZhbGlkIHNpZ25lZCBwcm90b2J1ZiAzMi1iaXQgaW50ZWdlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGludCAzMjogXCIgKyB0eXBlb2YgYXJnKTtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoYXJnKSB8fCBhcmcgPiBJTlQzMl9NQVggfHwgYXJnIDwgSU5UMzJfTUlOKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGludCAzMjogXCIgKyBhcmcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC1wbHVzLW9wZXJhbmRzIC0tIHdlIHdhbnQgdGhlIGltcGxpY2l0IGNvbnZlcnNpb24gdG8gc3RyaW5nXG59XG4vKipcbiAqIEFzc2VydCBhIHZhbGlkIHVuc2lnbmVkIHByb3RvYnVmIDMyLWJpdCBpbnRlZ2VyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0VUludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHVpbnQgMzI6IFwiICsgdHlwZW9mIGFyZyk7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykgfHwgYXJnID4gVUlOVDMyX01BWCB8fCBhcmcgPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHVpbnQgMzI6IFwiICsgYXJnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcmVzdHJpY3QtcGx1cy1vcGVyYW5kcyAtLSB3ZSB3YW50IHRoZSBpbXBsaWNpdCBjb252ZXJzaW9uIHRvIHN0cmluZ1xufVxuLyoqXG4gKiBBc3NlcnQgYSB2YWxpZCBwcm90b2J1ZiBmbG9hdCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEZsb2F0MzIoYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgZmxvYXQgMzI6IFwiICsgdHlwZW9mIGFyZyk7XG4gICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoYXJnKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChhcmcgPiBGTE9BVDMyX01BWCB8fCBhcmcgPCBGTE9BVDMyX01JTilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmbG9hdCAzMjogXCIgKyBhcmcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC1wbHVzLW9wZXJhbmRzIC0tIHdlIHdhbnQgdGhlIGltcGxpY2l0IGNvbnZlcnNpb24gdG8gc3RyaW5nXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeBinaryFormat: function() { return /* binding */ makeBinaryFormat; },\n/* harmony export */   writeMapEntry: function() { return /* binding */ writeMapEntry; }\n/* harmony export */ });\n/* harmony import */ var _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary-encoding.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\");\n/* harmony import */ var _field_wrapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./field-wrapper.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _reflect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction makeBinaryFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n            const type = message.getType();\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            const end = delimitedMessageEncoding\n                ? reader.len\n                : reader.pos + lengthOrEndTagFieldNo;\n            let fieldNo, wireType;\n            while (reader.pos < end) {\n                [fieldNo, wireType] = reader.tag();\n                if (delimitedMessageEncoding === true &&\n                    wireType == _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup) {\n                    break;\n                }\n                const field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType, fieldNo);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                readField(message, reader, field, wireType, options);\n            }\n            if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n                (wireType != _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n                throw new Error(`invalid end group tag`);\n            }\n        },\n        readField,\n        writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                if (!(0,_reflect_js__WEBPACK_IMPORTED_MODULE_1__.isFieldSet)(field, message)) {\n                    if (field.req) {\n                        throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    continue;\n                }\n                const value = field.oneof\n                    ? message[field.oneof.localName].value\n                    : message[field.localName];\n                writeField(field, value, writer, options);\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        },\n        writeField(field, value, writer, options) {\n            // The behavior of our internal function has changed, it does no longer\n            // accept `undefined` values for singular scalar and map.\n            // For backwards-compatibility, we support the old form that is part of\n            // the public API through the interface BinaryFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            writeField(field, value, writer, options);\n        },\n    };\n}\nfunction readField(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n    let { repeated, localName } = field;\n    if (field.oneof) {\n        target = target[field.oneof.localName];\n        if (target.case != localName) {\n            delete target.value;\n        }\n        target.case = localName;\n        localName = \"value\";\n    }\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            const scalarType = field.kind == \"enum\" ? _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32 : field.T;\n            let read = readScalar;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            if (field.kind == \"scalar\" && field.L > 0) {\n                read = readScalarLTString;\n            }\n            if (repeated) {\n                let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                const isPacked = wireType == _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited &&\n                    scalarType != _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING &&\n                    scalarType != _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES;\n                if (isPacked) {\n                    let e = reader.uint32() + reader.pos;\n                    while (reader.pos < e) {\n                        arr.push(read(reader, scalarType));\n                    }\n                }\n                else {\n                    arr.push(read(reader, scalarType));\n                }\n            }\n            else {\n                target[localName] = read(reader, scalarType);\n            }\n            break;\n        case \"message\":\n            const messageType = field.T;\n            if (repeated) {\n                // safe to assume presence of array, oneof cannot contain repeated values\n                target[localName].push(readMessageField(reader, new messageType(), options, field));\n            }\n            else {\n                if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_3__.isMessage)(target[localName])) {\n                    readMessageField(reader, target[localName], options, field);\n                }\n                else {\n                    target[localName] = readMessageField(reader, new messageType(), options, field);\n                    if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n                        target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                    }\n                }\n            }\n            break;\n        case \"map\":\n            let [mapKey, mapVal] = readMapEntry(field, reader, options);\n            // safe to assume presence of map object, oneof cannot contain repeated values\n            target[localName][mapKey] = mapVal;\n            break;\n    }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n    const format = message.getType().runtime.bin;\n    const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n    format.readMessage(message, reader, delimited ? field.no : reader.uint32(), // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options, delimited);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options, undefined);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.K, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.LongType.BIGINT);\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.V.T, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = field.V.T.values[0].no;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            return reader.string();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            return reader.bool();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n            return reader.double();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            return reader.float();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n            return reader.int32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n            return reader.int64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n            return reader.uint64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n            return reader.fixed64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n            return reader.bytes();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n            return reader.fixed32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n            return reader.sint64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n            return reader.uint32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeField(field, value, writer, options) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n    const repeated = field.repeated;\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            let scalarType = field.kind == \"enum\" ? _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32 : field.T;\n            if (repeated) {\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n                if (field.packed) {\n                    writePacked(writer, scalarType, field.no, value);\n                }\n                else {\n                    for (const item of value) {\n                        writeScalar(writer, scalarType, field.no, item);\n                    }\n                }\n            }\n            else {\n                writeScalar(writer, scalarType, field.no, value);\n            }\n            break;\n        case \"message\":\n            if (repeated) {\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n                for (const item of value) {\n                    writeMessageField(writer, options, field, item);\n                }\n            }\n            else {\n                writeMessageField(writer, options, field, value);\n            }\n            break;\n        case \"map\":\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"object\" && value != null);\n            for (const [key, val] of Object.entries(value)) {\n                writeMapEntry(writer, options, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value);\n            break;\n        case \"enum\":\n            writeScalar(writer, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n            writer.tag(2, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).bytes(value.toBinary(options));\n            break;\n    }\n    writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n    const message = (0,_field_wrapper_js__WEBPACK_IMPORTED_MODULE_6__.wrapField)(field.T, value);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.delimited)\n        writer\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.StartGroup)\n            .raw(message.toBinary(options))\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup);\n    else\n        writer\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n    let [wireType, method] = scalarTypeInfo(type);\n    writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n    let wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Varint;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited;\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit64;\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit32;\n            break;\n    }\n    const method = _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[type].toLowerCase();\n    return [wireType, method];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnumType: function() { return /* binding */ getEnumType; },\n/* harmony export */   makeEnum: function() { return /* binding */ makeEnum; },\n/* harmony export */   makeEnumType: function() { return /* binding */ makeEnumType; },\n/* harmony export */   setEnumType: function() { return /* binding */ setEnumType; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nfunction getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nfunction setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nfunction makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nfunction makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZW51bS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUksa0RBQU07QUFDVixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsWUFBWSx1QkFBdUI7QUFDNUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2VudW0uanM/ZDdkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4vYXNzZXJ0LmpzXCI7XG5jb25zdCBlbnVtVHlwZVN5bWJvbCA9IFN5bWJvbChcIkBidWZidWlsZC9wcm90b2J1Zi9lbnVtLXR5cGVcIik7XG4vKipcbiAqIEdldCByZWZsZWN0aW9uIGluZm9ybWF0aW9uIGZyb20gYSBnZW5lcmF0ZWQgZW51bS5cbiAqIElmIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIHNvbWV0aGluZyBvdGhlciB0aGFuIGEgZ2VuZXJhdGVkXG4gKiBlbnVtLCBpdCByYWlzZXMgYW4gZXJyb3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnVtVHlwZShlbnVtT2JqZWN0KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyxAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQsQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IHQgPSBlbnVtT2JqZWN0W2VudW1UeXBlU3ltYm9sXTtcbiAgICBhc3NlcnQodCwgXCJtaXNzaW5nIGVudW0gdHlwZSBvbiBlbnVtIG9iamVjdFwiKTtcbiAgICByZXR1cm4gdDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLXJldHVyblxufVxuLyoqXG4gKiBTZXRzIHJlZmxlY3Rpb24gaW5mb3JtYXRpb24gb24gYSBnZW5lcmF0ZWQgZW51bS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldEVudW1UeXBlKGVudW1PYmplY3QsIHR5cGVOYW1lLCB2YWx1ZXMsIG9wdCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBlbnVtT2JqZWN0W2VudW1UeXBlU3ltYm9sXSA9IG1ha2VFbnVtVHlwZSh0eXBlTmFtZSwgdmFsdWVzLm1hcCgodikgPT4gKHtcbiAgICAgICAgbm86IHYubm8sXG4gICAgICAgIG5hbWU6IHYubmFtZSxcbiAgICAgICAgbG9jYWxOYW1lOiBlbnVtT2JqZWN0W3Yubm9dLFxuICAgIH0pKSwgb3B0KTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgbmV3IEVudW1UeXBlIHdpdGggdGhlIGdpdmVuIHZhbHVlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VFbnVtVHlwZSh0eXBlTmFtZSwgdmFsdWVzLCBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbl9vcHQpIHtcbiAgICBjb25zdCBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3QgbnVtYmVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3Qgbm9ybWFsVmFsdWVzID0gW107XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgLy8gV2UgZG8gbm90IHN1cmZhY2Ugb3B0aW9ucyBhdCB0aGlzIHRpbWVcbiAgICAgICAgLy8gY29uc3QgdmFsdWU6IEVudW1WYWx1ZUluZm8gPSB7Li4udiwgb3B0aW9uczogdi5vcHRpb25zID8/IGVtcHR5UmVhZG9ubHlPYmplY3R9O1xuICAgICAgICBjb25zdCBuID0gbm9ybWFsaXplRW51bVZhbHVlKHZhbHVlKTtcbiAgICAgICAgbm9ybWFsVmFsdWVzLnB1c2gobik7XG4gICAgICAgIG5hbWVzW3ZhbHVlLm5hbWVdID0gbjtcbiAgICAgICAgbnVtYmVyc1t2YWx1ZS5ub10gPSBuO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlTmFtZSxcbiAgICAgICAgdmFsdWVzOiBub3JtYWxWYWx1ZXMsXG4gICAgICAgIC8vIFdlIGRvIG5vdCBzdXJmYWNlIG9wdGlvbnMgYXQgdGhpcyB0aW1lXG4gICAgICAgIC8vIG9wdGlvbnM6IG9wdD8ub3B0aW9ucyA/PyBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgICBmaW5kTmFtZShuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gbmFtZXNbbmFtZV07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmROdW1iZXIobm8pIHtcbiAgICAgICAgICAgIHJldHVybiBudW1iZXJzW25vXTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgZW51bSBvYmplY3Qgd2l0aCB0aGUgZ2l2ZW4gdmFsdWVzLlxuICogU2V0cyByZWZsZWN0aW9uIGluZm9ybWF0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUVudW0odHlwZU5hbWUsIHZhbHVlcywgb3B0KSB7XG4gICAgY29uc3QgZW51bU9iamVjdCA9IHt9O1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgIGNvbnN0IG4gPSBub3JtYWxpemVFbnVtVmFsdWUodmFsdWUpO1xuICAgICAgICBlbnVtT2JqZWN0W24ubG9jYWxOYW1lXSA9IG4ubm87XG4gICAgICAgIGVudW1PYmplY3Rbbi5ub10gPSBuLmxvY2FsTmFtZTtcbiAgICB9XG4gICAgc2V0RW51bVR5cGUoZW51bU9iamVjdCwgdHlwZU5hbWUsIHZhbHVlcywgb3B0KTtcbiAgICByZXR1cm4gZW51bU9iamVjdDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUVudW1WYWx1ZSh2YWx1ZSkge1xuICAgIGlmIChcImxvY2FsTmFtZVwiIGluIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdmFsdWUpLCB7IGxvY2FsTmFtZTogdmFsdWUubmFtZSB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createExtensionContainer: function() { return /* binding */ createExtensionContainer; },\n/* harmony export */   filterUnknownFields: function() { return /* binding */ filterUnknownFields; },\n/* harmony export */   makeExtension: function() { return /* binding */ makeExtension; }\n/* harmony export */ });\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create a new extension using the given runtime.\n */\nfunction makeExtension(runtime, typeName, extendee, field) {\n    let fi;\n    return {\n        typeName,\n        extendee,\n        get field() {\n            if (!fi) {\n                const i = (typeof field == \"function\" ? field() : field);\n                i.name = typeName.split(\".\").pop();\n                i.jsonName = `[${typeName}]`;\n                fi = runtime.util.newFieldList([i]).list()[0];\n            }\n            return fi;\n        },\n        runtime,\n    };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nfunction createExtensionContainer(extension) {\n    const localName = extension.field.localName;\n    const container = Object.create(null);\n    container[localName] = initExtensionField(extension);\n    return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n    const field = ext.field;\n    if (field.repeated) {\n        return [];\n    }\n    if (field.default !== undefined) {\n        return field.default;\n    }\n    switch (field.kind) {\n        case \"enum\":\n            return field.T.values[0].no;\n        case \"scalar\":\n            return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.scalarZeroValue)(field.T, field.L);\n        case \"message\":\n            // eslint-disable-next-line no-case-declarations\n            const T = field.T, value = new T();\n            return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n        case \"map\":\n            throw \"map fields are not allowed to be extensions\";\n    }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nfunction filterUnknownFields(unknownFields, field) {\n    if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == field.no) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === field.no);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0M7QUFDRTtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsU0FBUztBQUMxQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2V4dGVuc2lvbnMuanM/OGUzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vc2NhbGFycy5qc1wiO1xuaW1wb3J0IHsgV2lyZVR5cGUgfSBmcm9tIFwiLi4vYmluYXJ5LWVuY29kaW5nLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBleHRlbnNpb24gdXNpbmcgdGhlIGdpdmVuIHJ1bnRpbWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRXh0ZW5zaW9uKHJ1bnRpbWUsIHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpIHtcbiAgICBsZXQgZmk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZU5hbWUsXG4gICAgICAgIGV4dGVuZGVlLFxuICAgICAgICBnZXQgZmllbGQoKSB7XG4gICAgICAgICAgICBpZiAoIWZpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaSA9ICh0eXBlb2YgZmllbGQgPT0gXCJmdW5jdGlvblwiID8gZmllbGQoKSA6IGZpZWxkKTtcbiAgICAgICAgICAgICAgICBpLm5hbWUgPSB0eXBlTmFtZS5zcGxpdChcIi5cIikucG9wKCk7XG4gICAgICAgICAgICAgICAgaS5qc29uTmFtZSA9IGBbJHt0eXBlTmFtZX1dYDtcbiAgICAgICAgICAgICAgICBmaSA9IHJ1bnRpbWUudXRpbC5uZXdGaWVsZExpc3QoW2ldKS5saXN0KClbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmk7XG4gICAgICAgIH0sXG4gICAgICAgIHJ1bnRpbWUsXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgY29udGFpbmVyIHRoYXQgYWxsb3dzIHVzIHRvIHJlYWQgZXh0ZW5zaW9uIGZpZWxkcyBpbnRvIGl0IHdpdGggdGhlXG4gKiBzYW1lIGxvZ2ljIGFzIHJlZ3VsYXIgZmllbGRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZW5zaW9uQ29udGFpbmVyKGV4dGVuc2lvbikge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGV4dGVuc2lvbi5maWVsZC5sb2NhbE5hbWU7XG4gICAgY29uc3QgY29udGFpbmVyID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBjb250YWluZXJbbG9jYWxOYW1lXSA9IGluaXRFeHRlbnNpb25GaWVsZChleHRlbnNpb24pO1xuICAgIHJldHVybiBbY29udGFpbmVyLCAoKSA9PiBjb250YWluZXJbbG9jYWxOYW1lXV07XG59XG5mdW5jdGlvbiBpbml0RXh0ZW5zaW9uRmllbGQoZXh0KSB7XG4gICAgY29uc3QgZmllbGQgPSBleHQuZmllbGQ7XG4gICAgaWYgKGZpZWxkLnJlcGVhdGVkKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgaWYgKGZpZWxkLmRlZmF1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZmllbGQuZGVmYXVsdDtcbiAgICB9XG4gICAgc3dpdGNoIChmaWVsZC5raW5kKSB7XG4gICAgICAgIGNhc2UgXCJlbnVtXCI6XG4gICAgICAgICAgICByZXR1cm4gZmllbGQuVC52YWx1ZXNbMF0ubm87XG4gICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgIHJldHVybiBzY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgZmllbGQuTCk7XG4gICAgICAgIGNhc2UgXCJtZXNzYWdlXCI6XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY2FzZS1kZWNsYXJhdGlvbnNcbiAgICAgICAgICAgIGNvbnN0IFQgPSBmaWVsZC5ULCB2YWx1ZSA9IG5ldyBUKCk7XG4gICAgICAgICAgICByZXR1cm4gVC5maWVsZFdyYXBwZXIgPyBULmZpZWxkV3JhcHBlci51bndyYXBGaWVsZCh2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgdGhyb3cgXCJtYXAgZmllbGRzIGFyZSBub3QgYWxsb3dlZCB0byBiZSBleHRlbnNpb25zXCI7XG4gICAgfVxufVxuLyoqXG4gKiBIZWxwZXIgdG8gZmlsdGVyIHVua25vd24gZmllbGRzLCBvcHRpbWl6ZWQgYmFzZWQgb24gZmllbGQgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclVua25vd25GaWVsZHModW5rbm93bkZpZWxkcywgZmllbGQpIHtcbiAgICBpZiAoIWZpZWxkLnJlcGVhdGVkICYmIChmaWVsZC5raW5kID09IFwiZW51bVwiIHx8IGZpZWxkLmtpbmQgPT0gXCJzY2FsYXJcIikpIHtcbiAgICAgICAgLy8gc2luZ3VsYXIgc2NhbGFyIGZpZWxkcyBkbyBub3QgbWVyZ2UsIHdlIHBpY2sgdGhlIGxhc3RcbiAgICAgICAgZm9yIChsZXQgaSA9IHVua25vd25GaWVsZHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgICAgIGlmICh1bmtub3duRmllbGRzW2ldLm5vID09IGZpZWxkLm5vKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFt1bmtub3duRmllbGRzW2ldXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiB1bmtub3duRmllbGRzLmZpbHRlcigodWYpID0+IHVmLm5vID09PSBmaWVsZC5ubyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/feature-set.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/feature-set.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFeatureResolver: function() { return /* binding */ createFeatureResolver; }\n/* harmony export */ });\n/* harmony import */ var _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../google/protobuf/descriptor_pb.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js\");\n/* harmony import */ var _proto_base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto-base64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Return the edition feature defaults supported by @bufbuild/protobuf.\n */\nfunction getFeatureSetDefaults(options) {\n    return _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSetDefaults.fromBinary(_proto_base64_js__WEBPACK_IMPORTED_MODULE_1__.protoBase64.dec(\n    /*upstream-inject-feature-defaults-start*/ \"ChMY5gciACoMCAEQAhgCIAMoATACChMY5wciACoMCAIQARgBIAIoATABChMY6AciDAgBEAEYASACKAEwASoAIOYHKOgH\" /*upstream-inject-feature-defaults-end*/), options);\n}\n/**\n * Create an edition feature resolver with the given feature set defaults, or\n * the feature set defaults supported by @bufbuild/protobuf.\n */\nfunction createFeatureResolver(edition, compiledFeatureSetDefaults, serializationOptions) {\n    var _a;\n    const fds = compiledFeatureSetDefaults !== null && compiledFeatureSetDefaults !== void 0 ? compiledFeatureSetDefaults : getFeatureSetDefaults(serializationOptions);\n    const min = fds.minimumEdition;\n    const max = fds.maximumEdition;\n    if (min === undefined ||\n        max === undefined ||\n        fds.defaults.some((d) => d.edition === undefined)) {\n        throw new Error(\"Invalid FeatureSetDefaults\");\n    }\n    if (edition < min) {\n        throw new Error(`Edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[edition]} is earlier than the minimum supported edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[min]}`);\n    }\n    if (max < edition) {\n        throw new Error(`Edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[edition]} is later than the maximum supported edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[max]}`);\n    }\n    let highestMatch = undefined;\n    for (const c of fds.defaults) {\n        const e = (_a = c.edition) !== null && _a !== void 0 ? _a : 0;\n        if (e > edition) {\n            continue;\n        }\n        if (highestMatch !== undefined && highestMatch.e > e) {\n            continue;\n        }\n        let f;\n        if (c.fixedFeatures && c.overridableFeatures) {\n            f = c.fixedFeatures;\n            f.fromBinary(c.overridableFeatures.toBinary());\n        }\n        else if (c.fixedFeatures) {\n            f = c.fixedFeatures;\n        }\n        else if (c.overridableFeatures) {\n            f = c.overridableFeatures;\n        }\n        else {\n            f = new _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSet();\n        }\n        highestMatch = {\n            e,\n            f,\n        };\n    }\n    if (highestMatch === undefined) {\n        throw new Error(`No valid default found for edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[edition]}`);\n    }\n    const featureSetBin = highestMatch.f.toBinary(serializationOptions);\n    return (...rest) => {\n        const f = _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSet.fromBinary(featureSetBin, serializationOptions);\n        for (const c of rest) {\n            if (c !== undefined) {\n                f.fromBinary(c.toBinary(serializationOptions), serializationOptions);\n            }\n        }\n        if (!validateMergedFeatures(f)) {\n            throw new Error(`Invalid FeatureSet for edition ${_google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.Edition[edition]}`);\n        }\n        return f;\n    };\n}\n// When protoc generates google.protobuf.FeatureSetDefaults, it ensures that\n// fields are not repeated or required, do not use oneof, and have a default\n// value.\n//\n// When features for an element are resolved, features of the element and its\n// parents are merged into the default FeatureSet for the edition. Because unset\n// fields in the FeatureSet of an element do not unset the default FeatureSet\n// values, a resolved FeatureSet is guaranteed to have all fields set. This is\n// also the case for extensions to FeatureSet that a user might provide, and for\n// features from the future.\n//\n// We cannot exhaustively validate correctness of FeatureSetDefaults at runtime\n// without knowing the schema: If no value for a feature is provided, we do not\n// know that it exists at all.\n//\n// As a sanity check, we validate that all fields known to our version of\n// FeatureSet are set.\nfunction validateMergedFeatures(featureSet) {\n    for (const fi of _google_protobuf_descriptor_pb_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSet.fields.list()) {\n        const v = featureSet[fi.localName];\n        if (v === undefined) {\n            return false;\n        }\n        if (fi.kind == \"enum\" && v === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmVhdHVyZS1zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0Y7QUFDOUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlGQUFrQixZQUFZLHlEQUFXO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsc0VBQU8sV0FBVyxnREFBZ0Qsc0VBQU8sTUFBTTtBQUNsSDtBQUNBO0FBQ0EsbUNBQW1DLHNFQUFPLFdBQVcsOENBQThDLHNFQUFPLE1BQU07QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUVBQVU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsc0VBQU8sVUFBVTtBQUMvRTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUVBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHNFQUFPLFVBQVU7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIseUVBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2ZlYXR1cmUtc2V0LmpzPzY4YTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IEVkaXRpb24sIEZlYXR1cmVTZXQsIEZlYXR1cmVTZXREZWZhdWx0cywgfSBmcm9tIFwiLi4vZ29vZ2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3JfcGIuanNcIjtcbmltcG9ydCB7IHByb3RvQmFzZTY0IH0gZnJvbSBcIi4uL3Byb3RvLWJhc2U2NC5qc1wiO1xuLyoqXG4gKiBSZXR1cm4gdGhlIGVkaXRpb24gZmVhdHVyZSBkZWZhdWx0cyBzdXBwb3J0ZWQgYnkgQGJ1ZmJ1aWxkL3Byb3RvYnVmLlxuICovXG5mdW5jdGlvbiBnZXRGZWF0dXJlU2V0RGVmYXVsdHMob3B0aW9ucykge1xuICAgIHJldHVybiBGZWF0dXJlU2V0RGVmYXVsdHMuZnJvbUJpbmFyeShwcm90b0Jhc2U2NC5kZWMoXG4gICAgLyp1cHN0cmVhbS1pbmplY3QtZmVhdHVyZS1kZWZhdWx0cy1zdGFydCovIFwiQ2hNWTVnY2lBQ29NQ0FFUUFoZ0NJQU1vQVRBQ0NoTVk1d2NpQUNvTUNBSVFBUmdCSUFJb0FUQUJDaE1ZNkFjaURBZ0JFQUVZQVNBQ0tBRXdBU29BSU9ZSEtPZ0hcIiAvKnVwc3RyZWFtLWluamVjdC1mZWF0dXJlLWRlZmF1bHRzLWVuZCovKSwgb3B0aW9ucyk7XG59XG4vKipcbiAqIENyZWF0ZSBhbiBlZGl0aW9uIGZlYXR1cmUgcmVzb2x2ZXIgd2l0aCB0aGUgZ2l2ZW4gZmVhdHVyZSBzZXQgZGVmYXVsdHMsIG9yXG4gKiB0aGUgZmVhdHVyZSBzZXQgZGVmYXVsdHMgc3VwcG9ydGVkIGJ5IEBidWZidWlsZC9wcm90b2J1Zi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZlYXR1cmVSZXNvbHZlcihlZGl0aW9uLCBjb21waWxlZEZlYXR1cmVTZXREZWZhdWx0cywgc2VyaWFsaXphdGlvbk9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZmRzID0gY29tcGlsZWRGZWF0dXJlU2V0RGVmYXVsdHMgIT09IG51bGwgJiYgY29tcGlsZWRGZWF0dXJlU2V0RGVmYXVsdHMgIT09IHZvaWQgMCA/IGNvbXBpbGVkRmVhdHVyZVNldERlZmF1bHRzIDogZ2V0RmVhdHVyZVNldERlZmF1bHRzKHNlcmlhbGl6YXRpb25PcHRpb25zKTtcbiAgICBjb25zdCBtaW4gPSBmZHMubWluaW11bUVkaXRpb247XG4gICAgY29uc3QgbWF4ID0gZmRzLm1heGltdW1FZGl0aW9uO1xuICAgIGlmIChtaW4gPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBtYXggPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBmZHMuZGVmYXVsdHMuc29tZSgoZCkgPT4gZC5lZGl0aW9uID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgRmVhdHVyZVNldERlZmF1bHRzXCIpO1xuICAgIH1cbiAgICBpZiAoZWRpdGlvbiA8IG1pbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVkaXRpb24gJHtFZGl0aW9uW2VkaXRpb25dfSBpcyBlYXJsaWVyIHRoYW4gdGhlIG1pbmltdW0gc3VwcG9ydGVkIGVkaXRpb24gJHtFZGl0aW9uW21pbl19YCk7XG4gICAgfVxuICAgIGlmIChtYXggPCBlZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRWRpdGlvbiAke0VkaXRpb25bZWRpdGlvbl19IGlzIGxhdGVyIHRoYW4gdGhlIG1heGltdW0gc3VwcG9ydGVkIGVkaXRpb24gJHtFZGl0aW9uW21heF19YCk7XG4gICAgfVxuICAgIGxldCBoaWdoZXN0TWF0Y2ggPSB1bmRlZmluZWQ7XG4gICAgZm9yIChjb25zdCBjIG9mIGZkcy5kZWZhdWx0cykge1xuICAgICAgICBjb25zdCBlID0gKF9hID0gYy5lZGl0aW9uKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAwO1xuICAgICAgICBpZiAoZSA+IGVkaXRpb24pIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChoaWdoZXN0TWF0Y2ggIT09IHVuZGVmaW5lZCAmJiBoaWdoZXN0TWF0Y2guZSA+IGUpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBmO1xuICAgICAgICBpZiAoYy5maXhlZEZlYXR1cmVzICYmIGMub3ZlcnJpZGFibGVGZWF0dXJlcykge1xuICAgICAgICAgICAgZiA9IGMuZml4ZWRGZWF0dXJlcztcbiAgICAgICAgICAgIGYuZnJvbUJpbmFyeShjLm92ZXJyaWRhYmxlRmVhdHVyZXMudG9CaW5hcnkoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYy5maXhlZEZlYXR1cmVzKSB7XG4gICAgICAgICAgICBmID0gYy5maXhlZEZlYXR1cmVzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMub3ZlcnJpZGFibGVGZWF0dXJlcykge1xuICAgICAgICAgICAgZiA9IGMub3ZlcnJpZGFibGVGZWF0dXJlcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGYgPSBuZXcgRmVhdHVyZVNldCgpO1xuICAgICAgICB9XG4gICAgICAgIGhpZ2hlc3RNYXRjaCA9IHtcbiAgICAgICAgICAgIGUsXG4gICAgICAgICAgICBmLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoaGlnaGVzdE1hdGNoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB2YWxpZCBkZWZhdWx0IGZvdW5kIGZvciBlZGl0aW9uICR7RWRpdGlvbltlZGl0aW9uXX1gKTtcbiAgICB9XG4gICAgY29uc3QgZmVhdHVyZVNldEJpbiA9IGhpZ2hlc3RNYXRjaC5mLnRvQmluYXJ5KHNlcmlhbGl6YXRpb25PcHRpb25zKTtcbiAgICByZXR1cm4gKC4uLnJlc3QpID0+IHtcbiAgICAgICAgY29uc3QgZiA9IEZlYXR1cmVTZXQuZnJvbUJpbmFyeShmZWF0dXJlU2V0QmluLCBzZXJpYWxpemF0aW9uT3B0aW9ucyk7XG4gICAgICAgIGZvciAoY29uc3QgYyBvZiByZXN0KSB7XG4gICAgICAgICAgICBpZiAoYyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZi5mcm9tQmluYXJ5KGMudG9CaW5hcnkoc2VyaWFsaXphdGlvbk9wdGlvbnMpLCBzZXJpYWxpemF0aW9uT3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF2YWxpZGF0ZU1lcmdlZEZlYXR1cmVzKGYpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgRmVhdHVyZVNldCBmb3IgZWRpdGlvbiAke0VkaXRpb25bZWRpdGlvbl19YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGY7XG4gICAgfTtcbn1cbi8vIFdoZW4gcHJvdG9jIGdlbmVyYXRlcyBnb29nbGUucHJvdG9idWYuRmVhdHVyZVNldERlZmF1bHRzLCBpdCBlbnN1cmVzIHRoYXRcbi8vIGZpZWxkcyBhcmUgbm90IHJlcGVhdGVkIG9yIHJlcXVpcmVkLCBkbyBub3QgdXNlIG9uZW9mLCBhbmQgaGF2ZSBhIGRlZmF1bHRcbi8vIHZhbHVlLlxuLy9cbi8vIFdoZW4gZmVhdHVyZXMgZm9yIGFuIGVsZW1lbnQgYXJlIHJlc29sdmVkLCBmZWF0dXJlcyBvZiB0aGUgZWxlbWVudCBhbmQgaXRzXG4vLyBwYXJlbnRzIGFyZSBtZXJnZWQgaW50byB0aGUgZGVmYXVsdCBGZWF0dXJlU2V0IGZvciB0aGUgZWRpdGlvbi4gQmVjYXVzZSB1bnNldFxuLy8gZmllbGRzIGluIHRoZSBGZWF0dXJlU2V0IG9mIGFuIGVsZW1lbnQgZG8gbm90IHVuc2V0IHRoZSBkZWZhdWx0IEZlYXR1cmVTZXRcbi8vIHZhbHVlcywgYSByZXNvbHZlZCBGZWF0dXJlU2V0IGlzIGd1YXJhbnRlZWQgdG8gaGF2ZSBhbGwgZmllbGRzIHNldC4gVGhpcyBpc1xuLy8gYWxzbyB0aGUgY2FzZSBmb3IgZXh0ZW5zaW9ucyB0byBGZWF0dXJlU2V0IHRoYXQgYSB1c2VyIG1pZ2h0IHByb3ZpZGUsIGFuZCBmb3Jcbi8vIGZlYXR1cmVzIGZyb20gdGhlIGZ1dHVyZS5cbi8vXG4vLyBXZSBjYW5ub3QgZXhoYXVzdGl2ZWx5IHZhbGlkYXRlIGNvcnJlY3RuZXNzIG9mIEZlYXR1cmVTZXREZWZhdWx0cyBhdCBydW50aW1lXG4vLyB3aXRob3V0IGtub3dpbmcgdGhlIHNjaGVtYTogSWYgbm8gdmFsdWUgZm9yIGEgZmVhdHVyZSBpcyBwcm92aWRlZCwgd2UgZG8gbm90XG4vLyBrbm93IHRoYXQgaXQgZXhpc3RzIGF0IGFsbC5cbi8vXG4vLyBBcyBhIHNhbml0eSBjaGVjaywgd2UgdmFsaWRhdGUgdGhhdCBhbGwgZmllbGRzIGtub3duIHRvIG91ciB2ZXJzaW9uIG9mXG4vLyBGZWF0dXJlU2V0IGFyZSBzZXQuXG5mdW5jdGlvbiB2YWxpZGF0ZU1lcmdlZEZlYXR1cmVzKGZlYXR1cmVTZXQpIHtcbiAgICBmb3IgKGNvbnN0IGZpIG9mIEZlYXR1cmVTZXQuZmllbGRzLmxpc3QoKSkge1xuICAgICAgICBjb25zdCB2ID0gZmVhdHVyZVNldFtmaS5sb2NhbE5hbWVdO1xuICAgICAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpLmtpbmQgPT0gXCJlbnVtXCIgJiYgdiA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/feature-set.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalFieldList: function() { return /* binding */ InternalFieldList; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtbGlzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9maWVsZC1saXN0LmpzPzgwZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmV4cG9ydCBjbGFzcyBJbnRlcm5hbEZpZWxkTGlzdCB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzLCBub3JtYWxpemVyKSB7XG4gICAgICAgIHRoaXMuX2ZpZWxkcyA9IGZpZWxkcztcbiAgICAgICAgdGhpcy5fbm9ybWFsaXplciA9IG5vcm1hbGl6ZXI7XG4gICAgfVxuICAgIGZpbmRKc29uTmFtZShqc29uTmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMuanNvbk5hbWVzKSB7XG4gICAgICAgICAgICBjb25zdCB0ID0ge307XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGYgb2YgdGhpcy5saXN0KCkpIHtcbiAgICAgICAgICAgICAgICB0W2YuanNvbk5hbWVdID0gdFtmLm5hbWVdID0gZjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuanNvbk5hbWVzID0gdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5qc29uTmFtZXNbanNvbk5hbWVdO1xuICAgIH1cbiAgICBmaW5kKGZpZWxkTm8pIHtcbiAgICAgICAgaWYgKCF0aGlzLm51bWJlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHQgPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZiBvZiB0aGlzLmxpc3QoKSkge1xuICAgICAgICAgICAgICAgIHRbZi5ub10gPSBmO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5udW1iZXJzID0gdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5udW1iZXJzW2ZpZWxkTm9dO1xuICAgIH1cbiAgICBsaXN0KCkge1xuICAgICAgICBpZiAoIXRoaXMuYWxsKSB7XG4gICAgICAgICAgICB0aGlzLmFsbCA9IHRoaXMuX25vcm1hbGl6ZXIodGhpcy5fZmllbGRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5hbGw7XG4gICAgfVxuICAgIGJ5TnVtYmVyKCkge1xuICAgICAgICBpZiAoIXRoaXMubnVtYmVyc0FzYykge1xuICAgICAgICAgICAgdGhpcy5udW1iZXJzQXNjID0gdGhpcy5saXN0KClcbiAgICAgICAgICAgICAgICAuY29uY2F0KClcbiAgICAgICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5ubyAtIGIubm8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLm51bWJlcnNBc2M7XG4gICAgfVxuICAgIGJ5TWVtYmVyKCkge1xuICAgICAgICBpZiAoIXRoaXMubWVtYmVycykge1xuICAgICAgICAgICAgdGhpcy5tZW1iZXJzID0gW107XG4gICAgICAgICAgICBjb25zdCBhID0gdGhpcy5tZW1iZXJzO1xuICAgICAgICAgICAgbGV0IG87XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGYgb2YgdGhpcy5saXN0KCkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZi5vbmVvZikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZi5vbmVvZiAhPT0gbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbyA9IGYub25lb2Y7XG4gICAgICAgICAgICAgICAgICAgICAgICBhLnB1c2gobyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGEucHVzaChmKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubWVtYmVycztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeFieldInfos: function() { return /* binding */ normalizeFieldInfos; }\n/* harmony export */ });\n/* harmony import */ var _field_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./field.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field.js\");\n/* harmony import */ var _names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nfunction normalizeFieldInfos(fieldInfos, packedByDefault) {\n    var _a, _b, _c, _d, _e, _f;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : _scalar_js__WEBPACK_IMPORTED_MODULE_1__.LongType.BIGINT;\n        }\n        f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n        f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n        f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n        if (field.packed === undefined) {\n            if (packedByDefault) {\n                f.packed =\n                    field.kind == \"enum\" ||\n                        (field.kind == \"scalar\" &&\n                            field.T != _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES &&\n                            field.T != _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING);\n            }\n            else {\n                f.packed = false;\n            }\n        }\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new _field_js__WEBPACK_IMPORTED_MODULE_2__.InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtbm9ybWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQztBQUNZO0FBQ1A7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBYztBQUNwQyw0RUFBNEUsd0RBQWE7QUFDekY7QUFDQTtBQUNBLGtFQUFrRSxnREFBUTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsa0RBQVU7QUFDakQsdUNBQXVDLGtEQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHdEQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9maWVsZC1ub3JtYWxpemUuanM/NWRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgSW50ZXJuYWxPbmVvZkluZm8gfSBmcm9tIFwiLi9maWVsZC5qc1wiO1xuaW1wb3J0IHsgZmllbGRKc29uTmFtZSwgbG9jYWxGaWVsZE5hbWUgfSBmcm9tIFwiLi9uYW1lcy5qc1wiO1xuaW1wb3J0IHsgTG9uZ1R5cGUsIFNjYWxhclR5cGUgfSBmcm9tIFwiLi4vc2NhbGFyLmpzXCI7XG4vKipcbiAqIENvbnZlcnQgYSBjb2xsZWN0aW9uIG9mIGZpZWxkIGluZm8gdG8gYW4gYXJyYXkgb2Ygbm9ybWFsaXplZCBGaWVsZEluZm8uXG4gKlxuICogVGhlIGFyZ3VtZW50IGBwYWNrZWRCeURlZmF1bHRgIHNwZWNpZmllcyB3aGV0aGVyIGZpZWxkcyB0aGF0IGRvIG5vdCBzcGVjaWZ5XG4gKiBgcGFja2VkYCBzaG91bGQgYmUgcGFja2VkIChwcm90bzMpIG9yIHVucGFja2VkIChwcm90bzIpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplRmllbGRJbmZvcyhmaWVsZEluZm9zLCBwYWNrZWRCeURlZmF1bHQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgICBjb25zdCByID0gW107XG4gICAgbGV0IG87XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlb2YgZmllbGRJbmZvcyA9PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgPyBmaWVsZEluZm9zKClcbiAgICAgICAgOiBmaWVsZEluZm9zKSB7XG4gICAgICAgIGNvbnN0IGYgPSBmaWVsZDtcbiAgICAgICAgZi5sb2NhbE5hbWUgPSBsb2NhbEZpZWxkTmFtZShmaWVsZC5uYW1lLCBmaWVsZC5vbmVvZiAhPT0gdW5kZWZpbmVkKTtcbiAgICAgICAgZi5qc29uTmFtZSA9IChfYSA9IGZpZWxkLmpzb25OYW1lKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBmaWVsZEpzb25OYW1lKGZpZWxkLm5hbWUpO1xuICAgICAgICBmLnJlcGVhdGVkID0gKF9iID0gZmllbGQucmVwZWF0ZWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGZhbHNlO1xuICAgICAgICBpZiAoZmllbGQua2luZCA9PSBcInNjYWxhclwiKSB7XG4gICAgICAgICAgICBmLkwgPSAoX2MgPSBmaWVsZC5MKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBMb25nVHlwZS5CSUdJTlQ7XG4gICAgICAgIH1cbiAgICAgICAgZi5kZWxpbWl0ZWQgPSAoX2QgPSBmaWVsZC5kZWxpbWl0ZWQpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IGZhbHNlO1xuICAgICAgICBmLnJlcSA9IChfZSA9IGZpZWxkLnJlcSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogZmFsc2U7XG4gICAgICAgIGYub3B0ID0gKF9mID0gZmllbGQub3B0KSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBmYWxzZTtcbiAgICAgICAgaWYgKGZpZWxkLnBhY2tlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAocGFja2VkQnlEZWZhdWx0KSB7XG4gICAgICAgICAgICAgICAgZi5wYWNrZWQgPVxuICAgICAgICAgICAgICAgICAgICBmaWVsZC5raW5kID09IFwiZW51bVwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoZmllbGQua2luZCA9PSBcInNjYWxhclwiICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuVCAhPSBTY2FsYXJUeXBlLkJZVEVTICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuVCAhPSBTY2FsYXJUeXBlLlNUUklORyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmLnBhY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFdlIGRvIG5vdCBzdXJmYWNlIG9wdGlvbnMgYXQgdGhpcyB0aW1lXG4gICAgICAgIC8vIGYub3B0aW9ucyA9IGZpZWxkLm9wdGlvbnMgPz8gZW1wdHlSZWFkb25seU9iamVjdDtcbiAgICAgICAgaWYgKGZpZWxkLm9uZW9mICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG9vbmFtZSA9IHR5cGVvZiBmaWVsZC5vbmVvZiA9PSBcInN0cmluZ1wiID8gZmllbGQub25lb2YgOiBmaWVsZC5vbmVvZi5uYW1lO1xuICAgICAgICAgICAgaWYgKCFvIHx8IG8ubmFtZSAhPSBvb25hbWUpIHtcbiAgICAgICAgICAgICAgICBvID0gbmV3IEludGVybmFsT25lb2ZJbmZvKG9vbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmLm9uZW9mID0gbztcbiAgICAgICAgICAgIG8uYWRkRmllbGQoZik7XG4gICAgICAgIH1cbiAgICAgICAgci5wdXNoKGYpO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUnwrappedFieldType: function() { return /* binding */ getUnwrappedFieldType; },\n/* harmony export */   wrapField: function() { return /* binding */ wrapField; }\n/* harmony export */ });\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nfunction wrapField(type, value) {\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(value) || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nfunction getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL,\n    \"google.protobuf.StringValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING,\n    \"google.protobuf.BytesValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtd3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDRTtBQUNHO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLHlEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBVTtBQUM3QyxrQ0FBa0Msa0RBQVU7QUFDNUMsa0NBQWtDLGtEQUFVO0FBQzVDLG1DQUFtQyxrREFBVTtBQUM3QyxrQ0FBa0Msa0RBQVU7QUFDNUMsbUNBQW1DLGtEQUFVO0FBQzdDLGlDQUFpQyxrREFBVTtBQUMzQyxtQ0FBbUMsa0RBQVU7QUFDN0Msa0NBQWtDLGtEQUFVO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9maWVsZC13cmFwcGVyLmpzPzNkY2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi4vbWVzc2FnZS5qc1wiO1xuaW1wb3J0IHsgU2NhbGFyVHlwZSB9IGZyb20gXCIuLi9zY2FsYXIuanNcIjtcbmltcG9ydCB7IGlzTWVzc2FnZSB9IGZyb20gXCIuLi9pcy1tZXNzYWdlLmpzXCI7XG4vKipcbiAqIFdyYXAgYSBwcmltaXRpdmUgbWVzc2FnZSBmaWVsZCB2YWx1ZSBpbiBpdHMgY29ycmVzcG9uZGluZyB3cmFwcGVyXG4gKiBtZXNzYWdlLiBUaGlzIGZ1bmN0aW9uIGlzIGlkZW1wb3RlbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3cmFwRmllbGQodHlwZSwgdmFsdWUpIHtcbiAgICBpZiAoaXNNZXNzYWdlKHZhbHVlKSB8fCAhdHlwZS5maWVsZFdyYXBwZXIpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZS5maWVsZFdyYXBwZXIud3JhcEZpZWxkKHZhbHVlKTtcbn1cbi8qKlxuICogSWYgdGhlIGdpdmVuIGZpZWxkIHVzZXMgb25lIG9mIHRoZSB3ZWxsLWtub3duIHdyYXBwZXIgdHlwZXMsIHJldHVyblxuICogdGhlIHByaW1pdGl2ZSB0eXBlIGl0IHdyYXBzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VW53cmFwcGVkRmllbGRUeXBlKGZpZWxkKSB7XG4gICAgaWYgKGZpZWxkLmZpZWxkS2luZCAhPT0gXCJtZXNzYWdlXCIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKGZpZWxkLnJlcGVhdGVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChmaWVsZC5vbmVvZiAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHdrdFdyYXBwZXJUb1NjYWxhclR5cGVbZmllbGQubWVzc2FnZS50eXBlTmFtZV07XG59XG5jb25zdCB3a3RXcmFwcGVyVG9TY2FsYXJUeXBlID0ge1xuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlXCI6IFNjYWxhclR5cGUuRE9VQkxFLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWVcIjogU2NhbGFyVHlwZS5GTE9BVCxcbiAgICBcImdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlXCI6IFNjYWxhclR5cGUuSU5UNjQsXG4gICAgXCJnb29nbGUucHJvdG9idWYuVUludDY0VmFsdWVcIjogU2NhbGFyVHlwZS5VSU5UNjQsXG4gICAgXCJnb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZVwiOiBTY2FsYXJUeXBlLklOVDMyLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlXCI6IFNjYWxhclR5cGUuVUlOVDMyLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZVwiOiBTY2FsYXJUeXBlLkJPT0wsXG4gICAgXCJnb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVcIjogU2NhbGFyVHlwZS5TVFJJTkcsXG4gICAgXCJnb29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZVwiOiBTY2FsYXJUeXBlLkJZVEVTLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalOneofInfo: function() { return /* binding */ InternalOneofInfo; }\n/* harmony export */ });\n/* harmony import */ var _names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nclass InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.req = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.localOneofName)(name);\n    }\n    addField(field) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.assert)(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEM7QUFDUDtBQUM5QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5REFBYztBQUN2QztBQUNBO0FBQ0EsUUFBUSxrREFBTSxnQ0FBZ0MsWUFBWSxhQUFhLFVBQVU7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3QkFBd0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9maWVsZC5qcz9kMjBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2NhbE9uZW9mTmFtZSB9IGZyb20gXCIuL25hbWVzLmpzXCI7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiLi9hc3NlcnQuanNcIjtcbmV4cG9ydCBjbGFzcyBJbnRlcm5hbE9uZW9mSW5mbyB7XG4gICAgY29uc3RydWN0b3IobmFtZSkge1xuICAgICAgICB0aGlzLmtpbmQgPSBcIm9uZW9mXCI7XG4gICAgICAgIHRoaXMucmVwZWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wYWNrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5vcHQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZXEgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmZpZWxkcyA9IFtdO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmxvY2FsTmFtZSA9IGxvY2FsT25lb2ZOYW1lKG5hbWUpO1xuICAgIH1cbiAgICBhZGRGaWVsZChmaWVsZCkge1xuICAgICAgICBhc3NlcnQoZmllbGQub25lb2YgPT09IHRoaXMsIGBmaWVsZCAke2ZpZWxkLm5hbWV9IG5vdCBvbmUgb2YgJHt0aGlzLm5hbWV9YCk7XG4gICAgICAgIHRoaXMuZmllbGRzLnB1c2goZmllbGQpO1xuICAgIH1cbiAgICBmaW5kRmllbGQobG9jYWxOYW1lKSB7XG4gICAgICAgIGlmICghdGhpcy5fbG9va3VwKSB7XG4gICAgICAgICAgICB0aGlzLl9sb29rdXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvb2t1cFt0aGlzLmZpZWxkc1tpXS5sb2NhbE5hbWVdID0gdGhpcy5maWVsZHNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvb2t1cFtsb2NhbE5hbWVdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeJsonFormat: function() { return /* binding */ makeJsonFormat; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../proto-base64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n/* harmony import */ var _extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extension-accessor.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\");\n/* harmony import */ var _reflect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflect.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\");\n/* harmony import */ var _field_wrapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./field-wrapper.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nfunction makeJsonFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = new Map();\n            const registry = options.typeRegistry;\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (field) {\n                    if (field.oneof) {\n                        if (jsonValue === null && field.kind == \"scalar\") {\n                            // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                            continue;\n                        }\n                        const seen = oneofSeen.get(field.oneof);\n                        if (seen !== undefined) {\n                            throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                        }\n                        oneofSeen.set(field.oneof, jsonKey);\n                    }\n                    readField(message, jsonValue, field, options, type);\n                }\n                else {\n                    let found = false;\n                    if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) &&\n                        jsonKey.startsWith(\"[\") &&\n                        jsonKey.endsWith(\"]\")) {\n                        const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n                        if (ext && ext.extendee.typeName == type.typeName) {\n                            found = true;\n                            const [container, get] = (0,_extensions_js__WEBPACK_IMPORTED_MODULE_0__.createExtensionContainer)(ext);\n                            readField(container, jsonValue, ext.field, options, ext);\n                            // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n                            // so that users can bring their own binary reader and writer factories\n                            // if necessary.\n                            (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.setExtension)(message, ext, get(), options);\n                        }\n                    }\n                    if (!found && !options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    if (!(0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.isFieldSet)(field, message)) {\n                        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                        if (field.req) {\n                            throw `required field not set`;\n                        }\n                        if (!options.emitDefaultValues) {\n                            continue;\n                        }\n                        if (!canEmitFieldDefaultValue(field)) {\n                            continue;\n                        }\n                    }\n                    const value = field.oneof\n                        ? message[field.oneof.localName].value\n                        : message[field.localName];\n                    const jsonValue = writeField(field, value, options);\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n                const registry = options.typeRegistry;\n                if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n                    for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                        const ext = registry.findExtensionFor(type.typeName, uf.no);\n                        if (ext && (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.hasExtension)(message, ext)) {\n                            // We pass on the options as BinaryReadOptions, so that users can bring their own\n                            // binary reader factory if necessary.\n                            const value = (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.getExtension)(message, ext, options);\n                            const jsonValue = writeField(ext.field, value, options);\n                            if (jsonValue !== undefined) {\n                                json[ext.field.jsonName] = jsonValue;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar(type, json, longType) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            return readScalar(type, json, longType !== null && longType !== void 0 ? longType : _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true);\n        },\n        writeScalar(type, value, emitDefaultValues) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            if (emitDefaultValues || (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.isScalarZeroValue)(type, value)) {\n                return writeScalar(type, value);\n            }\n            return undefined;\n        },\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField(target, jsonValue, field, options, parentType) {\n    let localName = field.localName;\n    if (field.repeated) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(field.kind != \"map\");\n        if (jsonValue === null) {\n            return;\n        }\n        if (!Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetArray = target[localName];\n        for (const jsonItem of jsonValue) {\n            if (jsonItem === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n            }\n            switch (field.kind) {\n                case \"message\":\n                    targetArray.push(field.T.fromJson(jsonItem, options));\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetArray.push(enumValue);\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n                    }\n                    catch (e) {\n                        let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else if (field.kind == \"map\") {\n        if (jsonValue === null) {\n            return;\n        }\n        if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetMap = target[localName];\n        for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n            if (jsonMapValue === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n            }\n            let key;\n            try {\n                key = readMapKey(field.K, jsonMapKey);\n            }\n            catch (e) {\n                let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                if (e instanceof Error && e.message.length > 0) {\n                    m += `: ${e.message}`;\n                }\n                throw new Error(m);\n            }\n            switch (field.V.kind) {\n                case \"message\":\n                    targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetMap[key] = enumValue;\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetMap[key] = readScalar(field.V.T, jsonMapValue, _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true);\n                    }\n                    catch (e) {\n                        let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else {\n        if (field.oneof) {\n            target = target[field.oneof.localName] = { case: localName };\n            localName = \"value\";\n        }\n        switch (field.kind) {\n            case \"message\":\n                const messageType = field.T;\n                if (jsonValue === null &&\n                    messageType.typeName != \"google.protobuf.Value\") {\n                    return;\n                }\n                let currentValue = target[localName];\n                if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_6__.isMessage)(currentValue)) {\n                    currentValue.fromJson(jsonValue, options);\n                }\n                else {\n                    target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n                    if (messageType.fieldWrapper && !field.oneof) {\n                        target[localName] =\n                            messageType.fieldWrapper.unwrapField(currentValue);\n                    }\n                }\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n                switch (enumValue) {\n                    case tokenNull:\n                        (0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.clearField)(field, target);\n                        break;\n                    case tokenIgnoredUnknownEnum:\n                        break;\n                    default:\n                        target[localName] = enumValue;\n                        break;\n                }\n                break;\n            case \"scalar\":\n                try {\n                    const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n                    switch (scalarValue) {\n                        case tokenNull:\n                            (0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.clearField)(field, target);\n                            break;\n                        default:\n                            target[localName] = scalarValue;\n                            break;\n                    }\n                }\n                catch (e) {\n                    let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                    if (e instanceof Error && e.message.length > 0) {\n                        m += `: ${e.message}`;\n                    }\n                    throw new Error(m);\n                }\n                break;\n        }\n    }\n}\nfunction readMapKey(type, json) {\n    if (type === _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL) {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (json) {\n            case \"true\":\n                json = true;\n                break;\n            case \"false\":\n                json = false;\n                break;\n        }\n    }\n    return readScalar(type, json, _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(type, longType);\n        }\n        return tokenNull;\n    }\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT)\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertFloat32)(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32:\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32 || type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32)\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertUInt32)(int32);\n            else\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertInt32)(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__.protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__.protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL:\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.STRING:\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BYTES:\n            if (json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__.protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (type.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? type.values[0].no : tokenNull;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value !== undefined) {\n                return value.no;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n    if (field.repeated || field.kind == \"map\") {\n        // maps are {}, repeated fields are []\n        return true;\n    }\n    if (field.oneof) {\n        // oneof fields are never emitted\n        return false;\n    }\n    if (field.kind == \"message\") {\n        // singular message field are allowed to emit JSON null, but we do not\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.opt || field.req) {\n        // the field uses explicit presence, so we cannot emit a zero value\n        return false;\n    }\n    return true;\n}\nfunction writeField(field, value, options) {\n    if (field.kind == \"map\") {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"object\" && value != null);\n        const jsonObj = {};\n        const entries = Object.entries(value);\n        switch (field.V.kind) {\n            case \"scalar\":\n                for (const [entryKey, entryValue] of entries) {\n                    jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n                }\n                break;\n            case \"message\":\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                }\n                break;\n            case \"enum\":\n                const enumType = field.V.T;\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n                }\n                break;\n        }\n        return options.emitDefaultValues || entries.length > 0\n            ? jsonObj\n            : undefined;\n    }\n    if (field.repeated) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n        const jsonArr = [];\n        switch (field.kind) {\n            case \"scalar\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeScalar(field.T, value[i]));\n                }\n                break;\n            case \"enum\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n                }\n                break;\n            case \"message\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(value[i].toJson(options));\n                }\n                break;\n        }\n        return options.emitDefaultValues || jsonArr.length > 0\n            ? jsonArr\n            : undefined;\n    }\n    switch (field.kind) {\n        case \"scalar\":\n            return writeScalar(field.T, value);\n        case \"enum\":\n            return writeEnum(field.T, value, options.enumAsInteger);\n        case \"message\":\n            return (0,_field_wrapper_js__WEBPACK_IMPORTED_MODULE_9__.wrapField)(field.T, value).toJson(options);\n    }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n    var _a;\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value) {\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT:\n        // assertFloat32(value);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.STRING:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"string\");\n            return value;\n        // bool:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"boolean\");\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT64:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BYTES:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value instanceof Uint8Array);\n            return _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__.protoBase64.enc(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeMessageType: function() { return /* binding */ makeMessageType; }\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Create a new message type using the given runtime.\n */\nfunction makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new _message_js__WEBPACK_IMPORTED_MODULE_0__.Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvbWVzc2FnZS10eXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLDhDQUE4QyxnREFBTztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL21lc3NhZ2UtdHlwZS5qcz81YzQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4uL21lc3NhZ2UuanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgbmV3IG1lc3NhZ2UgdHlwZSB1c2luZyB0aGUgZ2l2ZW4gcnVudGltZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VNZXNzYWdlVHlwZShydW50aW1lLCB0eXBlTmFtZSwgZmllbGRzLCBvcHQpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgbG9jYWxOYW1lID0gKF9hID0gb3B0ID09PSBudWxsIHx8IG9wdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0LmxvY2FsTmFtZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdHlwZU5hbWUuc3Vic3RyaW5nKHR5cGVOYW1lLmxhc3RJbmRleE9mKFwiLlwiKSArIDEpO1xuICAgIGNvbnN0IHR5cGUgPSB7XG4gICAgICAgIFtsb2NhbE5hbWVdOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgcnVudGltZS51dGlsLmluaXRGaWVsZHModGhpcyk7XG4gICAgICAgICAgICBydW50aW1lLnV0aWwuaW5pdFBhcnRpYWwoZGF0YSwgdGhpcyk7XG4gICAgICAgIH0sXG4gICAgfVtsb2NhbE5hbWVdO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0eXBlLnByb3RvdHlwZSwgbmV3IE1lc3NhZ2UoKSk7XG4gICAgT2JqZWN0LmFzc2lnbih0eXBlLCB7XG4gICAgICAgIHJ1bnRpbWUsXG4gICAgICAgIHR5cGVOYW1lLFxuICAgICAgICBmaWVsZHM6IHJ1bnRpbWUudXRpbC5uZXdGaWVsZExpc3QoZmllbGRzKSxcbiAgICAgICAgZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucyk7XG4gICAgICAgIH0sXG4gICAgICAgIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKTtcbiAgICAgICAgfSxcbiAgICAgICAgZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVxdWFscyhhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gcnVudGltZS51dGlsLmVxdWFscyh0eXBlLCBhLCBiKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gdHlwZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/names.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/names.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fieldJsonName: function() { return /* binding */ fieldJsonName; },\n/* harmony export */   findEnumSharedPrefix: function() { return /* binding */ findEnumSharedPrefix; },\n/* harmony export */   localFieldName: function() { return /* binding */ localFieldName; },\n/* harmony export */   localName: function() { return /* binding */ localName; },\n/* harmony export */   localOneofName: function() { return /* binding */ localOneofName; },\n/* harmony export */   safeIdentifier: function() { return /* binding */ safeIdentifier; },\n/* harmony export */   safeObjectProperty: function() { return /* binding */ safeObjectProperty; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nfunction localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n        case \"extension\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            let name = desc.name;\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix !== undefined) {\n                name = name.substring(sharedPrefix.length);\n            }\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nfunction localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nfunction localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nconst fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nfunction findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nconst safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeProtoRuntime: function() { return /* binding */ makeProtoRuntime; }\n/* harmony export */ });\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enum.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\");\n/* harmony import */ var _message_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message-type.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n/* harmony import */ var _json_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json-format.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\");\n/* harmony import */ var _binary_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary-format.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js\");\n/* harmony import */ var _util_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util-common.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\nfunction makeProtoRuntime(syntax, newFieldList, initFields) {\n    return {\n        syntax,\n        json: (0,_json_format_js__WEBPACK_IMPORTED_MODULE_0__.makeJsonFormat)(),\n        bin: (0,_binary_format_js__WEBPACK_IMPORTED_MODULE_1__.makeBinaryFormat)(),\n        util: Object.assign(Object.assign({}, (0,_util_common_js__WEBPACK_IMPORTED_MODULE_2__.makeUtilCommon)()), { newFieldList,\n            initFields }),\n        makeMessageType(typeName, fields, opt) {\n            return (0,_message_type_js__WEBPACK_IMPORTED_MODULE_3__.makeMessageType)(this, typeName, fields, opt);\n        },\n        makeEnum: _enum_js__WEBPACK_IMPORTED_MODULE_4__.makeEnum,\n        makeEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_4__.makeEnumType,\n        getEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_4__.getEnumType,\n        makeExtension(typeName, extendee, field) {\n            return (0,_extensions_js__WEBPACK_IMPORTED_MODULE_5__.makeExtension)(this, typeName, extendee, field);\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvcHJvdG8tcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0U7QUFDWjtBQUNKO0FBQ0U7QUFDSTtBQUNKO0FBQzNDO0FBQ1A7QUFDQTtBQUNBLGNBQWMsK0RBQWM7QUFDNUIsYUFBYSxtRUFBZ0I7QUFDN0IsNENBQTRDLEVBQUUsK0RBQWMsT0FBTztBQUNuRSx3QkFBd0I7QUFDeEI7QUFDQSxtQkFBbUIsaUVBQWU7QUFDbEMsU0FBUztBQUNULGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CO0FBQ0EsbUJBQW1CLDZEQUFhO0FBQ2hDLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9wcm90by1ydW50aW1lLmpzPzA3MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGdldEVudW1UeXBlLCBtYWtlRW51bSwgbWFrZUVudW1UeXBlIH0gZnJvbSBcIi4vZW51bS5qc1wiO1xuaW1wb3J0IHsgbWFrZU1lc3NhZ2VUeXBlIH0gZnJvbSBcIi4vbWVzc2FnZS10eXBlLmpzXCI7XG5pbXBvcnQgeyBtYWtlRXh0ZW5zaW9uIH0gZnJvbSBcIi4vZXh0ZW5zaW9ucy5qc1wiO1xuaW1wb3J0IHsgbWFrZUpzb25Gb3JtYXQgfSBmcm9tIFwiLi9qc29uLWZvcm1hdC5qc1wiO1xuaW1wb3J0IHsgbWFrZUJpbmFyeUZvcm1hdCB9IGZyb20gXCIuL2JpbmFyeS1mb3JtYXQuanNcIjtcbmltcG9ydCB7IG1ha2VVdGlsQ29tbW9uIH0gZnJvbSBcIi4vdXRpbC1jb21tb24uanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBtYWtlUHJvdG9SdW50aW1lKHN5bnRheCwgbmV3RmllbGRMaXN0LCBpbml0RmllbGRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3ludGF4LFxuICAgICAgICBqc29uOiBtYWtlSnNvbkZvcm1hdCgpLFxuICAgICAgICBiaW46IG1ha2VCaW5hcnlGb3JtYXQoKSxcbiAgICAgICAgdXRpbDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtYWtlVXRpbENvbW1vbigpKSwgeyBuZXdGaWVsZExpc3QsXG4gICAgICAgICAgICBpbml0RmllbGRzIH0pLFxuICAgICAgICBtYWtlTWVzc2FnZVR5cGUodHlwZU5hbWUsIGZpZWxkcywgb3B0KSB7XG4gICAgICAgICAgICByZXR1cm4gbWFrZU1lc3NhZ2VUeXBlKHRoaXMsIHR5cGVOYW1lLCBmaWVsZHMsIG9wdCk7XG4gICAgICAgIH0sXG4gICAgICAgIG1ha2VFbnVtLFxuICAgICAgICBtYWtlRW51bVR5cGUsXG4gICAgICAgIGdldEVudW1UeXBlLFxuICAgICAgICBtYWtlRXh0ZW5zaW9uKHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpIHtcbiAgICAgICAgICAgIHJldHVybiBtYWtlRXh0ZW5zaW9uKHRoaXMsIHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearField: function() { return /* binding */ clearField; },\n/* harmony export */   isFieldSet: function() { return /* binding */ isFieldSet; }\n/* harmony export */ });\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Returns true if the field is set.\n */\nfunction isFieldSet(field, target) {\n    const localName = field.localName;\n    if (field.repeated) {\n        return target[localName].length > 0;\n    }\n    if (field.oneof) {\n        return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    switch (field.kind) {\n        case \"enum\":\n        case \"scalar\":\n            if (field.opt || field.req) {\n                // explicit presence\n                return target[localName] !== undefined;\n            }\n            // implicit presence\n            if (field.kind == \"enum\") {\n                return target[localName] !== field.T.values[0].no;\n            }\n            return !(0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.isScalarZeroValue)(field.T, target[localName]);\n        case \"message\":\n            return target[localName] !== undefined;\n        case \"map\":\n            return Object.keys(target[localName]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n    }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nfunction clearField(field, target) {\n    const localName = field.localName;\n    const implicitPresence = !field.opt && !field.req;\n    if (field.repeated) {\n        target[localName] = [];\n    }\n    else if (field.oneof) {\n        target[field.oneof.localName] = { case: undefined };\n    }\n    else {\n        switch (field.kind) {\n            case \"map\":\n                target[localName] = {};\n                break;\n            case \"enum\":\n                target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n                break;\n            case \"scalar\":\n                target[localName] = implicitPresence\n                    ? (0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.scalarZeroValue)(field.T, field.L)\n                    : undefined;\n                break;\n            case \"message\":\n                target[localName] = undefined;\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvcmVmbGVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhEQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvcmVmbGVjdC5qcz83OTE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBpc1NjYWxhclplcm9WYWx1ZSwgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vc2NhbGFycy5qc1wiO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIGlzIHNldC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRmllbGRTZXQoZmllbGQsIHRhcmdldCkge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICBpZiAoZmllbGQucmVwZWF0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W2ZpZWxkLm9uZW9mLmxvY2FsTmFtZV0uY2FzZSA9PT0gbG9jYWxOYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgIH1cbiAgICBzd2l0Y2ggKGZpZWxkLmtpbmQpIHtcbiAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgY2FzZSBcInNjYWxhclwiOlxuICAgICAgICAgICAgaWYgKGZpZWxkLm9wdCB8fCBmaWVsZC5yZXEpIHtcbiAgICAgICAgICAgICAgICAvLyBleHBsaWNpdCBwcmVzZW5jZVxuICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXRbbG9jYWxOYW1lXSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaW1wbGljaXQgcHJlc2VuY2VcbiAgICAgICAgICAgIGlmIChmaWVsZC5raW5kID09IFwiZW51bVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdICE9PSBmaWVsZC5ULnZhbHVlc1swXS5ubztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhaXNTY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgdGFyZ2V0W2xvY2FsTmFtZV0pO1xuICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdICE9PSB1bmRlZmluZWQ7XG4gICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0YXJnZXRbbG9jYWxOYW1lXSkubGVuZ3RoID4gMDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgfVxufVxuLyoqXG4gKiBSZXNldHMgdGhlIGZpZWxkLCBzbyB0aGF0IGlzRmllbGRTZXQoKSB3aWxsIHJldHVybiBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyRmllbGQoZmllbGQsIHRhcmdldCkge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICBjb25zdCBpbXBsaWNpdFByZXNlbmNlID0gIWZpZWxkLm9wdCAmJiAhZmllbGQucmVxO1xuICAgIGlmIChmaWVsZC5yZXBlYXRlZCkge1xuICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IFtdO1xuICAgIH1cbiAgICBlbHNlIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICB0YXJnZXRbZmllbGQub25lb2YubG9jYWxOYW1lXSA9IHsgY2FzZTogdW5kZWZpbmVkIH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzd2l0Y2ggKGZpZWxkLmtpbmQpIHtcbiAgICAgICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IGltcGxpY2l0UHJlc2VuY2UgPyBmaWVsZC5ULnZhbHVlc1swXS5ubyA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IGltcGxpY2l0UHJlc2VuY2VcbiAgICAgICAgICAgICAgICAgICAgPyBzY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgZmllbGQuTClcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgICAgIHRhcmdldFtsb2NhbE5hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/reify-wkt.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/reify-wkt.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reifyWkt: function() { return /* binding */ reifyWkt; }\n/* harmony export */ });\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @deprecated please use reifyWkt from @bufbuild/protoplugin/ecmascript instead\n *\n * Reifies a given DescMessage into a more concrete object representing its\n * respective well-known type.  The returned object will contain properties\n * representing the WKT's defined fields.\n *\n * Useful during code generation when immediate access to a particular field\n * is needed without having to search the object's typename and DescField list.\n *\n * Returns undefined if the WKT cannot be completely constructed via the\n * DescMessage.\n */\nfunction reifyWkt(message) {\n    switch (message.typeName) {\n        case \"google.protobuf.Any\": {\n            const typeUrl = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING);\n            const value = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES);\n            if (typeUrl && value) {\n                return {\n                    typeName: message.typeName,\n                    typeUrl,\n                    value,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Timestamp\": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName,\n                    seconds,\n                    nanos,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Duration\": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName,\n                    seconds,\n                    nanos,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Struct\": {\n            const fields = message.fields.find((f) => f.number == 1 && !f.repeated);\n            if ((fields === null || fields === void 0 ? void 0 : fields.fieldKind) !== \"map\" ||\n                fields.mapValue.kind !== \"message\" ||\n                fields.mapValue.message.typeName !== \"google.protobuf.Value\") {\n                break;\n            }\n            return { typeName: message.typeName, fields };\n        }\n        case \"google.protobuf.Value\": {\n            const kind = message.oneofs.find((o) => o.name === \"kind\");\n            const nullValue = message.fields.find((f) => f.number == 1 && f.oneof === kind);\n            if ((nullValue === null || nullValue === void 0 ? void 0 : nullValue.fieldKind) !== \"enum\" ||\n                nullValue.enum.typeName !== \"google.protobuf.NullValue\") {\n                return undefined;\n            }\n            const numberValue = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE &&\n                f.oneof === kind);\n            const stringValue = message.fields.find((f) => f.number == 3 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING &&\n                f.oneof === kind);\n            const boolValue = message.fields.find((f) => f.number == 4 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL &&\n                f.oneof === kind);\n            const structValue = message.fields.find((f) => f.number == 5 && f.oneof === kind);\n            if ((structValue === null || structValue === void 0 ? void 0 : structValue.fieldKind) !== \"message\" ||\n                structValue.message.typeName !== \"google.protobuf.Struct\") {\n                return undefined;\n            }\n            const listValue = message.fields.find((f) => f.number == 6 && f.oneof === kind);\n            if ((listValue === null || listValue === void 0 ? void 0 : listValue.fieldKind) !== \"message\" ||\n                listValue.message.typeName !== \"google.protobuf.ListValue\") {\n                return undefined;\n            }\n            if (kind && numberValue && stringValue && boolValue) {\n                return {\n                    typeName: message.typeName,\n                    kind,\n                    nullValue,\n                    numberValue,\n                    stringValue,\n                    boolValue,\n                    structValue,\n                    listValue,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.ListValue\": {\n            const values = message.fields.find((f) => f.number == 1 && f.repeated);\n            if ((values === null || values === void 0 ? void 0 : values.fieldKind) != \"message\" ||\n                values.message.typeName !== \"google.protobuf.Value\") {\n                break;\n            }\n            return { typeName: message.typeName, values };\n        }\n        case \"google.protobuf.FieldMask\": {\n            const paths = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING &&\n                f.repeated);\n            if (paths) {\n                return { typeName: message.typeName, paths };\n            }\n            break;\n        }\n        case \"google.protobuf.DoubleValue\":\n        case \"google.protobuf.FloatValue\":\n        case \"google.protobuf.Int64Value\":\n        case \"google.protobuf.UInt64Value\":\n        case \"google.protobuf.Int32Value\":\n        case \"google.protobuf.UInt32Value\":\n        case \"google.protobuf.BoolValue\":\n        case \"google.protobuf.StringValue\":\n        case \"google.protobuf.BytesValue\": {\n            const value = message.fields.find((f) => f.number == 1 && f.name == \"value\");\n            if (!value) {\n                break;\n            }\n            if (value.fieldKind !== \"scalar\") {\n                break;\n            }\n            return { typeName: message.typeName, value };\n        }\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/reify-wkt.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isScalarZeroValue: function() { return /* binding */ isScalarZeroValue; },\n/* harmony export */   scalarEquals: function() { return /* binding */ scalarEquals; },\n/* harmony export */   scalarZeroValue: function() { return /* binding */ scalarZeroValue; }\n/* harmony export */ });\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longType) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return false;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return (longType == 0 ? _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.zero : \"0\");\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n            return 0.0;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return new Uint8Array(0);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return value === false;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return value === \"\";\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvc2NhbGFycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytDO0FBQ0s7QUFDcEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtEQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixjQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0EsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0Esb0NBQW9DLHVEQUFVO0FBQzlDLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QjtBQUNBLGFBQWEsa0RBQVU7QUFDdkI7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSxrREFBVTtBQUN2QjtBQUNBLGFBQWEsa0RBQVU7QUFDdkI7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvc2NhbGFycy5qcz84MGI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBwcm90b0ludDY0IH0gZnJvbSBcIi4uL3Byb3RvLWludDY0LmpzXCI7XG5pbXBvcnQgeyBMb25nVHlwZSwgU2NhbGFyVHlwZSB9IGZyb20gXCIuLi9zY2FsYXIuanNcIjtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJvdGggc2NhbGFyIHZhbHVlcyBhcmUgZXF1YWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzY2FsYXJFcXVhbHModHlwZSwgYSwgYikge1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIC8vIFRoaXMgY29ycmVjdGx5IG1hdGNoZXMgZXF1YWwgdmFsdWVzIGV4Y2VwdCBCWVRFUyBhbmQgKHBvc3NpYmx5KSA2NC1iaXQgaW50ZWdlcnMuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBTcGVjaWFsIGNhc2UgQllURVMgLSB3ZSBuZWVkIHRvIGNvbXBhcmUgZWFjaCBieXRlIGluZGl2aWR1YWxseVxuICAgIGlmICh0eXBlID09IFNjYWxhclR5cGUuQllURVMpIHtcbiAgICAgICAgaWYgKCEoYSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHx8ICEoYiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIFNwZWNpYWwgY2FzZSA2NC1iaXQgaW50ZWdlcnMgLSB3ZSBzdXBwb3J0IG51bWJlciwgc3RyaW5nIGFuZCBiaWdpbnQgcmVwcmVzZW50YXRpb24uXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9zd2l0Y2gtZXhoYXVzdGl2ZW5lc3MtY2hlY2tcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlVJTlQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5JTlQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlNGSVhFRDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0lOVDY0OlxuICAgICAgICAgICAgLy8gTG9vc2UgY29tcGFyaXNvbiB3aWxsIG1hdGNoIGJldHdlZW4gMG4sIDAgYW5kIFwiMFwiLlxuICAgICAgICAgICAgcmV0dXJuIGEgPT0gYjtcbiAgICB9XG4gICAgLy8gQW55dGhpbmcgdGhhdCBoYXNuJ3QgYmVlbiBjYXVnaHQgYnkgc3RyaWN0IGNvbXBhcmlzb24gb3Igc3BlY2lhbCBjYXNlZFxuICAgIC8vIEJZVEVTIGFuZCA2NC1iaXQgaW50ZWdlcnMgaXMgbm90IGVxdWFsLlxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgemVybyB2YWx1ZSBmb3IgdGhlIGdpdmVuIHNjYWxhciB0eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2NhbGFyWmVyb1ZhbHVlKHR5cGUsIGxvbmdUeXBlKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5CT09MOlxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuVUlOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuRklYRUQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLklOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0ZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5TSU5UNjQ6XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1lbnVtLWNvbXBhcmlzb24gLS0gYWNjZXB0YWJsZSBzaW5jZSBpdCdzIGNvdmVyZWQgYnkgdGVzdHNcbiAgICAgICAgICAgIHJldHVybiAobG9uZ1R5cGUgPT0gMCA/IHByb3RvSW50NjQuemVybyA6IFwiMFwiKTtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkRPVUJMRTpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkZMT0FUOlxuICAgICAgICAgICAgcmV0dXJuIDAuMDtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkJZVEVTOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAvLyBIYW5kbGVzIElOVDMyLCBVSU5UMzIsIFNJTlQzMiwgRklYRUQzMiwgU0ZJWEVEMzIuXG4gICAgICAgICAgICAvLyBXZSBkbyBub3QgdXNlIGluZGl2aWR1YWwgY2FzZXMgdG8gc2F2ZSBhIGZldyBieXRlcyBjb2RlIHNpemUuXG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBmb3IgYSB6ZXJvLXZhbHVlLiBGb3IgZXhhbXBsZSwgYW4gaW50ZWdlciBoYXMgdGhlIHplcm8tdmFsdWUgYDBgLFxuICogYSBib29sZWFuIGlzIGBmYWxzZWAsIGEgc3RyaW5nIGlzIGBcIlwiYCwgYW5kIGJ5dGVzIGlzIGFuIGVtcHR5IFVpbnQ4QXJyYXkuXG4gKlxuICogSW4gcHJvdG8zLCB6ZXJvLXZhbHVlcyBhcmUgbm90IHdyaXR0ZW4gdG8gdGhlIHdpcmUsIHVubGVzcyB0aGUgZmllbGQgaXNcbiAqIG9wdGlvbmFsIG9yIHJlcGVhdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTY2FsYXJaZXJvVmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkJPT0w6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPT09IGZhbHNlO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBcIlwiO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuQllURVM6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmICF2YWx1ZS5ieXRlTGVuZ3RoO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09IDA7IC8vIExvb3NlIGNvbXBhcmlzb24gbWF0Y2hlcyAwbiwgMCBhbmQgXCIwXCJcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/text-format.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/text-format.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTextFormatEnumValue: function() { return /* binding */ parseTextFormatEnumValue; },\n/* harmony export */   parseTextFormatScalarValue: function() { return /* binding */ parseTextFormatScalarValue; }\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\nfunction parseTextFormatEnumValue(descEnum, value) {\n    const enumValue = descEnum.values.find((v) => v.name === value);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(enumValue, `cannot parse ${descEnum.name} default value: ${value}`);\n    return enumValue.number;\n}\nfunction parseTextFormatScalarValue(type, value) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING:\n            return value;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES: {\n            const u = unescapeBytesDefaultValue(value);\n            if (u === false) {\n                throw new Error(`cannot parse ${_scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType[type]} default value: ${value}`);\n            }\n            return u;\n        }\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT64:\n            return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.parse(value);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED64:\n            return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uParse(value);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT:\n            switch (value) {\n                case \"inf\":\n                    return Number.POSITIVE_INFINITY;\n                case \"-inf\":\n                    return Number.NEGATIVE_INFINITY;\n                case \"nan\":\n                    return Number.NaN;\n                default:\n                    return parseFloat(value);\n            }\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n            return value === \"true\";\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED32:\n            return parseInt(value, 10);\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/text-format.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeUtilCommon: function() { return /* binding */ makeUtilCommon; }\n/* harmony export */ });\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nfunction makeUtilCommon() {\n    return {\n        setEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_0__.setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] == null) {\n                    // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !(0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => (0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, mt) ? val : new mt(val));\n                        }\n                        else {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = (0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, mt) ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        // TODO use isFieldSet() here to support future field presence\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        let a = va;\n                        let b = vb;\n                        if (m.T.fieldWrapper) {\n                            if (a !== undefined && !(0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(a)) {\n                                a = m.T.fieldWrapper.wrapField(a);\n                            }\n                            if (b !== undefined && !(0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(b)) {\n                                b = m.T.fieldWrapper.wrapField(b);\n                            }\n                        }\n                        return m.T.equals(a, b);\n                    case \"enum\":\n                        return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        // TODO use isFieldSet() here to support future field presence\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(value)) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoBase64: function() { return /* binding */ protoBase64; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nconst protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWJhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZix3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWJhc2U2NC5qcz8yZmFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnQsIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb24sIHByZWZlci1jb25zdCAqL1xuLy8gbG9va3VwIHRhYmxlIGZyb20gYmFzZTY0IGNoYXJhY3RlciB0byBieXRlXG5sZXQgZW5jVGFibGUgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIi5zcGxpdChcIlwiKTtcbi8vIGxvb2t1cCB0YWJsZSBmcm9tIGJhc2U2NCBjaGFyYWN0ZXIgKmNvZGUqIHRvIGJ5dGUgYmVjYXVzZSBsb29rdXAgYnkgbnVtYmVyIGlzIGZhc3RcbmxldCBkZWNUYWJsZSA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNUYWJsZS5sZW5ndGg7IGkrKylcbiAgICBkZWNUYWJsZVtlbmNUYWJsZVtpXS5jaGFyQ29kZUF0KDApXSA9IGk7XG4vLyBzdXBwb3J0IGJhc2U2NHVybCB2YXJpYW50c1xuZGVjVGFibGVbXCItXCIuY2hhckNvZGVBdCgwKV0gPSBlbmNUYWJsZS5pbmRleE9mKFwiK1wiKTtcbmRlY1RhYmxlW1wiX1wiLmNoYXJDb2RlQXQoMCldID0gZW5jVGFibGUuaW5kZXhPZihcIi9cIik7XG5leHBvcnQgY29uc3QgcHJvdG9CYXNlNjQgPSB7XG4gICAgLyoqXG4gICAgICogRGVjb2RlcyBhIGJhc2U2NCBzdHJpbmcgdG8gYSBieXRlIGFycmF5LlxuICAgICAqXG4gICAgICogLSBpZ25vcmVzIHdoaXRlLXNwYWNlLCBpbmNsdWRpbmcgbGluZSBicmVha3MgYW5kIHRhYnNcbiAgICAgKiAtIGFsbG93cyBpbm5lciBwYWRkaW5nIChjYW4gZGVjb2RlIGNvbmNhdGVuYXRlZCBiYXNlNjQgc3RyaW5ncylcbiAgICAgKiAtIGRvZXMgbm90IHJlcXVpcmUgcGFkZGluZ1xuICAgICAqIC0gdW5kZXJzdGFuZHMgYmFzZTY0dXJsIGVuY29kaW5nOlxuICAgICAqICAgXCItXCIgaW5zdGVhZCBvZiBcIitcIixcbiAgICAgKiAgIFwiX1wiIGluc3RlYWQgb2YgXCIvXCIsXG4gICAgICogICBubyBwYWRkaW5nXG4gICAgICovXG4gICAgZGVjKGJhc2U2NFN0cikge1xuICAgICAgICAvLyBlc3RpbWF0ZSBieXRlIHNpemUsIG5vdCBhY2NvdW50aW5nIGZvciBpbm5lciBwYWRkaW5nIGFuZCB3aGl0ZXNwYWNlXG4gICAgICAgIGxldCBlcyA9IChiYXNlNjRTdHIubGVuZ3RoICogMykgLyA0O1xuICAgICAgICBpZiAoYmFzZTY0U3RyW2Jhc2U2NFN0ci5sZW5ndGggLSAyXSA9PSBcIj1cIilcbiAgICAgICAgICAgIGVzIC09IDI7XG4gICAgICAgIGVsc2UgaWYgKGJhc2U2NFN0cltiYXNlNjRTdHIubGVuZ3RoIC0gMV0gPT0gXCI9XCIpXG4gICAgICAgICAgICBlcyAtPSAxO1xuICAgICAgICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheShlcyksIGJ5dGVQb3MgPSAwLCAvLyBwb3NpdGlvbiBpbiBieXRlIGFycmF5XG4gICAgICAgIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgICAgIGIsIC8vIGN1cnJlbnQgYnl0ZVxuICAgICAgICBwID0gMDsgLy8gcHJldmlvdXMgYnl0ZVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhc2U2NFN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYiA9IGRlY1RhYmxlW2Jhc2U2NFN0ci5jaGFyQ29kZUF0KGkpXTtcbiAgICAgICAgICAgIGlmIChiID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGJhc2U2NFN0cltpXSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIFRTNzAyOTogRmFsbHRocm91Z2ggY2FzZSBpbiBzd2l0Y2hcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIj1cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMDsgLy8gcmVzZXQgc3RhdGUgd2hlbiBwYWRkaW5nIGZvdW5kXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgVFM3MDI5OiBGYWxsdGhyb3VnaCBjYXNlIGluIHN3aXRjaFxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiXFxuXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJcXHJcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIlxcdFwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiIFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7IC8vIHNraXAgd2hpdGUtc3BhY2UsIGFuZCBwYWRkaW5nXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcImludmFsaWQgYmFzZTY0IHN0cmluZy5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3dpdGNoIChncm91cFBvcykge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgcCA9IGI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBieXRlc1tieXRlUG9zKytdID0gKHAgPDwgMikgfCAoKGIgJiA0OCkgPj4gNCk7XG4gICAgICAgICAgICAgICAgICAgIHAgPSBiO1xuICAgICAgICAgICAgICAgICAgICBncm91cFBvcyA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgYnl0ZXNbYnl0ZVBvcysrXSA9ICgocCAmIDE1KSA8PCA0KSB8ICgoYiAmIDYwKSA+PiAyKTtcbiAgICAgICAgICAgICAgICAgICAgcCA9IGI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICBieXRlc1tieXRlUG9zKytdID0gKChwICYgMykgPDwgNikgfCBiO1xuICAgICAgICAgICAgICAgICAgICBncm91cFBvcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChncm91cFBvcyA9PSAxKVxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIGJhc2U2NCBzdHJpbmcuXCIpO1xuICAgICAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkoMCwgYnl0ZVBvcyk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgYSBieXRlIGFycmF5IHRvIGEgYmFzZTY0IHN0cmluZy5cbiAgICAgKi9cbiAgICBlbmMoYnl0ZXMpIHtcbiAgICAgICAgbGV0IGJhc2U2NCA9IFwiXCIsIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgICAgIGIsIC8vIGN1cnJlbnQgYnl0ZVxuICAgICAgICBwID0gMDsgLy8gY2Fycnkgb3ZlciBmcm9tIHByZXZpb3VzIGJ5dGVcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYiA9IGJ5dGVzW2ldO1xuICAgICAgICAgICAgc3dpdGNoIChncm91cFBvcykge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW2IgPj4gMl07XG4gICAgICAgICAgICAgICAgICAgIHAgPSAoYiAmIDMpIDw8IDQ7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbcCB8IChiID4+IDQpXTtcbiAgICAgICAgICAgICAgICAgICAgcCA9IChiICYgMTUpIDw8IDI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbcCB8IChiID4+IDYpXTtcbiAgICAgICAgICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW2IgJiA2M107XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gYWRkIG91dHB1dCBwYWRkaW5nXG4gICAgICAgIGlmIChncm91cFBvcykge1xuICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW3BdO1xuICAgICAgICAgICAgYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICAgICAgaWYgKGdyb3VwUG9zID09IDEpXG4gICAgICAgICAgICAgICAgYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYXNlNjQ7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-delimited.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-delimited.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoDelimited: function() { return /* binding */ protoDelimited; }\n/* harmony export */ });\n/* harmony import */ var _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary-encoding.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n/**\n * protoDelimited provides functions to serialize and parse size-delimited\n * messages.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nconst protoDelimited = {\n    /**\n     * Serialize a message, prefixing it with its size.\n     */\n    enc(message, options) {\n        const opt = message.getType().runtime.bin.makeWriteOptions(options);\n        return opt.writerFactory().bytes(message.toBinary(opt)).finish();\n    },\n    /**\n     * Parse a size-delimited message, ignoring extra bytes.\n     */\n    dec(type, bytes, options) {\n        const opt = type.runtime.bin.makeReadOptions(options);\n        return type.fromBinary(opt.readerFactory(bytes).bytes(), opt);\n    },\n    /**\n     * Parse a stream of size-delimited messages.\n     */\n    decStream(type, iterable) {\n        return __asyncGenerator(this, arguments, function* decStream_1() {\n            var _a, e_1, _b, _c;\n            // append chunk to buffer, returning updated buffer\n            function append(buffer, chunk) {\n                const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n                n.set(buffer);\n                n.set(chunk, buffer.length);\n                return n;\n            }\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for (;;) {\n                        const size = protoDelimited.peekSize(buffer);\n                        if (size.eof) {\n                            // size is incomplete, buffer more data\n                            break;\n                        }\n                        if (size.offset + size.size > buffer.byteLength) {\n                            // message is incomplete, buffer more data\n                            break;\n                        }\n                        yield yield __await(protoDelimited.dec(type, buffer));\n                        buffer = buffer.subarray(size.offset + size.size);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (buffer.byteLength > 0) {\n                throw new Error(\"incomplete data\");\n            }\n        });\n    },\n    /**\n     * Decodes the size from the given size-delimited message, which may be\n     * incomplete.\n     *\n     * Returns an object with the following properties:\n     * - size: The size of the delimited message in bytes\n     * - offset: The offset in the given byte array where the message starts\n     * - eof: true\n     *\n     * If the size-delimited data does not include all bytes of the varint size,\n     * the following object is returned:\n     * - size: null\n     * - offset: null\n     * - eof: false\n     *\n     * This function can be used to implement parsing of size-delimited messages\n     * from a stream.\n     */\n    peekSize(data) {\n        const sizeEof = { eof: true, size: null, offset: null };\n        for (let i = 0; i < 10; i++) {\n            if (i > data.byteLength) {\n                return sizeEof;\n            }\n            if ((data[i] & 0x80) == 0) {\n                const reader = new _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(data);\n                let size;\n                try {\n                    size = reader.uint32();\n                }\n                catch (e) {\n                    if (e instanceof RangeError) {\n                        return sizeEof;\n                    }\n                    throw e;\n                }\n                return {\n                    eof: false,\n                    size,\n                    offset: reader.pos,\n                };\n            }\n        }\n        throw new Error(\"invalid varint\");\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-delimited.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-double.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-double.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoDouble: function() { return /* binding */ protoDouble; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Export global Number constants. This is done so that we can safely use\n// these global constants when generating code and be assured we're using\n// the correct values. We cannot rely on globalThis since we support ES2017\n// and globalThis was introduced in ES2020. We also don't want to explicitly\n// generate code using, for example, Number.NaN, since this could clash with\n// a message name of Number. Instead we can export them here since this will\n// be in a different scope as the generated code and we are guaranteed to use\n// the intended global values.\nconst protoDouble = {\n    NaN: Number.NaN,\n    POSITIVE_INFINITY: Number.POSITIVE_INFINITY,\n    NEGATIVE_INFINITY: Number.NEGATIVE_INFINITY,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWRvdWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWRvdWJsZS5qcz83NTliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vLyBFeHBvcnQgZ2xvYmFsIE51bWJlciBjb25zdGFudHMuIFRoaXMgaXMgZG9uZSBzbyB0aGF0IHdlIGNhbiBzYWZlbHkgdXNlXG4vLyB0aGVzZSBnbG9iYWwgY29uc3RhbnRzIHdoZW4gZ2VuZXJhdGluZyBjb2RlIGFuZCBiZSBhc3N1cmVkIHdlJ3JlIHVzaW5nXG4vLyB0aGUgY29ycmVjdCB2YWx1ZXMuIFdlIGNhbm5vdCByZWx5IG9uIGdsb2JhbFRoaXMgc2luY2Ugd2Ugc3VwcG9ydCBFUzIwMTdcbi8vIGFuZCBnbG9iYWxUaGlzIHdhcyBpbnRyb2R1Y2VkIGluIEVTMjAyMC4gV2UgYWxzbyBkb24ndCB3YW50IHRvIGV4cGxpY2l0bHlcbi8vIGdlbmVyYXRlIGNvZGUgdXNpbmcsIGZvciBleGFtcGxlLCBOdW1iZXIuTmFOLCBzaW5jZSB0aGlzIGNvdWxkIGNsYXNoIHdpdGhcbi8vIGEgbWVzc2FnZSBuYW1lIG9mIE51bWJlci4gSW5zdGVhZCB3ZSBjYW4gZXhwb3J0IHRoZW0gaGVyZSBzaW5jZSB0aGlzIHdpbGxcbi8vIGJlIGluIGEgZGlmZmVyZW50IHNjb3BlIGFzIHRoZSBnZW5lcmF0ZWQgY29kZSBhbmQgd2UgYXJlIGd1YXJhbnRlZWQgdG8gdXNlXG4vLyB0aGUgaW50ZW5kZWQgZ2xvYmFsIHZhbHVlcy5cbmV4cG9ydCBjb25zdCBwcm90b0RvdWJsZSA9IHtcbiAgICBOYU46IE51bWJlci5OYU4sXG4gICAgUE9TSVRJVkVfSU5GSU5JVFk6IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSxcbiAgICBORUdBVElWRV9JTkZJTklUWTogTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-double.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoInt64: function() { return /* binding */ protoInt64; }\n/* harmony export */ });\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _google_varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/varint.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.uInt64ToString)(lo, hi);\n        },\n    };\n}\nconst protoInt64 = makeInt64Support();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWludDY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUN3QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkIsbUJBQW1CLE9BQU87QUFDMUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTTtBQUM1RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxNQUFNO0FBQzdEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EseUNBQXlDLDBEQUFNLDZDQUE2QyxNQUFNO0FBQ2xHLDBDQUEwQywwREFBTSw0Q0FBNEMsTUFBTTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLGdFQUFhO0FBQ2hDLFNBQVM7QUFDVDtBQUNBLG1CQUFtQixpRUFBYztBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJvdG8taW50NjQuanM/NWFjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4vcHJpdmF0ZS9hc3NlcnQuanNcIjtcbmltcG9ydCB7IGludDY0RnJvbVN0cmluZywgaW50NjRUb1N0cmluZywgdUludDY0VG9TdHJpbmcsIH0gZnJvbSBcIi4vZ29vZ2xlL3ZhcmludC5qc1wiO1xuZnVuY3Rpb24gbWFrZUludDY0U3VwcG9ydCgpIHtcbiAgICBjb25zdCBkdiA9IG5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoOCkpO1xuICAgIC8vIG5vdGUgdGhhdCBTYWZhcmkgMTQgaW1wbGVtZW50cyBCaWdJbnQsIGJ1dCBub3QgdGhlIERhdGFWaWV3IG1ldGhvZHNcbiAgICBjb25zdCBvayA9IHR5cGVvZiBCaWdJbnQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuZ2V0QmlnSW50NjQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuZ2V0QmlnVWludDY0ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgdHlwZW9mIGR2LnNldEJpZ0ludDY0ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgdHlwZW9mIGR2LnNldEJpZ1VpbnQ2NCA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICh0eXBlb2YgcHJvY2VzcyAhPSBcIm9iamVjdFwiIHx8XG4gICAgICAgICAgICB0eXBlb2YgcHJvY2Vzcy5lbnYgIT0gXCJvYmplY3RcIiB8fFxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuQlVGX0JJR0lOVF9ESVNBQkxFICE9PSBcIjFcIik7XG4gICAgaWYgKG9rKSB7XG4gICAgICAgIGNvbnN0IE1JTiA9IEJpZ0ludChcIi05MjIzMzcyMDM2ODU0Nzc1ODA4XCIpLCBNQVggPSBCaWdJbnQoXCI5MjIzMzcyMDM2ODU0Nzc1ODA3XCIpLCBVTUlOID0gQmlnSW50KFwiMFwiKSwgVU1BWCA9IEJpZ0ludChcIjE4NDQ2NzQ0MDczNzA5NTUxNjE1XCIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgemVybzogQmlnSW50KDApLFxuICAgICAgICAgICAgc3VwcG9ydGVkOiB0cnVlLFxuICAgICAgICAgICAgcGFyc2UodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiaSA9IHR5cGVvZiB2YWx1ZSA9PSBcImJpZ2ludFwiID8gdmFsdWUgOiBCaWdJbnQodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChiaSA+IE1BWCB8fCBiaSA8IE1JTikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBiaTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1UGFyc2UodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiaSA9IHR5cGVvZiB2YWx1ZSA9PSBcImJpZ2ludFwiID8gdmFsdWUgOiBCaWdJbnQodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChiaSA+IFVNQVggfHwgYmkgPCBVTUlOKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgdWludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBiaTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbmModmFsdWUpIHtcbiAgICAgICAgICAgICAgICBkdi5zZXRCaWdJbnQ2NCgwLCB0aGlzLnBhcnNlKHZhbHVlKSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbG86IGR2LmdldEludDMyKDAsIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICBoaTogZHYuZ2V0SW50MzIoNCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1RW5jKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgZHYuc2V0QmlnSW50NjQoMCwgdGhpcy51UGFyc2UodmFsdWUpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBsbzogZHYuZ2V0SW50MzIoMCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgIGhpOiBkdi5nZXRJbnQzMig0LCB0cnVlKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlYyhsbywgaGkpIHtcbiAgICAgICAgICAgICAgICBkdi5zZXRJbnQzMigwLCBsbywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgZHYuc2V0SW50MzIoNCwgaGksIHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkdi5nZXRCaWdJbnQ2NCgwLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1RGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgICAgIGR2LnNldEludDMyKDAsIGxvLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBkdi5zZXRJbnQzMig0LCBoaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGR2LmdldEJpZ1VpbnQ2NCgwLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IGFzc2VydEludDY0U3RyaW5nID0gKHZhbHVlKSA9PiBhc3NlcnQoL14tP1swLTldKyQvLnRlc3QodmFsdWUpLCBgaW50NjQgaW52YWxpZDogJHt2YWx1ZX1gKTtcbiAgICBjb25zdCBhc3NlcnRVSW50NjRTdHJpbmcgPSAodmFsdWUpID0+IGFzc2VydCgvXlswLTldKyQvLnRlc3QodmFsdWUpLCBgdWludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgemVybzogXCIwXCIsXG4gICAgICAgIHN1cHBvcnRlZDogZmFsc2UsXG4gICAgICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHVQYXJzZSh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW5jKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRGcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgdUVuYyh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiBpbnQ2NEZyb21TdHJpbmcodmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBkZWMobG8sIGhpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRUb1N0cmluZyhsbywgaGkpO1xuICAgICAgICB9LFxuICAgICAgICB1RGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgcmV0dXJuIHVJbnQ2NFRvU3RyaW5nKGxvLCBoaSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydCBjb25zdCBwcm90b0ludDY0ID0gbWFrZUludDY0U3VwcG9ydCgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto2.js":
/*!************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto2.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   proto2: function() { return /* binding */ proto2; }\n/* harmony export */ });\n/* harmony import */ var _private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/proto-runtime.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\");\n/* harmony import */ var _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/field-list.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\");\n/* harmony import */ var _private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/field-normalize.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Provides functionality for messages defined with the proto2 syntax.\n */\nconst proto2 = (0,_private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__.makeProtoRuntime)(\"proto2\", (fields) => {\n    return new _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__.InternalFieldList(fields, (source) => (0,_private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeFieldInfos)(source, false));\n}, \n// TODO merge with proto3 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n            case \"enum\":\n            case \"message\":\n                // In contrast to proto3, enum and scalar fields have no intrinsic default value,\n                // only an optional explicit default value.\n                // Unlike proto3 intrinsic default values, proto2 explicit default values are not\n                // set on construction, because they are not omitted on the wire. If we did set\n                // default values on construction, a deserialize-serialize round-trip would add\n                // fields to a message.\n                break;\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDOEQ7QUFDRjtBQUNPO0FBQ25FO0FBQ0E7QUFDQTtBQUNPLGVBQWUsMkVBQWdCO0FBQ3RDLGVBQWUscUVBQWlCLHFCQUFxQixnRkFBbUI7QUFDeEUsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvMi5qcz84ZWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBtYWtlUHJvdG9SdW50aW1lIH0gZnJvbSBcIi4vcHJpdmF0ZS9wcm90by1ydW50aW1lLmpzXCI7XG5pbXBvcnQgeyBJbnRlcm5hbEZpZWxkTGlzdCB9IGZyb20gXCIuL3ByaXZhdGUvZmllbGQtbGlzdC5qc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplRmllbGRJbmZvcyB9IGZyb20gXCIuL3ByaXZhdGUvZmllbGQtbm9ybWFsaXplLmpzXCI7XG4vKipcbiAqIFByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIG1lc3NhZ2VzIGRlZmluZWQgd2l0aCB0aGUgcHJvdG8yIHN5bnRheC5cbiAqL1xuZXhwb3J0IGNvbnN0IHByb3RvMiA9IG1ha2VQcm90b1J1bnRpbWUoXCJwcm90bzJcIiwgKGZpZWxkcykgPT4ge1xuICAgIHJldHVybiBuZXcgSW50ZXJuYWxGaWVsZExpc3QoZmllbGRzLCAoc291cmNlKSA9PiBub3JtYWxpemVGaWVsZEluZm9zKHNvdXJjZSwgZmFsc2UpKTtcbn0sIFxuLy8gVE9ETyBtZXJnZSB3aXRoIHByb3RvMyBhbmQgaW5pdEV4dGVuc2lvbkZpZWxkLCBhbHNvIHNlZSBpbml0UGFydGlhbCwgZXF1YWxzLCBjbG9uZVxuKHRhcmdldCkgPT4ge1xuICAgIGZvciAoY29uc3QgbWVtYmVyIG9mIHRhcmdldC5nZXRUeXBlKCkuZmllbGRzLmJ5TWVtYmVyKCkpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG1lbWJlci5sb2NhbE5hbWUsIHQgPSB0YXJnZXQ7XG4gICAgICAgIGlmIChtZW1iZXIucmVwZWF0ZWQpIHtcbiAgICAgICAgICAgIHRbbmFtZV0gPSBbXTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAobWVtYmVyLmtpbmQpIHtcbiAgICAgICAgICAgIGNhc2UgXCJvbmVvZlwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSB7IGNhc2U6IHVuZGVmaW5lZCB9O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSB7fTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgIGNhc2UgXCJlbnVtXCI6XG4gICAgICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgICAgIC8vIEluIGNvbnRyYXN0IHRvIHByb3RvMywgZW51bSBhbmQgc2NhbGFyIGZpZWxkcyBoYXZlIG5vIGludHJpbnNpYyBkZWZhdWx0IHZhbHVlLFxuICAgICAgICAgICAgICAgIC8vIG9ubHkgYW4gb3B0aW9uYWwgZXhwbGljaXQgZGVmYXVsdCB2YWx1ZS5cbiAgICAgICAgICAgICAgICAvLyBVbmxpa2UgcHJvdG8zIGludHJpbnNpYyBkZWZhdWx0IHZhbHVlcywgcHJvdG8yIGV4cGxpY2l0IGRlZmF1bHQgdmFsdWVzIGFyZSBub3RcbiAgICAgICAgICAgICAgICAvLyBzZXQgb24gY29uc3RydWN0aW9uLCBiZWNhdXNlIHRoZXkgYXJlIG5vdCBvbWl0dGVkIG9uIHRoZSB3aXJlLiBJZiB3ZSBkaWQgc2V0XG4gICAgICAgICAgICAgICAgLy8gZGVmYXVsdCB2YWx1ZXMgb24gY29uc3RydWN0aW9uLCBhIGRlc2VyaWFsaXplLXNlcmlhbGl6ZSByb3VuZC10cmlwIHdvdWxkIGFkZFxuICAgICAgICAgICAgICAgIC8vIGZpZWxkcyB0byBhIG1lc3NhZ2UuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto2.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto3.js":
/*!************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto3.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   proto3: function() { return /* binding */ proto3; }\n/* harmony export */ });\n/* harmony import */ var _private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/proto-runtime.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\");\n/* harmony import */ var _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/field-list.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\");\n/* harmony import */ var _private_scalars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./private/scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/field-normalize.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nconst proto3 = (0,_private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__.makeProtoRuntime)(\"proto3\", (fields) => {\n    return new _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__.InternalFieldList(fields, (source) => (0,_private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeFieldInfos)(source, true));\n}, \n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        if (member.opt) {\n            continue;\n        }\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"enum\":\n                t[name] = 0;\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n                t[name] = (0,_private_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarZeroValue)(member.T, member.L);\n                break;\n            case \"message\":\n                // message fields are always optional in proto3\n                break;\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzhEO0FBQ0Y7QUFDTDtBQUNZO0FBQ25FO0FBQ0E7QUFDQTtBQUNPLGVBQWUsMkVBQWdCO0FBQ3RDLGVBQWUscUVBQWlCLHFCQUFxQixnRkFBbUI7QUFDeEUsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0VBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvMy5qcz8zYTJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBtYWtlUHJvdG9SdW50aW1lIH0gZnJvbSBcIi4vcHJpdmF0ZS9wcm90by1ydW50aW1lLmpzXCI7XG5pbXBvcnQgeyBJbnRlcm5hbEZpZWxkTGlzdCB9IGZyb20gXCIuL3ByaXZhdGUvZmllbGQtbGlzdC5qc1wiO1xuaW1wb3J0IHsgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vcHJpdmF0ZS9zY2FsYXJzLmpzXCI7XG5pbXBvcnQgeyBub3JtYWxpemVGaWVsZEluZm9zIH0gZnJvbSBcIi4vcHJpdmF0ZS9maWVsZC1ub3JtYWxpemUuanNcIjtcbi8qKlxuICogUHJvdmlkZXMgZnVuY3Rpb25hbGl0eSBmb3IgbWVzc2FnZXMgZGVmaW5lZCB3aXRoIHRoZSBwcm90bzMgc3ludGF4LlxuICovXG5leHBvcnQgY29uc3QgcHJvdG8zID0gbWFrZVByb3RvUnVudGltZShcInByb3RvM1wiLCAoZmllbGRzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBJbnRlcm5hbEZpZWxkTGlzdChmaWVsZHMsIChzb3VyY2UpID0+IG5vcm1hbGl6ZUZpZWxkSW5mb3Moc291cmNlLCB0cnVlKSk7XG59LCBcbi8vIFRPRE8gbWVyZ2Ugd2l0aCBwcm90bzIgYW5kIGluaXRFeHRlbnNpb25GaWVsZCwgYWxzbyBzZWUgaW5pdFBhcnRpYWwsIGVxdWFscywgY2xvbmVcbih0YXJnZXQpID0+IHtcbiAgICBmb3IgKGNvbnN0IG1lbWJlciBvZiB0YXJnZXQuZ2V0VHlwZSgpLmZpZWxkcy5ieU1lbWJlcigpKSB7XG4gICAgICAgIGlmIChtZW1iZXIub3B0KSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuYW1lID0gbWVtYmVyLmxvY2FsTmFtZSwgdCA9IHRhcmdldDtcbiAgICAgICAgaWYgKG1lbWJlci5yZXBlYXRlZCkge1xuICAgICAgICAgICAgdFtuYW1lXSA9IFtdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoIChtZW1iZXIua2luZCkge1xuICAgICAgICAgICAgY2FzZSBcIm9uZW9mXCI6XG4gICAgICAgICAgICAgICAgdFtuYW1lXSA9IHsgY2FzZTogdW5kZWZpbmVkIH07XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSAwO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSB7fTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgICAgICB0W25hbWVdID0gc2NhbGFyWmVyb1ZhbHVlKG1lbWJlci5ULCBtZW1iZXIuTCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgICAgIC8vIG1lc3NhZ2UgZmllbGRzIGFyZSBhbHdheXMgb3B0aW9uYWwgaW4gcHJvdG8zXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/scalar.js":
/*!************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/scalar.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LongType: function() { return /* binding */ LongType; },\n/* harmony export */   ScalarType: function() { return /* binding */ ScalarType; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nvar LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3NjYWxhci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDRDQUE0QztBQUM1Qyw0Q0FBNEM7QUFDNUMsNENBQTRDO0FBQzVDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3NjYWxhci5qcz8yM2U3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIFNjYWxhciB2YWx1ZSB0eXBlcy4gVGhpcyBpcyBhIHN1YnNldCBvZiBmaWVsZCB0eXBlcyBkZWNsYXJlZCBieSBwcm90b2J1ZlxuICogZW51bSBnb29nbGUucHJvdG9idWYuRmllbGREZXNjcmlwdG9yUHJvdG8uVHlwZSBUaGUgdHlwZXMgR1JPVVAgYW5kIE1FU1NBR0VcbiAqIGFyZSBvbWl0dGVkLCBidXQgdGhlIG51bWVyaWNhbCB2YWx1ZXMgYXJlIGlkZW50aWNhbC5cbiAqL1xuZXhwb3J0IHZhciBTY2FsYXJUeXBlO1xuKGZ1bmN0aW9uIChTY2FsYXJUeXBlKSB7XG4gICAgLy8gMCBpcyByZXNlcnZlZCBmb3IgZXJyb3JzLlxuICAgIC8vIE9yZGVyIGlzIHdlaXJkIGZvciBoaXN0b3JpY2FsIHJlYXNvbnMuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiRE9VQkxFXCJdID0gMV0gPSBcIkRPVUJMRVwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIkZMT0FUXCJdID0gMl0gPSBcIkZMT0FUXCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDY0IGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UNjRcIl0gPSAzXSA9IFwiSU5UNjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UNjRcIl0gPSA0XSA9IFwiVUlOVDY0XCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDMyIGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UMzJcIl0gPSA1XSA9IFwiSU5UMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDY0XCJdID0gNl0gPSBcIkZJWEVENjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDMyXCJdID0gN10gPSBcIkZJWEVEMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCT09MXCJdID0gOF0gPSBcIkJPT0xcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJTVFJJTkdcIl0gPSA5XSA9IFwiU1RSSU5HXCI7XG4gICAgLy8gVGFnLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gR3JvdXAgdHlwZSBpcyBkZXByZWNhdGVkIGFuZCBub3Qgc3VwcG9ydGVkIGluIHByb3RvMy4gSG93ZXZlciwgUHJvdG8zXG4gICAgLy8gaW1wbGVtZW50YXRpb25zIHNob3VsZCBzdGlsbCBiZSBhYmxlIHRvIHBhcnNlIHRoZSBncm91cCB3aXJlIGZvcm1hdCBhbmRcbiAgICAvLyB0cmVhdCBncm91cCBmaWVsZHMgYXMgdW5rbm93biBmaWVsZHMuXG4gICAgLy8gVFlQRV9HUk9VUCA9IDEwLFxuICAgIC8vIFRZUEVfTUVTU0FHRSA9IDExLCAgLy8gTGVuZ3RoLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gTmV3IGluIHZlcnNpb24gMi5cbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCWVRFU1wiXSA9IDEyXSA9IFwiQllURVNcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UMzJcIl0gPSAxM10gPSBcIlVJTlQzMlwiO1xuICAgIC8vIFRZUEVfRU5VTSA9IDE0LFxuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDMyXCJdID0gMTVdID0gXCJTRklYRUQzMlwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDY0XCJdID0gMTZdID0gXCJTRklYRUQ2NFwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNJTlQzMlwiXSA9IDE3XSA9IFwiU0lOVDMyXCI7XG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiU0lOVDY0XCJdID0gMThdID0gXCJTSU5UNjRcIjtcbn0pKFNjYWxhclR5cGUgfHwgKFNjYWxhclR5cGUgPSB7fSkpO1xuLyoqXG4gKiBKYXZhU2NyaXB0IHJlcHJlc2VudGF0aW9uIG9mIGZpZWxkcyB3aXRoIDY0IGJpdCBpbnRlZ3JhbCB0eXBlcyAoaW50NjQsIHVpbnQ2NCxcbiAqIHNpbnQ2NCwgZml4ZWQ2NCwgc2ZpeGVkNjQpLlxuICpcbiAqIFRoaXMgaXMgYSBzdWJzZXQgb2YgZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucy5KU1R5cGUsIHdoaWNoIGRlZmluZXMgSlNfTk9STUFMLFxuICogSlNfU1RSSU5HLCBhbmQgSlNfTlVNQkVSLiBQcm90b2J1Zi1FUyB1c2VzIEJpZ0ludCBieSBkZWZhdWx0LCBidXQgd2lsbCB1c2VcbiAqIFN0cmluZyBpZiBgW2pzdHlwZSA9IEpTX1NUUklOR11gIGlzIHNwZWNpZmllZC5cbiAqXG4gKiBgYGBwcm90b2J1ZlxuICogdWludDY0IGZpZWxkX2EgPSAxOyAvLyBCaWdJbnRcbiAqIHVpbnQ2NCBmaWVsZF9iID0gMiBbanN0eXBlID0gSlNfTk9STUFMXTsgLy8gQmlnSW50XG4gKiB1aW50NjQgZmllbGRfYiA9IDIgW2pzdHlwZSA9IEpTX05VTUJFUl07IC8vIEJpZ0ludFxuICogdWludDY0IGZpZWxkX2IgPSAyIFtqc3R5cGUgPSBKU19TVFJJTkddOyAvLyBTdHJpbmdcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIExvbmdUeXBlO1xuKGZ1bmN0aW9uIChMb25nVHlwZSkge1xuICAgIC8qKlxuICAgICAqIFVzZSBKYXZhU2NyaXB0IEJpZ0ludC5cbiAgICAgKi9cbiAgICBMb25nVHlwZVtMb25nVHlwZVtcIkJJR0lOVFwiXSA9IDBdID0gXCJCSUdJTlRcIjtcbiAgICAvKipcbiAgICAgKiBVc2UgSmF2YVNjcmlwdCBTdHJpbmcuXG4gICAgICpcbiAgICAgKiBGaWVsZCBvcHRpb24gYFtqc3R5cGUgPSBKU19TVFJJTkddYC5cbiAgICAgKi9cbiAgICBMb25nVHlwZVtMb25nVHlwZVtcIlNUUklOR1wiXSA9IDFdID0gXCJTVFJJTkdcIjtcbn0pKExvbmdUeXBlIHx8IChMb25nVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/service-type.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/service-type.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MethodIdempotency: function() { return /* binding */ MethodIdempotency; },\n/* harmony export */   MethodKind: function() { return /* binding */ MethodKind; }\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nvar MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nvar MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3NlcnZpY2UtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vc2VydmljZS10eXBlLmpzPzVhNzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogTWV0aG9kS2luZCByZXByZXNlbnRzIHRoZSBmb3VyIG1ldGhvZCB0eXBlcyB0aGF0IGNhbiBiZSBkZWNsYXJlZCBpblxuICogcHJvdG9idWYgd2l0aCB0aGUgYHN0cmVhbWAga2V5d29yZDpcbiAqXG4gKiAxLiBVbmFyeTogICAgICAgICAgIHJwYyAoSW5wdXQpIHJldHVybnMgKE91dHB1dClcbiAqIDIuIFNlcnZlclN0cmVhbWluZzogcnBjIChJbnB1dCkgcmV0dXJucyAoc3RyZWFtIE91dHB1dClcbiAqIDMuIENsaWVudFN0cmVhbWluZzogcnBjIChzdHJlYW0gSW5wdXQpIHJldHVybnMgKE91dHB1dClcbiAqIDQuIEJpRGlTdHJlYW1pbmc6ICAgcnBjIChzdHJlYW0gSW5wdXQpIHJldHVybnMgKHN0cmVhbSBPdXRwdXQpXG4gKi9cbmV4cG9ydCB2YXIgTWV0aG9kS2luZDtcbihmdW5jdGlvbiAoTWV0aG9kS2luZCkge1xuICAgIE1ldGhvZEtpbmRbTWV0aG9kS2luZFtcIlVuYXJ5XCJdID0gMF0gPSBcIlVuYXJ5XCI7XG4gICAgTWV0aG9kS2luZFtNZXRob2RLaW5kW1wiU2VydmVyU3RyZWFtaW5nXCJdID0gMV0gPSBcIlNlcnZlclN0cmVhbWluZ1wiO1xuICAgIE1ldGhvZEtpbmRbTWV0aG9kS2luZFtcIkNsaWVudFN0cmVhbWluZ1wiXSA9IDJdID0gXCJDbGllbnRTdHJlYW1pbmdcIjtcbiAgICBNZXRob2RLaW5kW01ldGhvZEtpbmRbXCJCaURpU3RyZWFtaW5nXCJdID0gM10gPSBcIkJpRGlTdHJlYW1pbmdcIjtcbn0pKE1ldGhvZEtpbmQgfHwgKE1ldGhvZEtpbmQgPSB7fSkpO1xuLyoqXG4gKiBJcyB0aGlzIG1ldGhvZCBzaWRlLWVmZmVjdC1mcmVlIChvciBzYWZlIGluIEhUVFAgcGFybGFuY2UpLCBvciBqdXN0XG4gKiBpZGVtcG90ZW50LCBvciBuZWl0aGVyPyBIVFRQIGJhc2VkIFJQQyBpbXBsZW1lbnRhdGlvbiBtYXkgY2hvb3NlIEdFVCB2ZXJiXG4gKiBmb3Igc2FmZSBtZXRob2RzLCBhbmQgUFVUIHZlcmIgZm9yIGlkZW1wb3RlbnQgbWV0aG9kcyBpbnN0ZWFkIG9mIHRoZVxuICogZGVmYXVsdCBQT1NULlxuICpcbiAqIFRoaXMgZW51bSBtYXRjaGVzIHRoZSBwcm90b2J1ZiBlbnVtIGdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zLklkZW1wb3RlbmN5TGV2ZWwsXG4gKiBkZWZpbmVkIGluIHRoZSB3ZWxsLWtub3duIHR5cGUgZ29vZ2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8sIGJ1dFxuICogZHJvcHMgVU5LTk9XTi5cbiAqL1xuZXhwb3J0IHZhciBNZXRob2RJZGVtcG90ZW5jeTtcbihmdW5jdGlvbiAoTWV0aG9kSWRlbXBvdGVuY3kpIHtcbiAgICAvKipcbiAgICAgKiBJZGVtcG90ZW50LCBubyBzaWRlIGVmZmVjdHMuXG4gICAgICovXG4gICAgTWV0aG9kSWRlbXBvdGVuY3lbTWV0aG9kSWRlbXBvdGVuY3lbXCJOb1NpZGVFZmZlY3RzXCJdID0gMV0gPSBcIk5vU2lkZUVmZmVjdHNcIjtcbiAgICAvKipcbiAgICAgKiBJZGVtcG90ZW50LCBidXQgbWF5IGhhdmUgc2lkZSBlZmZlY3RzLlxuICAgICAqL1xuICAgIE1ldGhvZElkZW1wb3RlbmN5W01ldGhvZElkZW1wb3RlbmN5W1wiSWRlbXBvdGVudFwiXSA9IDJdID0gXCJJZGVtcG90ZW50XCI7XG59KShNZXRob2RJZGVtcG90ZW5jeSB8fCAoTWV0aG9kSWRlbXBvdGVuY3kgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/to-plain-message.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/to-plain-message.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toPlainMessage: function() { return /* binding */ toPlainMessage; }\n/* harmony export */ });\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\n\n\n/**\n * toPlainMessage returns a new object by stripping\n * all methods from a message, leaving only fields and\n * oneof groups. It is recursive, meaning it applies this\n * same logic to all nested message fields as well.\n *\n * If the argument is already a plain message, it is\n * returned as-is.\n */\nfunction toPlainMessage(message) {\n    if (!(0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(message)) {\n        return message;\n    }\n    const type = message.getType();\n    const target = {};\n    for (const member of type.fields.byMember()) {\n        const source = message[member.localName];\n        let copy;\n        if (member.repeated) {\n            copy = source.map((e) => toPlainValue(e));\n        }\n        else if (member.kind == \"map\") {\n            copy = {};\n            for (const [key, v] of Object.entries(source)) {\n                copy[key] = toPlainValue(v);\n            }\n        }\n        else if (member.kind == \"oneof\") {\n            const f = member.findField(source.case);\n            copy = f\n                ? { case: source.case, value: toPlainValue(source.value) }\n                : { case: undefined };\n        }\n        else {\n            copy = toPlainValue(source);\n        }\n        target[member.localName] = copy;\n    }\n    return target;\n}\nfunction toPlainValue(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(value)) {\n        return toPlainMessage(value);\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3RvLXBsYWluLW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3VDO0FBQ0s7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3RvLXBsYWluLW1lc3NhZ2UuanM/MDc1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSxAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQsQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzLEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtcmV0dXJuLEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnQsbm8tY2FzZS1kZWNsYXJhdGlvbnMgKi9cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi9tZXNzYWdlLmpzXCI7XG5pbXBvcnQgeyBpc01lc3NhZ2UgfSBmcm9tIFwiLi9pcy1tZXNzYWdlLmpzXCI7XG4vKipcbiAqIHRvUGxhaW5NZXNzYWdlIHJldHVybnMgYSBuZXcgb2JqZWN0IGJ5IHN0cmlwcGluZ1xuICogYWxsIG1ldGhvZHMgZnJvbSBhIG1lc3NhZ2UsIGxlYXZpbmcgb25seSBmaWVsZHMgYW5kXG4gKiBvbmVvZiBncm91cHMuIEl0IGlzIHJlY3Vyc2l2ZSwgbWVhbmluZyBpdCBhcHBsaWVzIHRoaXNcbiAqIHNhbWUgbG9naWMgdG8gYWxsIG5lc3RlZCBtZXNzYWdlIGZpZWxkcyBhcyB3ZWxsLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhbHJlYWR5IGEgcGxhaW4gbWVzc2FnZSwgaXQgaXNcbiAqIHJldHVybmVkIGFzLWlzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9QbGFpbk1lc3NhZ2UobWVzc2FnZSkge1xuICAgIGlmICghaXNNZXNzYWdlKG1lc3NhZ2UpKSB7XG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH1cbiAgICBjb25zdCB0eXBlID0gbWVzc2FnZS5nZXRUeXBlKCk7XG4gICAgY29uc3QgdGFyZ2V0ID0ge307XG4gICAgZm9yIChjb25zdCBtZW1iZXIgb2YgdHlwZS5maWVsZHMuYnlNZW1iZXIoKSkge1xuICAgICAgICBjb25zdCBzb3VyY2UgPSBtZXNzYWdlW21lbWJlci5sb2NhbE5hbWVdO1xuICAgICAgICBsZXQgY29weTtcbiAgICAgICAgaWYgKG1lbWJlci5yZXBlYXRlZCkge1xuICAgICAgICAgICAgY29weSA9IHNvdXJjZS5tYXAoKGUpID0+IHRvUGxhaW5WYWx1ZShlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobWVtYmVyLmtpbmQgPT0gXCJtYXBcIikge1xuICAgICAgICAgICAgY29weSA9IHt9O1xuICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2XSBvZiBPYmplY3QuZW50cmllcyhzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgY29weVtrZXldID0gdG9QbGFpblZhbHVlKHYpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG1lbWJlci5raW5kID09IFwib25lb2ZcIikge1xuICAgICAgICAgICAgY29uc3QgZiA9IG1lbWJlci5maW5kRmllbGQoc291cmNlLmNhc2UpO1xuICAgICAgICAgICAgY29weSA9IGZcbiAgICAgICAgICAgICAgICA/IHsgY2FzZTogc291cmNlLmNhc2UsIHZhbHVlOiB0b1BsYWluVmFsdWUoc291cmNlLnZhbHVlKSB9XG4gICAgICAgICAgICAgICAgOiB7IGNhc2U6IHVuZGVmaW5lZCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29weSA9IHRvUGxhaW5WYWx1ZShzb3VyY2UpO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldFttZW1iZXIubG9jYWxOYW1lXSA9IGNvcHk7XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG59XG5mdW5jdGlvbiB0b1BsYWluVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGlmIChpc01lc3NhZ2UodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0b1BsYWluTWVzc2FnZSh2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgY29uc3QgYyA9IG5ldyBVaW50OEFycmF5KHZhbHVlLmJ5dGVMZW5ndGgpO1xuICAgICAgICBjLnNldCh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBjO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/to-plain-message.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertFetchApi: function() { return /* binding */ assertFetchApi; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Asserts that the fetch API is available.\n */\nfunction assertFetchApi() {\n    try {\n        new Headers();\n    }\n    catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC13ZWIvZGlzdC9lc20vYXNzZXJ0LWZldGNoLWFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0LXdlYi9kaXN0L2VzbS9hc3NlcnQtZmV0Y2gtYXBpLmpzP2I3YWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQXNzZXJ0cyB0aGF0IHRoZSBmZXRjaCBBUEkgaXMgYXZhaWxhYmxlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0RmV0Y2hBcGkoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgbmV3IEhlYWRlcnMoKTtcbiAgICB9XG4gICAgY2F0Y2ggKF8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY29ubmVjdC13ZWIgcmVxdWlyZXMgdGhlIGZldGNoIEFQSS4gQXJlIHlvdSBydW5uaW5nIG9uIGFuIG9sZCB2ZXJzaW9uIG9mIE5vZGUuanM/IE5vZGUuanMgaXMgbm90IHN1cHBvcnRlZCBpbiBDb25uZWN0IGZvciBXZWIgLSBwbGVhc2Ugc3RheSB0dW5lZCBmb3IgQ29ubmVjdCBmb3IgTm9kZS5cIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectTransport: function() { return /* binding */ createConnectTransport; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"./node_modules/@connectrpc/connect/dist/esm/index.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/index.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/index.js\");\n/* harmony import */ var _assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert-fetch-api.js */ \"./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */\nfunction createConnectTransport(options) {\n    var _a;\n    (0,_assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    const useGet = options.useHttpGet === true &&\n                        method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodIdempotency.NoSideEffects;\n                    let body = null;\n                    if (useGet) {\n                        req = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.transformConnectPostToGetRequest)(req, serialize(req.message), useBinaryFormat);\n                    }\n                    else {\n                        body = serialize(req.message);\n                    }\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body }));\n                    const { isUnaryError, unaryError } = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.validateResponse)(method.kind, useBinaryFormat, response.status, response.headers);\n                    if (isUnaryError) {\n                        throw (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.errorFromJson)((await response.json()), (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.appendHeaders)(...(0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.trailerDemux)(response.headers)), unaryError);\n                    }\n                    const [demuxedHeader, demuxedTrailer] = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.trailerDemux)(response.headers);\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat\n                            ? parse(new Uint8Array(await response.arrayBuffer()))\n                            : method.O.fromJson((await response.json()), (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.getJsonOptions)(options.jsonOptions)),\n                        trailer: demuxedTrailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, trailerTarget, header, signal) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createEnvelopeReadableStream)(body).getReader();\n                    let endStreamReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.compressedFlag) === _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.compressedFlag) {\n                            throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError(`protocol error: received unsupported compressed output`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n                        }\n                        if ((flags & _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.endStreamFlag) === _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.endStreamFlag) {\n                            endStreamReceived = true;\n                            const endStream = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.endStreamFromJson)(data);\n                            if (endStream.error) {\n                                const error = endStream.error;\n                                header.forEach((value, key) => {\n                                    error.metadata.append(key, value);\n                                });\n                                throw error;\n                            }\n                            endStream.metadata.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        yield yield __await(parse(data));\n                    }\n                    // Node wil not throw an AbortError on `read` if the\n                    // signal is aborted before `getReader` is called.\n                    // As a work around we check at the end and throw.\n                    //\n                    // Ref: https://github.com/nodejs/undici/issues/1940\n                    if (\"throwIfAborted\" in signal) {\n                        // We assume that implementations without `throwIfAborted` (old\n                        // browsers) do honor aborted signals on `read`.\n                        signal.throwIfAborted();\n                    }\n                    if (!endStreamReceived) {\n                        throw \"missing EndStreamResponse\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming) {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.encodeEnvelope)(0, serialize(r.value));\n            }\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: options.interceptors,\n                timeoutMs,\n                signal,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_2__.validateResponse)(method.kind, useBinaryFormat, fRes.status, fRes.headers);\n                    if (fRes.body === null) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, trailer, fRes.headers, req.signal) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGrpcWebTransport: function() { return /* binding */ createGrpcWebTransport; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"./node_modules/@connectrpc/connect/dist/esm/index.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/index.js\");\n/* harmony import */ var _connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect/protocol-grpc-web */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/index.js\");\n/* harmony import */ var _assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert-fetch-api.js */ \"./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Transport for the gRPC-web protocol. The protocol encodes\n * trailers in the response body and makes unary and server-streaming\n * methods available to web browsers. It uses the fetch API to make\n * HTTP requests.\n *\n * Note that this transport does not implement the grpc-web-text format,\n * which applies base64 encoding to the request and response bodies to\n * support reading streaming responses from an XMLHttpRequest.\n */\nfunction createGrpcWebTransport(options) {\n    var _a;\n    (0,_assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.requestHeader)(useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.encodeEnvelope)(0, serialize(req.message)) }));\n                    const { headerError } = (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.validateResponse)(response.status, response.headers);\n                    if (!response.body) {\n                        if (headerError !== undefined)\n                            throw headerError;\n                        throw \"missing response body\";\n                    }\n                    const reader = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createEnvelopeReadableStream)(response.body).getReader();\n                    let trailer;\n                    let message;\n                    for (;;) {\n                        const r = await reader.read();\n                        if (r.done) {\n                            break;\n                        }\n                        const { flags, data } = r.value;\n                        if ((flags & _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.compressedFlag) === _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.compressedFlag) {\n                            throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError(`protocol error: received unsupported compressed output`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n                        }\n                        if (flags === _connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.trailerFlag) {\n                            if (trailer !== undefined) {\n                                throw \"extra trailer\";\n                            }\n                            // Unary responses require exactly one response message, but in\n                            // case of an error, it is perfectly valid to have a response body\n                            // that only contains error trailers.\n                            trailer = (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.trailerParse)(data);\n                            continue;\n                        }\n                        if (message !== undefined) {\n                            throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"extra message\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented);\n                        }\n                        message = parse(data);\n                    }\n                    if (trailer === undefined) {\n                        if (headerError !== undefined)\n                            throw headerError;\n                        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"missing trailer\", response.headers.has(_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.headerGrpcStatus)\n                            ? _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented\n                            : _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unknown);\n                    }\n                    (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.validateTrailer)(trailer, response.headers);\n                    if (message === undefined) {\n                        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"missing message\", trailer.has(_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.headerGrpcStatus) ? _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented : _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unknown);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: response.headers,\n                        message,\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, foundStatus, trailerTarget, header, signal) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createEnvelopeReadableStream)(body).getReader();\n                    if (foundStatus) {\n                        // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                        // response (a response without a body and no trailers).\n                        //\n                        // The spec seems to disallow a trailers-only response for status 0 - we are\n                        // lenient and only verify that the body is empty.\n                        //\n                        // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                        // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                        if (!(yield __await(reader.read())).done) {\n                            throw \"extra data for trailers-only\";\n                        }\n                        return yield __await(void 0);\n                    }\n                    let trailerReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & _connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.trailerFlag) === _connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.trailerFlag) {\n                            if (trailerReceived) {\n                                throw \"extra trailer\";\n                            }\n                            trailerReceived = true;\n                            const trailer = (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.trailerParse)(data);\n                            (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.validateTrailer)(trailer, header);\n                            trailer.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        if (trailerReceived) {\n                            throw \"extra message\";\n                        }\n                        yield yield __await(parse(data));\n                    }\n                    // Node wil not throw an AbortError on `read` if the\n                    // signal is aborted before `getReader` is called.\n                    // As a work around we check at the end and throw.\n                    //\n                    // Ref: https://github.com/nodejs/undici/issues/1940\n                    if (\"throwIfAborted\" in signal) {\n                        // We assume that implementations without `throwIfAborted` (old\n                        // browsers) do honor aborted signals on `read`.\n                        signal.throwIfAborted();\n                    }\n                    if (!trailerReceived) {\n                        throw \"missing trailer\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming) {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.encodeEnvelope)(0, serialize(r.value));\n            }\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.requestHeader)(useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    const { foundStatus, headerError } = (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_2__.validateResponse)(fRes.status, fRes.headers);\n                    if (headerError != undefined) {\n                        throw headerError;\n                    }\n                    if (!fRes.body) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, foundStatus, trailer, fRes.headers, req.signal) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect-web/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectTransport: function() { return /* reexport safe */ _connect_transport_js__WEBPACK_IMPORTED_MODULE_0__.createConnectTransport; },\n/* harmony export */   createGrpcWebTransport: function() { return /* reexport safe */ _grpc_web_transport_js__WEBPACK_IMPORTED_MODULE_1__.createGrpcWebTransport; }\n/* harmony export */ });\n/* harmony import */ var _connect_transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connect-transport.js */ \"./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js\");\n/* harmony import */ var _grpc_web_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grpc-web-transport.js */ \"./node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC13ZWIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dFO0FBQ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3Qtd2ViL2Rpc3QvZXNtL2luZGV4LmpzPzJlMDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmV4cG9ydCB7IGNyZWF0ZUNvbm5lY3RUcmFuc3BvcnQgfSBmcm9tIFwiLi9jb25uZWN0LXRyYW5zcG9ydC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlR3JwY1dlYlRyYW5zcG9ydCB9IGZyb20gXCIuL2dycGMtd2ViLXRyYW5zcG9ydC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect-web/dist/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/any-client.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/any-client.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeAnyClient: function() { return /* binding */ makeAnyClient; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */\nfunction makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), { localName,\n            service }));\n        if (method != null) {\n            client[localName] = method;\n        }\n    }\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9hbnktY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0VBQWtFLGlCQUFpQjtBQUNuRixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2FueS1jbGllbnQuanM/NDU3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDcmVhdGUgYW55IGNsaWVudCBmb3IgdGhlIGdpdmVuIHNlcnZpY2UuXG4gKlxuICogVGhlIGdpdmVuIGNyZWF0ZU1ldGhvZCBmdW5jdGlvbiBpcyBjYWxsZWQgZm9yIGVhY2ggbWV0aG9kIGRlZmluaXRpb25cbiAqIG9mIHRoZSBzZXJ2aWNlLiBUaGUgZnVuY3Rpb24gaXQgcmV0dXJucyBpcyBhZGRlZCB0byB0aGUgY2xpZW50IG9iamVjdFxuICogYXMgYSBtZXRob2QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQW55Q2xpZW50KHNlcnZpY2UsIGNyZWF0ZU1ldGhvZCkge1xuICAgIGNvbnN0IGNsaWVudCA9IHt9O1xuICAgIGZvciAoY29uc3QgW2xvY2FsTmFtZSwgbWV0aG9kSW5mb10gb2YgT2JqZWN0LmVudHJpZXMoc2VydmljZS5tZXRob2RzKSkge1xuICAgICAgICBjb25zdCBtZXRob2QgPSBjcmVhdGVNZXRob2QoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtZXRob2RJbmZvKSwgeyBsb2NhbE5hbWUsXG4gICAgICAgICAgICBzZXJ2aWNlIH0pKTtcbiAgICAgICAgaWYgKG1ldGhvZCAhPSBudWxsKSB7XG4gICAgICAgICAgICBjbGllbnRbbG9jYWxOYW1lXSA9IG1ldGhvZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY2xpZW50O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/any-client.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/callback-client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/callback-client.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCallbackClient: function() { return /* binding */ createCallbackClient; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./any-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\n\n\n\n\n\n/**\n * Create a CallbackClient for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createCallbackClient(service, transport) {\n    return (0,_any_client_js__WEBPACK_IMPORTED_MODULE_0__.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\nfunction createUnaryFn(transport, service, method) {\n    return function (requestMessage, callback, options) {\n        const abort = new AbortController();\n        options = wrapSignal(abort, options);\n        transport\n            .unary(service, method, abort.signal, options.timeoutMs, options.headers, requestMessage, options.contextValues)\n            .then((response) => {\n            var _a, _b;\n            (_a = options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            (_b = options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n            callback(undefined, response.message);\n        }, (reason) => {\n            const err = _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError.from(reason, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n            if (err.code === _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user.\n                return;\n            }\n            callback(err, new method.O());\n        });\n        return () => abort.abort();\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, onResponse, onClose, options) {\n        const abort = new AbortController();\n        async function run() {\n            var _a, e_1, _b, _c;\n            var _d, _e;\n            options = wrapSignal(abort, options);\n            const response = await transport.stream(service, method, options.signal, options.timeoutMs, options.headers, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_4__.createAsyncIterable)([input]), options.contextValues);\n            (_d = options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n            try {\n                for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n                    _c = _h.value;\n                    _f = false;\n                    const message = _c;\n                    onResponse(message);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            (_e = options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n            onClose(undefined);\n        }\n        run().catch((reason) => {\n            const err = _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError.from(reason, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n            if (err.code === _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user,\n                // but do invoke the close-callback.\n                onClose(undefined);\n            }\n            else {\n                onClose(err);\n            }\n        });\n        return () => abort.abort();\n    };\n}\nfunction wrapSignal(abort, options) {\n    if (options === null || options === void 0 ? void 0 : options.signal) {\n        options.signal.addEventListener(\"abort\", () => abort.abort());\n        if (options.signal.aborted) {\n            abort.abort();\n        }\n    }\n    return Object.assign(Object.assign({}, options), { signal: abort.signal });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/callback-client.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/code.js":
/*!***********************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/code.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: function() { return /* binding */ Code; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connectrpc.com/docs/protocol#error-codes\n * for details.\n */\nvar Code;\n(function (Code) {\n    /**\n     * Canceled, usually be the user\n     */\n    Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */\n    Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */\n    Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */\n    Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */\n    Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */\n    Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */\n    Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */\n    Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */\n    Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */\n    Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */\n    Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */\n    Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */\n    Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */\n    Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */\n    Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code || (Code = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2NvZGUuanM/NWVkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDb25uZWN0IHJlcHJlc2VudHMgY2F0ZWdvcmllcyBvZiBlcnJvcnMgYXMgY29kZXMsIGFuZCBlYWNoIGNvZGUgbWFwcyB0byBhXG4gKiBzcGVjaWZpYyBIVFRQIHN0YXR1cyBjb2RlLiBUaGUgY29kZXMgYW5kIHRoZWlyIHNlbWFudGljcyB3ZXJlIGNob3NlbiB0b1xuICogbWF0Y2ggZ1JQQy4gT25seSB0aGUgY29kZXMgYmVsb3cgYXJlIHZhbGlkIOKAlCB0aGVyZSBhcmUgbm8gdXNlci1kZWZpbmVkXG4gKiBjb2Rlcy5cbiAqXG4gKiBTZWUgdGhlIHNwZWNpZmljYXRpb24gYXQgaHR0cHM6Ly9jb25uZWN0cnBjLmNvbS9kb2NzL3Byb3RvY29sI2Vycm9yLWNvZGVzXG4gKiBmb3IgZGV0YWlscy5cbiAqL1xuZXhwb3J0IHZhciBDb2RlO1xuKGZ1bmN0aW9uIChDb2RlKSB7XG4gICAgLyoqXG4gICAgICogQ2FuY2VsZWQsIHVzdWFsbHkgYmUgdGhlIHVzZXJcbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJDYW5jZWxlZFwiXSA9IDFdID0gXCJDYW5jZWxlZFwiO1xuICAgIC8qKlxuICAgICAqIFVua25vd24gZXJyb3JcbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJVbmtub3duXCJdID0gMl0gPSBcIlVua25vd25cIjtcbiAgICAvKipcbiAgICAgKiBBcmd1bWVudCBpbnZhbGlkIHJlZ2FyZGxlc3Mgb2Ygc3lzdGVtIHN0YXRlXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiSW52YWxpZEFyZ3VtZW50XCJdID0gM10gPSBcIkludmFsaWRBcmd1bWVudFwiO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbiBleHBpcmVkLCBtYXkgb3IgbWF5IG5vdCBoYXZlIGNvbXBsZXRlZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJEZWFkbGluZUV4Y2VlZGVkXCJdID0gNF0gPSBcIkRlYWRsaW5lRXhjZWVkZWRcIjtcbiAgICAvKipcbiAgICAgKiBFbnRpdHkgbm90IGZvdW5kLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIk5vdEZvdW5kXCJdID0gNV0gPSBcIk5vdEZvdW5kXCI7XG4gICAgLyoqXG4gICAgICogRW50aXR5IGFscmVhZHkgZXhpc3RzLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkFscmVhZHlFeGlzdHNcIl0gPSA2XSA9IFwiQWxyZWFkeUV4aXN0c1wiO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbiBub3QgYXV0aG9yaXplZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJQZXJtaXNzaW9uRGVuaWVkXCJdID0gN10gPSBcIlBlcm1pc3Npb25EZW5pZWRcIjtcbiAgICAvKipcbiAgICAgKiBRdW90YSBleGhhdXN0ZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiUmVzb3VyY2VFeGhhdXN0ZWRcIl0gPSA4XSA9IFwiUmVzb3VyY2VFeGhhdXN0ZWRcIjtcbiAgICAvKipcbiAgICAgKiBBcmd1bWVudCBpbnZhbGlkIGluIGN1cnJlbnQgc3lzdGVtIHN0YXRlLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkZhaWxlZFByZWNvbmRpdGlvblwiXSA9IDldID0gXCJGYWlsZWRQcmVjb25kaXRpb25cIjtcbiAgICAvKipcbiAgICAgKiBPcGVyYXRpb24gYWJvcnRlZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJBYm9ydGVkXCJdID0gMTBdID0gXCJBYm9ydGVkXCI7XG4gICAgLyoqXG4gICAgICogT3V0IG9mIGJvdW5kcywgdXNlIGluc3RlYWQgb2YgRmFpbGVkUHJlY29uZGl0aW9uLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIk91dE9mUmFuZ2VcIl0gPSAxMV0gPSBcIk91dE9mUmFuZ2VcIjtcbiAgICAvKipcbiAgICAgKiBPcGVyYXRpb24gbm90IGltcGxlbWVudGVkIG9yIGRpc2FibGVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlVuaW1wbGVtZW50ZWRcIl0gPSAxMl0gPSBcIlVuaW1wbGVtZW50ZWRcIjtcbiAgICAvKipcbiAgICAgKiBJbnRlcm5hbCBlcnJvciwgcmVzZXJ2ZWQgZm9yIFwic2VyaW91cyBlcnJvcnNcIi5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJJbnRlcm5hbFwiXSA9IDEzXSA9IFwiSW50ZXJuYWxcIjtcbiAgICAvKipcbiAgICAgKiBVbmF2YWlsYWJsZSwgY2xpZW50IHNob3VsZCBiYWNrIG9mZiBhbmQgcmV0cnkuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiVW5hdmFpbGFibGVcIl0gPSAxNF0gPSBcIlVuYXZhaWxhYmxlXCI7XG4gICAgLyoqXG4gICAgICogVW5yZWNvdmVyYWJsZSBkYXRhIGxvc3Mgb3IgY29ycnVwdGlvbi5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJEYXRhTG9zc1wiXSA9IDE1XSA9IFwiRGF0YUxvc3NcIjtcbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0IGlzbid0IGF1dGhlbnRpY2F0ZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiVW5hdXRoZW50aWNhdGVkXCJdID0gMTZdID0gXCJVbmF1dGhlbnRpY2F0ZWRcIjtcbn0pKENvZGUgfHwgKENvZGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/code.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/connect-error.js":
/*!********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/connect-error.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectError: function() { return /* binding */ ConnectError; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-connect/code-string.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * ConnectError captures four pieces of information: a Code, an error\n * message, an optional cause of the error, and an optional collection of\n * arbitrary Protobuf messages called  \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * method findDetails() to retrieve the details.\n */\nclass ConnectError extends Error {\n    /**\n     * Create a new ConnectError.\n     * If no code is provided, code \"unknown\" is used.\n     * Outgoing details are only relevant for the server side - a service may\n     * raise an error with details, and it is up to the protocol implementation\n     * to encode and send the details along with error.\n     */\n    constructor(message, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown, metadata, outgoingDetails, cause) {\n        super(createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n        this.cause = cause;\n    }\n    /**\n     * Convert any value - typically a caught error into a ConnectError,\n     * following these rules:\n     * - If the value is already a ConnectError, return it as is.\n     * - If the value is an AbortError from the fetch API, return the message\n     *   of the AbortError with code Canceled.\n     * - For other Errors, return the error message with code Unknown by default.\n     * - For other values, return the values String representation as a message,\n     *   with the code Unknown by default.\n     * The original value will be used for the \"cause\" property for the new\n     * ConnectError.\n     */\n    static from(reason, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown) {\n        if (reason instanceof ConnectError) {\n            return reason;\n        }\n        if (reason instanceof Error) {\n            if (reason.name == \"AbortError\") {\n                // Fetch requests can only be canceled with an AbortController.\n                // We detect that condition by looking at the name of the raised\n                // error object, and translate to the appropriate status code.\n                return new ConnectError(reason.message, _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled);\n            }\n            return new ConnectError(reason.message, code, undefined, undefined, reason);\n        }\n        return new ConnectError(String(reason), code, undefined, undefined, reason);\n    }\n    static [Symbol.hasInstance](v) {\n        if (!(v instanceof Error)) {\n            return false;\n        }\n        if (Object.getPrototypeOf(v) === ConnectError.prototype) {\n            return true;\n        }\n        return (v.name === \"ConnectError\" &&\n            \"code\" in v &&\n            typeof v.code === \"number\" &&\n            \"metadata\" in v &&\n            \"details\" in v &&\n            Array.isArray(v.details) &&\n            \"rawMessage\" in v &&\n            typeof v.rawMessage == \"string\" &&\n            \"cause\" in v);\n    }\n    findDetails(typeOrRegistry) {\n        const registry = \"typeName\" in typeOrRegistry\n            ? {\n                findMessage: (typeName) => typeName === typeOrRegistry.typeName ? typeOrRegistry : undefined,\n            }\n            : typeOrRegistry;\n        const details = [];\n        for (const data of this.details) {\n            if (\"getType\" in data) {\n                if (registry.findMessage(data.getType().typeName)) {\n                    details.push(data);\n                }\n                continue;\n            }\n            const type = registry.findMessage(data.type);\n            if (type) {\n                try {\n                    details.push(type.fromBinary(data.value));\n                }\n                catch (_) {\n                    // We silently give up if we are unable to parse the detail, because\n                    // that appears to be the least worst behavior.\n                    // It is very unlikely that a user surrounds a catch body handling the\n                    // error with another try-catch statement, and we do not want to\n                    // recommend doing so.\n                }\n            }\n        }\n        return details;\n    }\n}\n/**\n * Create an error message, prefixing the given code.\n */\nfunction createMessage(message, code) {\n    return message.length\n        ? `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}] ${message}`\n        : `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/connect-error.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/context-values.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/context-values.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextKey: function() { return /* binding */ createContextKey; },\n/* harmony export */   createContextValues: function() { return /* binding */ createContextValues; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * createContextValues creates a new ContextValues.\n */\nfunction createContextValues() {\n    return {\n        get(key) {\n            return key.id in this ? this[key.id] : key.defaultValue;\n        },\n        set(key, value) {\n            this[key.id] = value;\n            return this;\n        },\n        delete(key) {\n            delete this[key.id];\n            return this;\n        },\n    };\n}\n/**\n * createContextKey creates a new ContextKey.\n */\nfunction createContextKey(defaultValue, options) {\n    return { id: Symbol(options === null || options === void 0 ? void 0 : options.description), defaultValue };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb250ZXh0LXZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vY29udGV4dC12YWx1ZXMuanM/Yjg3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBjcmVhdGVDb250ZXh0VmFsdWVzIGNyZWF0ZXMgYSBuZXcgQ29udGV4dFZhbHVlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHRWYWx1ZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0KGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGtleS5pZCBpbiB0aGlzID8gdGhpc1trZXkuaWRdIDoga2V5LmRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXNba2V5LmlkXSA9IHZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGV0ZShrZXkpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2tleS5pZF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBjcmVhdGVDb250ZXh0S2V5IGNyZWF0ZXMgYSBuZXcgQ29udGV4dEtleS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHRLZXkoZGVmYXVsdFZhbHVlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHsgaWQ6IFN5bWJvbChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZGVzY3JpcHRpb24pLCBkZWZhdWx0VmFsdWUgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/context-values.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/cors.js":
/*!***********************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/cors.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cors: function() { return /* binding */ cors; }\n/* harmony export */ });\n/* harmony import */ var _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol-connect/headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-grpc/headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol-grpc-web/headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * CORS prevents rogue scripts in a web browser from making arbitrary requests\n * to other web servers.\n *\n * This object provides helpful constants to configure CORS middleware for\n * cross-domain requests with the protocols supported by Connect.\n *\n * Make sure to add application-specific headers that your application\n * uses as well.\n */\nconst cors = {\n    /**\n     * Request methods that scripts running in the browser are permitted to use.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these headers fields must be included in the preflight response header\n     * Access-Control-Allow-Methods.\n     */\n    allowedMethods: [\"POST\", \"GET\"],\n    /**\n     * Header fields that scripts running in the browser are permitted to send.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in the preflight response header\n     * Access-Control-Allow-Headers.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * may send.\n     */\n    allowedHeaders: [\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamAcceptEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryAcceptEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerMessageType, // Unused in web browsers, but added for future-proofing\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXGrpcWeb,\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXUserAgent,\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerTimeout,\n    ],\n    /**\n     * Header fields that scripts running the browser are permitted to see.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in header Access-Control-Expose-Headers\n     * of the actual response.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * should see. If your application uses trailers, they will be sent as header\n     * fields with a `Trailer-` prefix for Connect unary RPCs - make sure to\n     * expose them as well if you want them to be visible in all supported\n     * protocols.\n     */\n    exposedHeaders: [\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerGrpcStatus, // Crucial for gRPC-web\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerGrpcMessage, // Crucial for gRPC-web\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerStatusDetailsBin, // Error details in gRPC, gRPC-web\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding, // Unused in web browsers, but added for future-proofing\n    ],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5RDtBQUNOO0FBQ087QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyRUFBeUI7QUFDakMsUUFBUSwrRUFBNkI7QUFDckMsUUFBUSx1RUFBcUI7QUFDN0IsUUFBUSw4RUFBNEI7QUFDcEMsUUFBUSxvRkFBa0M7QUFDMUMsUUFBUSw2RUFBMkI7QUFDbkMsUUFBUSxtRkFBaUM7QUFDekMsUUFBUSx3RUFBc0I7QUFDOUIsUUFBUSx5RUFBc0I7QUFDOUIsUUFBUSwyRUFBd0I7QUFDaEMsUUFBUSx3RUFBcUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyRUFBd0I7QUFDaEMsUUFBUSw0RUFBeUI7QUFDakMsUUFBUSxpRkFBOEI7QUFDdEMsUUFBUSw2RUFBMkI7QUFDbkMsUUFBUSw4RUFBNEI7QUFDcEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb3JzLmpzPzVhYjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCAqIGFzIGNvbm5lY3QgZnJvbSBcIi4vcHJvdG9jb2wtY29ubmVjdC9oZWFkZXJzLmpzXCI7XG5pbXBvcnQgKiBhcyBncnBjIGZyb20gXCIuL3Byb3RvY29sLWdycGMvaGVhZGVycy5qc1wiO1xuaW1wb3J0ICogYXMgZ3JwY1dlYiBmcm9tIFwiLi9wcm90b2NvbC1ncnBjLXdlYi9oZWFkZXJzLmpzXCI7XG4vKipcbiAqIENPUlMgcHJldmVudHMgcm9ndWUgc2NyaXB0cyBpbiBhIHdlYiBicm93c2VyIGZyb20gbWFraW5nIGFyYml0cmFyeSByZXF1ZXN0c1xuICogdG8gb3RoZXIgd2ViIHNlcnZlcnMuXG4gKlxuICogVGhpcyBvYmplY3QgcHJvdmlkZXMgaGVscGZ1bCBjb25zdGFudHMgdG8gY29uZmlndXJlIENPUlMgbWlkZGxld2FyZSBmb3JcbiAqIGNyb3NzLWRvbWFpbiByZXF1ZXN0cyB3aXRoIHRoZSBwcm90b2NvbHMgc3VwcG9ydGVkIGJ5IENvbm5lY3QuXG4gKlxuICogTWFrZSBzdXJlIHRvIGFkZCBhcHBsaWNhdGlvbi1zcGVjaWZpYyBoZWFkZXJzIHRoYXQgeW91ciBhcHBsaWNhdGlvblxuICogdXNlcyBhcyB3ZWxsLlxuICovXG5leHBvcnQgY29uc3QgY29ycyA9IHtcbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0IG1ldGhvZHMgdGhhdCBzY3JpcHRzIHJ1bm5pbmcgaW4gdGhlIGJyb3dzZXIgYXJlIHBlcm1pdHRlZCB0byB1c2UuXG4gICAgICpcbiAgICAgKiBUbyBzdXBwb3J0IGNyb3NzLWRvbWFpbiByZXF1ZXN0cyB3aXRoIHRoZSBwcm90b2NvbHMgc3VwcG9ydGVkIGJ5IENvbm5lY3QsXG4gICAgICogdGhlc2UgaGVhZGVycyBmaWVsZHMgbXVzdCBiZSBpbmNsdWRlZCBpbiB0aGUgcHJlZmxpZ2h0IHJlc3BvbnNlIGhlYWRlclxuICAgICAqIEFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMuXG4gICAgICovXG4gICAgYWxsb3dlZE1ldGhvZHM6IFtcIlBPU1RcIiwgXCJHRVRcIl0sXG4gICAgLyoqXG4gICAgICogSGVhZGVyIGZpZWxkcyB0aGF0IHNjcmlwdHMgcnVubmluZyBpbiB0aGUgYnJvd3NlciBhcmUgcGVybWl0dGVkIHRvIHNlbmQuXG4gICAgICpcbiAgICAgKiBUbyBzdXBwb3J0IGNyb3NzLWRvbWFpbiByZXF1ZXN0cyB3aXRoIHRoZSBwcm90b2NvbHMgc3VwcG9ydGVkIGJ5IENvbm5lY3QsXG4gICAgICogdGhlc2UgZmllbGQgbmFtZXMgbXVzdCBiZSBpbmNsdWRlZCBpbiB0aGUgcHJlZmxpZ2h0IHJlc3BvbnNlIGhlYWRlclxuICAgICAqIEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMuXG4gICAgICpcbiAgICAgKiBNYWtlIHN1cmUgdG8gaW5jbHVkZSBhbnkgYXBwbGljYXRpb24tc3BlY2lmaWMgaGVhZGVycyB5b3VyIGJyb3dzZXIgY2xpZW50XG4gICAgICogbWF5IHNlbmQuXG4gICAgICovXG4gICAgYWxsb3dlZEhlYWRlcnM6IFtcbiAgICAgICAgY29ubmVjdC5oZWFkZXJDb250ZW50VHlwZSxcbiAgICAgICAgY29ubmVjdC5oZWFkZXJQcm90b2NvbFZlcnNpb24sXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyVGltZW91dCxcbiAgICAgICAgY29ubmVjdC5oZWFkZXJTdHJlYW1FbmNvZGluZywgLy8gVW51c2VkIGluIHdlYiBicm93c2VycywgYnV0IGFkZGVkIGZvciBmdXR1cmUtcHJvb2ZpbmdcbiAgICAgICAgY29ubmVjdC5oZWFkZXJTdHJlYW1BY2NlcHRFbmNvZGluZywgLy8gVW51c2VkIGluIHdlYiBicm93c2VycywgYnV0IGFkZGVkIGZvciBmdXR1cmUtcHJvb2ZpbmdcbiAgICAgICAgY29ubmVjdC5oZWFkZXJVbmFyeUVuY29kaW5nLCAvLyBVbnVzZWQgaW4gd2ViIGJyb3dzZXJzLCBidXQgYWRkZWQgZm9yIGZ1dHVyZS1wcm9vZmluZ1xuICAgICAgICBjb25uZWN0LmhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgICAgIGdycGMuaGVhZGVyTWVzc2FnZVR5cGUsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgICAgIGdycGNXZWIuaGVhZGVyWEdycGNXZWIsXG4gICAgICAgIGdycGNXZWIuaGVhZGVyWFVzZXJBZ2VudCxcbiAgICAgICAgZ3JwY1dlYi5oZWFkZXJUaW1lb3V0LFxuICAgIF0sXG4gICAgLyoqXG4gICAgICogSGVhZGVyIGZpZWxkcyB0aGF0IHNjcmlwdHMgcnVubmluZyB0aGUgYnJvd3NlciBhcmUgcGVybWl0dGVkIHRvIHNlZS5cbiAgICAgKlxuICAgICAqIFRvIHN1cHBvcnQgY3Jvc3MtZG9tYWluIHJlcXVlc3RzIHdpdGggdGhlIHByb3RvY29scyBzdXBwb3J0ZWQgYnkgQ29ubmVjdCxcbiAgICAgKiB0aGVzZSBmaWVsZCBuYW1lcyBtdXN0IGJlIGluY2x1ZGVkIGluIGhlYWRlciBBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc1xuICAgICAqIG9mIHRoZSBhY3R1YWwgcmVzcG9uc2UuXG4gICAgICpcbiAgICAgKiBNYWtlIHN1cmUgdG8gaW5jbHVkZSBhbnkgYXBwbGljYXRpb24tc3BlY2lmaWMgaGVhZGVycyB5b3VyIGJyb3dzZXIgY2xpZW50XG4gICAgICogc2hvdWxkIHNlZS4gSWYgeW91ciBhcHBsaWNhdGlvbiB1c2VzIHRyYWlsZXJzLCB0aGV5IHdpbGwgYmUgc2VudCBhcyBoZWFkZXJcbiAgICAgKiBmaWVsZHMgd2l0aCBhIGBUcmFpbGVyLWAgcHJlZml4IGZvciBDb25uZWN0IHVuYXJ5IFJQQ3MgLSBtYWtlIHN1cmUgdG9cbiAgICAgKiBleHBvc2UgdGhlbSBhcyB3ZWxsIGlmIHlvdSB3YW50IHRoZW0gdG8gYmUgdmlzaWJsZSBpbiBhbGwgc3VwcG9ydGVkXG4gICAgICogcHJvdG9jb2xzLlxuICAgICAqL1xuICAgIGV4cG9zZWRIZWFkZXJzOiBbXG4gICAgICAgIGdycGNXZWIuaGVhZGVyR3JwY1N0YXR1cywgLy8gQ3J1Y2lhbCBmb3IgZ1JQQy13ZWJcbiAgICAgICAgZ3JwY1dlYi5oZWFkZXJHcnBjTWVzc2FnZSwgLy8gQ3J1Y2lhbCBmb3IgZ1JQQy13ZWJcbiAgICAgICAgZ3JwY1dlYi5oZWFkZXJTdGF0dXNEZXRhaWxzQmluLCAvLyBFcnJvciBkZXRhaWxzIGluIGdSUEMsIGdSUEMtd2ViXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyVW5hcnlFbmNvZGluZywgLy8gVW51c2VkIGluIHdlYiBicm93c2VycywgYnV0IGFkZGVkIGZvciBmdXR1cmUtcHJvb2ZpbmdcbiAgICAgICAgY29ubmVjdC5oZWFkZXJTdHJlYW1FbmNvZGluZywgLy8gVW51c2VkIGluIHdlYiBicm93c2VycywgYnV0IGFkZGVkIGZvciBmdXR1cmUtcHJvb2ZpbmdcbiAgICBdLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/cors.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/http-headers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/http-headers.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendHeaders: function() { return /* binding */ appendHeaders; },\n/* harmony export */   decodeBinaryHeader: function() { return /* binding */ decodeBinaryHeader; },\n/* harmony export */   encodeBinaryHeader: function() { return /* binding */ encodeBinaryHeader; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with unpadded base64 and returns a string that can be used for\n * a header whose name ends with `-bin`.\n */\nfunction encodeBinaryHeader(value) {\n    let bytes;\n    if (typeof value == \"object\" && \"getType\" in value) {\n        bytes = value.toBinary();\n    }\n    else if (typeof value == \"string\") {\n        bytes = new TextEncoder().encode(value);\n    }\n    else {\n        bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    }\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.enc(bytes).replace(/=+$/, \"\");\n}\nfunction decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.dec(value);\n        if (type) {\n            return type.fromBinary(bytes, options);\n        }\n        return bytes;\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.DataLoss);\n    }\n}\n/**\n * Merge two or more Headers objects by appending all fields from\n * all inputs to a new Headers object.\n */\nfunction appendHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers) {\n        e.forEach((value, key) => {\n            h.append(key, value);\n        });\n    }\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9odHRwLWhlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDQztBQUNqQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyREFBVztBQUN0QjtBQUNPO0FBQ1A7QUFDQSxzQkFBc0IsMkRBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBWSxTQUFTLDBDQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2h0dHAtaGVhZGVycy5qcz8wZmRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBwcm90b0Jhc2U2NCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi9jb2RlLmpzXCI7XG4vKipcbiAqIEVuY29kZSBhIHNpbmdsZSBiaW5hcnkgaGVhZGVyIHZhbHVlIGFjY29yZGluZyB0byB0aGUgQ29ubmVjdFxuICogYW5kIGdSUEMgc3BlY2lmaWNhdGlvbnMuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBhY2NlcHRzIHJhdyBiaW5hcnkgZGF0YSBmcm9tIGEgYnVmZmVyLCBhIHN0cmluZ1xuICogd2l0aCBVVEYtOCB0ZXh0LCBvciBhIHByb3RvYnVmIG1lc3NhZ2UuIEl0IGVuY29kZXMgdGhlIGlucHV0XG4gKiB3aXRoIHVucGFkZGVkIGJhc2U2NCBhbmQgcmV0dXJucyBhIHN0cmluZyB0aGF0IGNhbiBiZSB1c2VkIGZvclxuICogYSBoZWFkZXIgd2hvc2UgbmFtZSBlbmRzIHdpdGggYC1iaW5gLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQmluYXJ5SGVhZGVyKHZhbHVlKSB7XG4gICAgbGV0IGJ5dGVzO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIiAmJiBcImdldFR5cGVcIiBpbiB2YWx1ZSkge1xuICAgICAgICBieXRlcyA9IHZhbHVlLnRvQmluYXJ5KCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGJ5dGVzID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGJ5dGVzID0gdmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5ID8gdmFsdWUgOiBuZXcgVWludDhBcnJheSh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBwcm90b0Jhc2U2NC5lbmMoYnl0ZXMpLnJlcGxhY2UoLz0rJC8sIFwiXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJpbmFyeUhlYWRlcih2YWx1ZSwgdHlwZSwgb3B0aW9ucykge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gcHJvdG9CYXNlNjQuZGVjKHZhbHVlKTtcbiAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0eXBlLmZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlcztcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgQ29ubmVjdEVycm9yLmZyb20oZSwgQ29kZS5EYXRhTG9zcyk7XG4gICAgfVxufVxuLyoqXG4gKiBNZXJnZSB0d28gb3IgbW9yZSBIZWFkZXJzIG9iamVjdHMgYnkgYXBwZW5kaW5nIGFsbCBmaWVsZHMgZnJvbVxuICogYWxsIGlucHV0cyB0byBhIG5ldyBIZWFkZXJzIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZEhlYWRlcnMoLi4uaGVhZGVycykge1xuICAgIGNvbnN0IGggPSBuZXcgSGVhZGVycygpO1xuICAgIGZvciAoY29uc3QgZSBvZiBoZWFkZXJzKSB7XG4gICAgICAgIGUuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaC5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gaDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/http-headers.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/implementation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/implementation.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerContext: function() { return /* binding */ createHandlerContext; },\n/* harmony export */   createMethodImplSpec: function() { return /* binding */ createMethodImplSpec; },\n/* harmony export */   createServiceImplSpec: function() { return /* binding */ createServiceImplSpec; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/signals.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context-values.js */ \"./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Create a new HandlerContext.\n *\n * The context is usually automatically created by handlers, but if a service\n * implementation is used in unit tests, this function can be used to create\n * a context.\n */\nfunction createHandlerContext(init) {\n    var _a;\n    let timeoutMs;\n    if (init.timeoutMs !== undefined) {\n        const date = new Date(Date.now() + init.timeoutMs);\n        timeoutMs = () => date.getTime() - Date.now();\n    }\n    else {\n        timeoutMs = () => undefined;\n    }\n    const deadline = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createDeadlineSignal)(init.timeoutMs);\n    const abortController = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createLinkedAbortController)(deadline.signal, init.requestSignal, init.shutdownSignal);\n    return Object.assign(Object.assign({}, init), { signal: abortController.signal, timeoutMs, requestHeader: new Headers(init.requestHeader), responseHeader: new Headers(init.responseHeader), responseTrailer: new Headers(init.responseTrailer), abort(reason) {\n            deadline.cleanup();\n            abortController.abort(reason);\n        }, values: (_a = init.contextValues) !== null && _a !== void 0 ? _a : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_1__.createContextValues)() });\n}\n/**\n * Create an MethodImplSpec - a user-provided implementation for a method,\n * wrapped in a discriminated union type along with service and method metadata.\n */\nfunction createMethodImplSpec(service, method, impl) {\n    return {\n        kind: method.kind,\n        service,\n        method,\n        impl,\n    };\n}\n/**\n * Create an ServiceImplSpec - a user-provided service implementation wrapped\n * with metadata.\n */\nfunction createServiceImplSpec(service, impl) {\n    const s = { service, methods: {} };\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        let fn = impl[localName];\n        if (typeof fn == \"function\") {\n            fn = fn.bind(impl);\n        }\n        else {\n            const message = `${service.typeName}.${methodInfo.name} is not implemented`;\n            fn = function unimplemented() {\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented);\n            };\n        }\n        s.methods[localName] = createMethodImplSpec(service, methodInfo, fn);\n    }\n    return s;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbXBsZW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDRTtBQUNqQjtBQUMwRDtBQUNqQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBFQUFvQjtBQUN6Qyw0QkFBNEIsaUZBQTJCO0FBQ3ZELHlDQUF5QyxXQUFXO0FBQ3BEO0FBQ0E7QUFDQSxTQUFTLHFFQUFxRSx1RUFBbUIsSUFBSTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQixHQUFHLGlCQUFpQjtBQUNwRTtBQUNBLDBCQUEwQiwyREFBWSxVQUFVLDBDQUFJO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbXBsZW1lbnRhdGlvbi5qcz9hNDRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXRob2RLaW5kIH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuL2NvZGUuanNcIjtcbmltcG9ydCB7IGNyZWF0ZURlYWRsaW5lU2lnbmFsLCBjcmVhdGVMaW5rZWRBYm9ydENvbnRyb2xsZXIsIH0gZnJvbSBcIi4vcHJvdG9jb2wvc2lnbmFscy5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dFZhbHVlcyB9IGZyb20gXCIuL2NvbnRleHQtdmFsdWVzLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBIYW5kbGVyQ29udGV4dC5cbiAqXG4gKiBUaGUgY29udGV4dCBpcyB1c3VhbGx5IGF1dG9tYXRpY2FsbHkgY3JlYXRlZCBieSBoYW5kbGVycywgYnV0IGlmIGEgc2VydmljZVxuICogaW1wbGVtZW50YXRpb24gaXMgdXNlZCBpbiB1bml0IHRlc3RzLCB0aGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIGNyZWF0ZVxuICogYSBjb250ZXh0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSGFuZGxlckNvbnRleHQoaW5pdCkge1xuICAgIHZhciBfYTtcbiAgICBsZXQgdGltZW91dE1zO1xuICAgIGlmIChpbml0LnRpbWVvdXRNcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgaW5pdC50aW1lb3V0TXMpO1xuICAgICAgICB0aW1lb3V0TXMgPSAoKSA9PiBkYXRlLmdldFRpbWUoKSAtIERhdGUubm93KCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aW1lb3V0TXMgPSAoKSA9PiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGRlYWRsaW5lID0gY3JlYXRlRGVhZGxpbmVTaWduYWwoaW5pdC50aW1lb3V0TXMpO1xuICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlcihkZWFkbGluZS5zaWduYWwsIGluaXQucmVxdWVzdFNpZ25hbCwgaW5pdC5zaHV0ZG93blNpZ25hbCk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5pdCksIHsgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsLCB0aW1lb3V0TXMsIHJlcXVlc3RIZWFkZXI6IG5ldyBIZWFkZXJzKGluaXQucmVxdWVzdEhlYWRlciksIHJlc3BvbnNlSGVhZGVyOiBuZXcgSGVhZGVycyhpbml0LnJlc3BvbnNlSGVhZGVyKSwgcmVzcG9uc2VUcmFpbGVyOiBuZXcgSGVhZGVycyhpbml0LnJlc3BvbnNlVHJhaWxlciksIGFib3J0KHJlYXNvbikge1xuICAgICAgICAgICAgZGVhZGxpbmUuY2xlYW51cCgpO1xuICAgICAgICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KHJlYXNvbik7XG4gICAgICAgIH0sIHZhbHVlczogKF9hID0gaW5pdC5jb250ZXh0VmFsdWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBjcmVhdGVDb250ZXh0VmFsdWVzKCkgfSk7XG59XG4vKipcbiAqIENyZWF0ZSBhbiBNZXRob2RJbXBsU3BlYyAtIGEgdXNlci1wcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBmb3IgYSBtZXRob2QsXG4gKiB3cmFwcGVkIGluIGEgZGlzY3JpbWluYXRlZCB1bmlvbiB0eXBlIGFsb25nIHdpdGggc2VydmljZSBhbmQgbWV0aG9kIG1ldGFkYXRhLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWV0aG9kSW1wbFNwZWMoc2VydmljZSwgbWV0aG9kLCBpbXBsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogbWV0aG9kLmtpbmQsXG4gICAgICAgIHNlcnZpY2UsXG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgaW1wbCxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgYW4gU2VydmljZUltcGxTcGVjIC0gYSB1c2VyLXByb3ZpZGVkIHNlcnZpY2UgaW1wbGVtZW50YXRpb24gd3JhcHBlZFxuICogd2l0aCBtZXRhZGF0YS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlcnZpY2VJbXBsU3BlYyhzZXJ2aWNlLCBpbXBsKSB7XG4gICAgY29uc3QgcyA9IHsgc2VydmljZSwgbWV0aG9kczoge30gfTtcbiAgICBmb3IgKGNvbnN0IFtsb2NhbE5hbWUsIG1ldGhvZEluZm9dIG9mIE9iamVjdC5lbnRyaWVzKHNlcnZpY2UubWV0aG9kcykpIHtcbiAgICAgICAgbGV0IGZuID0gaW1wbFtsb2NhbE5hbWVdO1xuICAgICAgICBpZiAodHlwZW9mIGZuID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgZm4gPSBmbi5iaW5kKGltcGwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGAke3NlcnZpY2UudHlwZU5hbWV9LiR7bWV0aG9kSW5mby5uYW1lfSBpcyBub3QgaW1wbGVtZW50ZWRgO1xuICAgICAgICAgICAgZm4gPSBmdW5jdGlvbiB1bmltcGxlbWVudGVkKCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IobWVzc2FnZSwgQ29kZS5VbmltcGxlbWVudGVkKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcy5tZXRob2RzW2xvY2FsTmFtZV0gPSBjcmVhdGVNZXRob2RJbXBsU3BlYyhzZXJ2aWNlLCBtZXRob2RJbmZvLCBmbik7XG4gICAgfVxuICAgIHJldHVybiBzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/implementation.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: function() { return /* reexport safe */ _code_js__WEBPACK_IMPORTED_MODULE_1__.Code; },\n/* harmony export */   ConnectError: function() { return /* reexport safe */ _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError; },\n/* harmony export */   appendHeaders: function() { return /* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.appendHeaders; },\n/* harmony export */   cors: function() { return /* reexport safe */ _cors_js__WEBPACK_IMPORTED_MODULE_7__.cors; },\n/* harmony export */   createCallbackClient: function() { return /* reexport safe */ _callback_client_js__WEBPACK_IMPORTED_MODULE_3__.createCallbackClient; },\n/* harmony export */   createClient: function() { return /* reexport safe */ _promise_client_js__WEBPACK_IMPORTED_MODULE_4__.createClient; },\n/* harmony export */   createConnectRouter: function() { return /* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_5__.createConnectRouter; },\n/* harmony export */   createContextKey: function() { return /* reexport safe */ _context_values_js__WEBPACK_IMPORTED_MODULE_8__.createContextKey; },\n/* harmony export */   createContextValues: function() { return /* reexport safe */ _context_values_js__WEBPACK_IMPORTED_MODULE_8__.createContextValues; },\n/* harmony export */   createHandlerContext: function() { return /* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createHandlerContext; },\n/* harmony export */   createMethodImplSpec: function() { return /* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createMethodImplSpec; },\n/* harmony export */   createPromiseClient: function() { return /* reexport safe */ _promise_client_js__WEBPACK_IMPORTED_MODULE_4__.createPromiseClient; },\n/* harmony export */   createRouterTransport: function() { return /* reexport safe */ _router_transport_js__WEBPACK_IMPORTED_MODULE_10__.createRouterTransport; },\n/* harmony export */   createServiceImplSpec: function() { return /* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createServiceImplSpec; },\n/* harmony export */   decodeBinaryHeader: function() { return /* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.decodeBinaryHeader; },\n/* harmony export */   encodeBinaryHeader: function() { return /* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.encodeBinaryHeader; },\n/* harmony export */   makeAnyClient: function() { return /* reexport safe */ _any_client_js__WEBPACK_IMPORTED_MODULE_9__.makeAnyClient; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http-headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _callback_client_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./callback-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/callback-client.js\");\n/* harmony import */ var _promise_client_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./promise-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/promise-client.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./router.js */ \"./node_modules/@connectrpc/connect/dist/esm/router.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _cors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cors.js */ \"./node_modules/@connectrpc/connect/dist/esm/cors.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context-values.js */ \"./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./any-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _router_transport_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./router-transport.js */ \"./node_modules/@connectrpc/connect/dist/esm/router-transport.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n// Symbols above should be relevant to end users.\n// Symbols below should only be relevant for other libraries.\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0Q7QUFDakI7QUFDMEQ7QUFDL0I7QUFDWTtBQUN0QjtBQUNTO0FBQzFCO0FBQzJDO0FBQzVFO0FBQ0E7QUFDZ0Q7QUFDbUM7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vaW5kZXguanM/ZjMxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuZXhwb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4vY29ubmVjdC1lcnJvci5qc1wiO1xuZXhwb3J0IHsgQ29kZSB9IGZyb20gXCIuL2NvZGUuanNcIjtcbmV4cG9ydCB7IGVuY29kZUJpbmFyeUhlYWRlciwgZGVjb2RlQmluYXJ5SGVhZGVyLCBhcHBlbmRIZWFkZXJzLCB9IGZyb20gXCIuL2h0dHAtaGVhZGVycy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQ2FsbGJhY2tDbGllbnQgfSBmcm9tIFwiLi9jYWxsYmFjay1jbGllbnQuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUNsaWVudCwgY3JlYXRlUHJvbWlzZUNsaWVudCB9IGZyb20gXCIuL3Byb21pc2UtY2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVDb25uZWN0Um91dGVyIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVIYW5kbGVyQ29udGV4dCB9IGZyb20gXCIuL2ltcGxlbWVudGF0aW9uLmpzXCI7XG5leHBvcnQgeyBjb3JzIH0gZnJvbSBcIi4vY29ycy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQ29udGV4dEtleSwgY3JlYXRlQ29udGV4dFZhbHVlcyB9IGZyb20gXCIuL2NvbnRleHQtdmFsdWVzLmpzXCI7XG4vLyBTeW1ib2xzIGFib3ZlIHNob3VsZCBiZSByZWxldmFudCB0byBlbmQgdXNlcnMuXG4vLyBTeW1ib2xzIGJlbG93IHNob3VsZCBvbmx5IGJlIHJlbGV2YW50IGZvciBvdGhlciBsaWJyYXJpZXMuXG5leHBvcnQgeyBtYWtlQW55Q2xpZW50IH0gZnJvbSBcIi4vYW55LWNsaWVudC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlU2VydmljZUltcGxTcGVjLCBjcmVhdGVNZXRob2RJbXBsU3BlYywgfSBmcm9tIFwiLi9pbXBsZW1lbnRhdGlvbi5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlUm91dGVyVHJhbnNwb3J0IH0gZnJvbSBcIi4vcm91dGVyLXRyYW5zcG9ydC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/interceptor.js":
/*!******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/interceptor.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyInterceptors: function() { return /* binding */ applyInterceptors; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    var _a;\n    return ((_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n), next)) !== null && _a !== void 0 ? _a : next);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbnRlcmNlcHRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2ludGVyY2VwdG9yLmpzPzk1ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogYXBwbHlJbnRlcmNlcHRvcnMgdGFrZXMgdGhlIGdpdmVuIFVuYXJ5Rm4gb3IgU2VydmVyU3RyZWFtaW5nRm4sIGFuZCB3cmFwc1xuICogaXQgd2l0aCBlYWNoIG9mIHRoZSBnaXZlbiBpbnRlcmNlcHRvcnMsIHJldHVybmluZyBhIG5ldyBVbmFyeUZuIG9yXG4gKiBTZXJ2ZXJTdHJlYW1pbmdGbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5SW50ZXJjZXB0b3JzKG5leHQsIGludGVyY2VwdG9ycykge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gKChfYSA9IGludGVyY2VwdG9ycyA9PT0gbnVsbCB8fCBpbnRlcmNlcHRvcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyY2VwdG9ycy5jb25jYXQoKS5yZXZlcnNlKCkucmVkdWNlKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgKG4sIGkpID0+IGkobiksIG5leHQpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXh0KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/interceptor.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/promise-client.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/promise-client.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBiDiStreamingFn: function() { return /* binding */ createBiDiStreamingFn; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   createClientStreamingFn: function() { return /* binding */ createClientStreamingFn; },\n/* harmony export */   createPromiseClient: function() { return /* binding */ createPromiseClient; },\n/* harmony export */   createServerStreamingFn: function() { return /* binding */ createServerStreamingFn; },\n/* harmony export */   createUnaryFn: function() { return /* binding */ createUnaryFn; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./any-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Client for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createClient(service, transport) {\n    return (0,_any_client_js__WEBPACK_IMPORTED_MODULE_0__.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ClientStreaming:\n                return createClientStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.BiDiStreaming:\n                return createBiDiStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\n/**\n * @deprecated use createClient.\n */\nfunction createPromiseClient(service, transport) {\n    return createClient(service, transport);\n}\nfunction createUnaryFn(transport, service, method) {\n    return async function (input, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([input]), options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction createClientStreamingFn(transport, service, method) {\n    return async function (request, options) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n        let singleMessage;\n        let count = 0;\n        try {\n            for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n                _c = _h.value;\n                _f = false;\n                const message = _c;\n                singleMessage = message;\n                count++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!singleMessage) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing response message\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        if (count > 1) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra messages for client streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n        return singleMessage;\n    };\n}\nfunction createBiDiStreamingFn(transport, service, method) {\n    return function (request, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction handleStreamResponse(stream, options) {\n    const it = (function () {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, _b;\n            const response = yield __await(stream);\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            yield __await(yield* __asyncDelegator(__asyncValues(response.message)));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        });\n    })()[Symbol.asyncIterator]();\n    // Create a new iterable to omit throw/return.\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next: () => it.next(),\n        }),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/promise-client.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromString: function() { return /* binding */ codeFromString; },\n/* harmony export */   codeToString: function() { return /* binding */ codeToString; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * codeToString returns the string representation of a Code.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToString(value) {\n    const name = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code[value];\n    if (typeof name != \"string\") {\n        return value.toString();\n    }\n    return (name[0].toLowerCase() +\n        name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase()));\n}\nlet stringToCode;\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromString(value) {\n    if (!stringToCode) {\n        stringToCode = {};\n        for (const value of Object.values(_code_js__WEBPACK_IMPORTED_MODULE_0__.Code)) {\n            if (typeof value == \"string\") {\n                continue;\n            }\n            stringToCode[codeToString(value)] = value;\n        }\n    }\n    return stringToCode[value];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvZGUtc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQiwwQ0FBSTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQ0FBMEMsMENBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvZGUtc3RyaW5nLmpzPzc0YzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBjb2RlVG9TdHJpbmcgcmV0dXJucyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgQ29kZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVUb1N0cmluZyh2YWx1ZSkge1xuICAgIGNvbnN0IG5hbWUgPSBDb2RlW3ZhbHVlXTtcbiAgICBpZiAodHlwZW9mIG5hbWUgIT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIChuYW1lWzBdLnRvTG93ZXJDYXNlKCkgK1xuICAgICAgICBuYW1lLnN1YnN0cmluZygxKS5yZXBsYWNlKC9bQS1aXS9nLCAoYykgPT4gXCJfXCIgKyBjLnRvTG93ZXJDYXNlKCkpKTtcbn1cbmxldCBzdHJpbmdUb0NvZGU7XG4vKipcbiAqIGNvZGVGcm9tU3RyaW5nIHBhcnNlcyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgQ29kZSBpbiBzbmFrZV9jYXNlLlxuICogRm9yIGV4YW1wbGUsIHRoZSBzdHJpbmcgXCJwZXJtaXNzaW9uX2RlbmllZFwiIHBhcnNlcyBpbnRvIENvZGUuUGVybWlzc2lvbkRlbmllZC5cbiAqXG4gKiBJZiB0aGUgZ2l2ZW4gc3RyaW5nIGNhbm5vdCBiZSBwYXJzZWQsIHRoZSBmdW5jdGlvbiByZXR1cm5zIHVuZGVmaW5lZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVGcm9tU3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKCFzdHJpbmdUb0NvZGUpIHtcbiAgICAgICAgc3RyaW5nVG9Db2RlID0ge307XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgT2JqZWN0LnZhbHVlcyhDb2RlKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdHJpbmdUb0NvZGVbY29kZVRvU3RyaW5nKHZhbHVlKV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nVG9Db2RlW3ZhbHVlXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeRegExp: function() { return /* binding */ contentTypeRegExp; },\n/* harmony export */   contentTypeStreamJson: function() { return /* binding */ contentTypeStreamJson; },\n/* harmony export */   contentTypeStreamProto: function() { return /* binding */ contentTypeStreamProto; },\n/* harmony export */   contentTypeStreamRegExp: function() { return /* binding */ contentTypeStreamRegExp; },\n/* harmony export */   contentTypeUnaryJson: function() { return /* binding */ contentTypeUnaryJson; },\n/* harmony export */   contentTypeUnaryProto: function() { return /* binding */ contentTypeUnaryProto; },\n/* harmony export */   contentTypeUnaryRegExp: function() { return /* binding */ contentTypeUnaryRegExp; },\n/* harmony export */   parseContentType: function() { return /* binding */ parseContentType; },\n/* harmony export */   parseEncodingQuery: function() { return /* binding */ parseEncodingQuery; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid Connect Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/(connect\\+)?(?:(json)(?:; ?charset=utf-?8)?|(proto))$/i;\n/**\n * Regular Expression that matches a Connect unary Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeUnaryRegExp = /^application\\/(?:json(?:; ?charset=utf-?8)?|proto)$/i;\n/**\n * Regular Expression that matches a Connect streaming Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeStreamRegExp = /^application\\/connect\\+?(?:json(?:; ?charset=utf-?8)?|proto)$/i;\nconst contentTypeUnaryProto = \"application/proto\";\nconst contentTypeUnaryJson = \"application/json\";\nconst contentTypeStreamProto = \"application/connect+proto\";\nconst contentTypeStreamJson = \"application/connect+json\";\nconst encodingProto = \"proto\";\nconst encodingJson = \"json\";\n/**\n * Parse a Connect Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const stream = !!match[1];\n    const binary = !!match[3];\n    return { stream, binary };\n}\n/**\n * Parse a Connect Get encoding query parameter.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseEncodingQuery(encoding) {\n    switch (encoding) {\n        case encodingProto:\n            return { stream: false, binary: true };\n        case encodingJson:\n            return { stream: false, binary: false };\n        default:\n            return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtRUFBbUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBEQUEwRDtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9jb250ZW50LXR5cGUuanM/NDBkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGFueSB2YWxpZCBDb25uZWN0IENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVJlZ0V4cCA9IC9eYXBwbGljYXRpb25cXC8oY29ubmVjdFxcKyk/KD86KGpzb24pKD86OyA/Y2hhcnNldD11dGYtPzgpP3wocHJvdG8pKSQvaTtcbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhIENvbm5lY3QgdW5hcnkgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlVW5hcnlSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvKD86anNvbig/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pJC9pO1xuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGEgQ29ubmVjdCBzdHJlYW1pbmcgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlU3RyZWFtUmVnRXhwID0gL15hcHBsaWNhdGlvblxcL2Nvbm5lY3RcXCs/KD86anNvbig/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pJC9pO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlVW5hcnlQcm90byA9IFwiYXBwbGljYXRpb24vcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVVuYXJ5SnNvbiA9IFwiYXBwbGljYXRpb24vanNvblwiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlU3RyZWFtUHJvdG8gPSBcImFwcGxpY2F0aW9uL2Nvbm5lY3QrcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVN0cmVhbUpzb24gPSBcImFwcGxpY2F0aW9uL2Nvbm5lY3QranNvblwiO1xuY29uc3QgZW5jb2RpbmdQcm90byA9IFwicHJvdG9cIjtcbmNvbnN0IGVuY29kaW5nSnNvbiA9IFwianNvblwiO1xuLyoqXG4gKiBQYXJzZSBhIENvbm5lY3QgQ29udGVudC1UeXBlIGhlYWRlci5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29udGVudFR5cGUoY29udGVudFR5cGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50VHlwZS5tYXRjaChjb250ZW50VHlwZVJlZ0V4cCk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBzdHJlYW0gPSAhIW1hdGNoWzFdO1xuICAgIGNvbnN0IGJpbmFyeSA9ICEhbWF0Y2hbM107XG4gICAgcmV0dXJuIHsgc3RyZWFtLCBiaW5hcnkgfTtcbn1cbi8qKlxuICogUGFyc2UgYSBDb25uZWN0IEdldCBlbmNvZGluZyBxdWVyeSBwYXJhbWV0ZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUVuY29kaW5nUXVlcnkoZW5jb2RpbmcpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICAgIGNhc2UgZW5jb2RpbmdQcm90bzpcbiAgICAgICAgICAgIHJldHVybiB7IHN0cmVhbTogZmFsc2UsIGJpbmFyeTogdHJ1ZSB9O1xuICAgICAgICBjYXNlIGVuY29kaW5nSnNvbjpcbiAgICAgICAgICAgIHJldHVybiB7IHN0cmVhbTogZmFsc2UsIGJpbmFyeTogZmFsc2UgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEndStreamSerialization: function() { return /* binding */ createEndStreamSerialization; },\n/* harmony export */   endStreamFlag: function() { return /* binding */ endStreamFlag; },\n/* harmony export */   endStreamFromJson: function() { return /* binding */ endStreamFromJson; },\n/* harmony export */   endStreamToJson: function() { return /* binding */ endStreamToJson; }\n/* harmony export */ });\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error-json.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * endStreamFlag indicates that the data in a EnvelopedMessage\n * is a EndStreamResponse of the Connect protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst endStreamFlag = 0b00000010;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n * Throws a ConnectError on malformed input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamFromJson(data) {\n    const parseErr = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid end stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unknown);\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(typeof data == \"string\" ? data : new TextDecoder().decode(data));\n    }\n    catch (e) {\n        throw parseErr;\n    }\n    if (typeof jsonValue != \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw parseErr;\n    }\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" ||\n            jsonValue.metadata == null ||\n            Array.isArray(jsonValue.metadata)) {\n            throw parseErr;\n        }\n        for (const [key, values] of Object.entries(jsonValue.metadata)) {\n            if (!Array.isArray(values) ||\n                values.some((value) => typeof value != \"string\")) {\n                throw parseErr;\n            }\n            for (const value of values) {\n                metadata.append(key, value);\n            }\n        }\n    }\n    const error = \"error\" in jsonValue && jsonValue.error != null\n        ? (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorFromJson)(jsonValue.error, metadata, parseErr)\n        : undefined;\n    return { metadata, error };\n}\n/**\n * Serialize the given EndStreamResponse to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation of error details if the detail uses\n * google.protobuf.Any.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamToJson(metadata, error, jsonWriteOptions) {\n    const es = {};\n    if (error !== undefined) {\n        es.error = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorToJson)(error, jsonWriteOptions);\n        metadata = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.appendHeaders)(metadata, error.metadata);\n    }\n    let hasMetadata = false;\n    const md = {};\n    metadata.forEach((value, key) => {\n        hasMetadata = true;\n        md[key] = [value];\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (hasMetadata) {\n        es.metadata = md;\n    }\n    return es;\n}\n/**\n * Create a Serialization object that serializes a Connect EndStreamResponse.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEndStreamSerialization(options) {\n    const textEncoder = new TextEncoder();\n    return {\n        serialize(data) {\n            try {\n                const jsonObject = endStreamToJson(data.metadata, data.error, options);\n                const jsonString = JSON.stringify(jsonObject);\n                return textEncoder.encode(jsonString);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to serialize EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n            }\n        },\n        parse(data) {\n            try {\n                return endStreamFromJson(data);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to parse EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2VuZC1zdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2RDtBQUNWO0FBQ0E7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHlCQUF5QiwyREFBWSx1QkFBdUIsMENBQUk7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDZEQUFhO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwyREFBVztBQUM5QixtQkFBbUIsK0RBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLDJDQUEyQyxFQUFFLEdBQUcsMENBQUk7QUFDMUY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLHVDQUF1QyxFQUFFLEdBQUcsMENBQUk7QUFDdEY7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2VuZC1zdHJlYW0uanM/ZjczOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgZXJyb3JGcm9tSnNvbiwgZXJyb3JUb0pzb24gfSBmcm9tIFwiLi9lcnJvci1qc29uLmpzXCI7XG5pbXBvcnQgeyBhcHBlbmRIZWFkZXJzIH0gZnJvbSBcIi4uL2h0dHAtaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBlbmRTdHJlYW1GbGFnIGluZGljYXRlcyB0aGF0IHRoZSBkYXRhIGluIGEgRW52ZWxvcGVkTWVzc2FnZVxuICogaXMgYSBFbmRTdHJlYW1SZXNwb25zZSBvZiB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGVuZFN0cmVhbUZsYWcgPSAwYjAwMDAwMDEwO1xuLyoqXG4gKiBQYXJzZSBhbiBFbmRTdHJlYW1SZXNwb25zZSBvZiB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciBvbiBtYWxmb3JtZWQgaW5wdXQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmRTdHJlYW1Gcm9tSnNvbihkYXRhKSB7XG4gICAgY29uc3QgcGFyc2VFcnIgPSBuZXcgQ29ubmVjdEVycm9yKFwiaW52YWxpZCBlbmQgc3RyZWFtXCIsIENvZGUuVW5rbm93bik7XG4gICAgbGV0IGpzb25WYWx1ZTtcbiAgICB0cnkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hc3NpZ25tZW50XG4gICAgICAgIGpzb25WYWx1ZSA9IEpTT04ucGFyc2UodHlwZW9mIGRhdGEgPT0gXCJzdHJpbmdcIiA/IGRhdGEgOiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSkpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBwYXJzZUVycjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqc29uVmFsdWUgIT0gXCJvYmplY3RcIiB8fFxuICAgICAgICBqc29uVmFsdWUgPT0gbnVsbCB8fFxuICAgICAgICBBcnJheS5pc0FycmF5KGpzb25WYWx1ZSkpIHtcbiAgICAgICAgdGhyb3cgcGFyc2VFcnI7XG4gICAgfVxuICAgIGNvbnN0IG1ldGFkYXRhID0gbmV3IEhlYWRlcnMoKTtcbiAgICBpZiAoXCJtZXRhZGF0YVwiIGluIGpzb25WYWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIGpzb25WYWx1ZS5tZXRhZGF0YSAhPSBcIm9iamVjdFwiIHx8XG4gICAgICAgICAgICBqc29uVmFsdWUubWV0YWRhdGEgPT0gbnVsbCB8fFxuICAgICAgICAgICAgQXJyYXkuaXNBcnJheShqc29uVmFsdWUubWV0YWRhdGEpKSB7XG4gICAgICAgICAgICB0aHJvdyBwYXJzZUVycjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgT2JqZWN0LmVudHJpZXMoanNvblZhbHVlLm1ldGFkYXRhKSkge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykgfHxcbiAgICAgICAgICAgICAgICB2YWx1ZXMuc29tZSgodmFsdWUpID0+IHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSkge1xuICAgICAgICAgICAgICAgIHRocm93IHBhcnNlRXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YS5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZXJyb3IgPSBcImVycm9yXCIgaW4ganNvblZhbHVlICYmIGpzb25WYWx1ZS5lcnJvciAhPSBudWxsXG4gICAgICAgID8gZXJyb3JGcm9tSnNvbihqc29uVmFsdWUuZXJyb3IsIG1ldGFkYXRhLCBwYXJzZUVycilcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHsgbWV0YWRhdGEsIGVycm9yIH07XG59XG4vKipcbiAqIFNlcmlhbGl6ZSB0aGUgZ2l2ZW4gRW5kU3RyZWFtUmVzcG9uc2UgdG8gSlNPTi5cbiAqXG4gKiBUaGUgSlNPTiBzZXJpYWxpemF0aW9uIG9wdGlvbnMgYXJlIHJlcXVpcmVkIHRvIHByb2R1Y2UgdGhlIG9wdGlvbmFsXG4gKiBodW1hbi1yZWFkYWJsZSByZXByZXNlbnRhdGlvbiBvZiBlcnJvciBkZXRhaWxzIGlmIHRoZSBkZXRhaWwgdXNlc1xuICogZ29vZ2xlLnByb3RvYnVmLkFueS5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9jb25uZWN0cnBjLmNvbS9kb2NzL3Byb3RvY29sI2Vycm9yLWVuZC1zdHJlYW1cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuZFN0cmVhbVRvSnNvbihtZXRhZGF0YSwgZXJyb3IsIGpzb25Xcml0ZU9wdGlvbnMpIHtcbiAgICBjb25zdCBlcyA9IHt9O1xuICAgIGlmIChlcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGVzLmVycm9yID0gZXJyb3JUb0pzb24oZXJyb3IsIGpzb25Xcml0ZU9wdGlvbnMpO1xuICAgICAgICBtZXRhZGF0YSA9IGFwcGVuZEhlYWRlcnMobWV0YWRhdGEsIGVycm9yLm1ldGFkYXRhKTtcbiAgICB9XG4gICAgbGV0IGhhc01ldGFkYXRhID0gZmFsc2U7XG4gICAgY29uc3QgbWQgPSB7fTtcbiAgICBtZXRhZGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGhhc01ldGFkYXRhID0gdHJ1ZTtcbiAgICAgICAgbWRba2V5XSA9IFt2YWx1ZV07XG4gICAgfSk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb25cbiAgICBpZiAoaGFzTWV0YWRhdGEpIHtcbiAgICAgICAgZXMubWV0YWRhdGEgPSBtZDtcbiAgICB9XG4gICAgcmV0dXJuIGVzO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBTZXJpYWxpemF0aW9uIG9iamVjdCB0aGF0IHNlcmlhbGl6ZXMgYSBDb25uZWN0IEVuZFN0cmVhbVJlc3BvbnNlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRW5kU3RyZWFtU2VyaWFsaXphdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uT2JqZWN0ID0gZW5kU3RyZWFtVG9Kc29uKGRhdGEubWV0YWRhdGEsIGRhdGEuZXJyb3IsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGpzb25TdHJpbmcgPSBKU09OLnN0cmluZ2lmeShqc29uT2JqZWN0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dEVuY29kZXIuZW5jb2RlKGpzb25TdHJpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtID0gZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYGZhaWxlZCB0byBzZXJpYWxpemUgRW5kU3RyZWFtUmVzcG9uc2U6ICR7bX1gLCBDb2RlLkludGVybmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2UoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5kU3RyZWFtRnJvbUpzb24oZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG0gPSBlIGluc3RhbmNlb2YgRXJyb3IgPyBlLm1lc3NhZ2UgOiBTdHJpbmcoZSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgZmFpbGVkIHRvIHBhcnNlIEVuZFN0cmVhbVJlc3BvbnNlOiAke219YCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorFromJson: function() { return /* binding */ errorFromJson; },\n/* harmony export */   errorFromJsonBytes: function() { return /* binding */ errorFromJsonBytes; },\n/* harmony export */   errorToJson: function() { return /* binding */ errorToJson; },\n/* harmony export */   errorToJsonBytes: function() { return /* binding */ errorToJsonBytes; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code-string.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n\n\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJson(jsonValue, metadata, fallback) {\n    var _a;\n    if (metadata) {\n        new Headers(metadata).forEach((value, key) => fallback.metadata.append(key, value));\n    }\n    if (typeof jsonValue !== \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw fallback;\n    }\n    let code = fallback.code;\n    if (\"code\" in jsonValue && typeof jsonValue.code === \"string\") {\n        code = (_a = (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeFromString)(jsonValue.code)) !== null && _a !== void 0 ? _a : code;\n    }\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") {\n        throw fallback;\n    }\n    const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(message !== null && message !== void 0 ? message : \"\", code, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) {\n        for (const detail of jsonValue.details) {\n            if (detail === null ||\n                typeof detail != \"object\" ||\n                Array.isArray(detail) ||\n                typeof detail.type != \"string\" ||\n                typeof detail.value != \"string\") {\n                throw fallback;\n            }\n            try {\n                error.details.push({\n                    type: detail.type,\n                    value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.dec(detail.value),\n                    debug: detail.debug,\n                });\n            }\n            catch (e) {\n                throw fallback;\n            }\n        }\n    }\n    return error;\n}\n/**\n * Parse a Connect error from a serialized JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJsonBytes(bytes, metadata, fallback) {\n    let jsonValue;\n    try {\n        jsonValue = JSON.parse(new TextDecoder().decode(bytes));\n    }\n    catch (e) {\n        throw fallback;\n    }\n    return errorFromJson(jsonValue, metadata, fallback);\n}\n/**\n * Serialize the given error to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation in the \"debug\" key if the detail uses\n * google.protobuf.Any. If serialization of the \"debug\" value fails, it\n * is silently disregarded.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJson(error, jsonWriteOptions) {\n    const o = {\n        code: (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeToString)(error.code),\n    };\n    if (error.rawMessage.length > 0) {\n        o.message = error.rawMessage;\n    }\n    if (error.details.length > 0) {\n        o.details = error.details\n            .map((value) => {\n            if (\"getType\" in value) {\n                const i = {\n                    type: value.getType().typeName,\n                    value: value.toBinary(),\n                };\n                try {\n                    i.debug = value.toJson(jsonWriteOptions);\n                }\n                catch (e) {\n                    // We deliberately ignore errors that may occur when serializing\n                    // a message to JSON (the message contains an Any).\n                    // The rationale is that we are only trying to provide optional\n                    // debug information.\n                }\n                return i;\n            }\n            return value;\n        })\n            .map((_a) => {\n            var { value } = _a, rest = __rest(_a, [\"value\"]);\n            return (Object.assign(Object.assign({}, rest), { value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.enc(value).replace(/=+$/, \"\") }));\n        });\n    }\n    return o;\n}\n/**\n * Serialize the given error to JSON. This calls errorToJson(), but stringifies\n * the result, and converts it into a UInt8Array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJsonBytes(error, jsonWriteOptions) {\n    const textEncoder = new TextEncoder();\n    try {\n        const jsonObject = errorToJson(error, jsonWriteOptions);\n        const jsonString = JSON.stringify(jsonObject);\n        return textEncoder.encode(jsonString);\n    }\n    catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`failed to serialize Connect Error: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformConnectPostToGetRequest: function() { return /* binding */ transformConnectPostToGetRequest; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\nconst contentTypePrefix = \"application/\";\nfunction encodeMessageForUrl(message, useBase64) {\n    if (useBase64) {\n        // TODO(jchadwick-buf): Three regex replaces seems excessive.\n        // Can we make protoBase64.enc more flexible?\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64\n            .enc(message)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/=+$/, \"\");\n    }\n    else {\n        return encodeURIComponent(new TextDecoder().decode(message));\n    }\n}\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformConnectPostToGetRequest(request, message, useBase64) {\n    let query = `?connect=v${_version_js__WEBPACK_IMPORTED_MODULE_1__.protocolVersion}`;\n    const contentType = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType);\n    if ((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(contentTypePrefix)) === 0) {\n        query +=\n            \"&encoding=\" +\n                encodeURIComponent(contentType.slice(contentTypePrefix.length));\n    }\n    const compression = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding);\n    if (compression !== null && compression !== \"identity\") {\n        query += \"&compression=\" + encodeURIComponent(compression);\n        // Force base64 for compressed payloads.\n        useBase64 = true;\n    }\n    if (useBase64) {\n        query += \"&base64=1\";\n    }\n    query += \"&message=\" + encodeMessageForUrl(message, useBase64);\n    const url = request.url + query;\n    // Omit headers that are not used for unary GET requests.\n    const header = new Headers(request.header);\n    [\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerProtocolVersion,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryContentLength,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryAcceptEncoding,\n    ].forEach((h) => header.delete(h));\n    return Object.assign(Object.assign({}, request), { init: Object.assign(Object.assign({}, request.init), { method: \"GET\" }), url,\n        header });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2dldC1yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRDtBQUN5RjtBQUNwRztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyREFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDZCQUE2Qix3REFBZSxDQUFDO0FBQzdDLDJDQUEyQywwREFBaUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyw0REFBbUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFxQjtBQUM3QixRQUFRLDBEQUFpQjtBQUN6QixRQUFRLGlFQUF3QjtBQUNoQyxRQUFRLDREQUFtQjtBQUMzQixRQUFRLGtFQUF5QjtBQUNqQztBQUNBLHlDQUF5QyxjQUFjLG9DQUFvQyxtQkFBbUIsZUFBZTtBQUM3SCxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9nZXQtcmVxdWVzdC5qcz9jZThjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlLCBwcm90b0Jhc2U2NCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJQcm90b2NvbFZlcnNpb24sIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIGhlYWRlclVuYXJ5Q29udGVudExlbmd0aCwgaGVhZGVyVW5hcnlFbmNvZGluZywgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG5pbXBvcnQgeyBwcm90b2NvbFZlcnNpb24gfSBmcm9tIFwiLi92ZXJzaW9uLmpzXCI7XG5jb25zdCBjb250ZW50VHlwZVByZWZpeCA9IFwiYXBwbGljYXRpb24vXCI7XG5mdW5jdGlvbiBlbmNvZGVNZXNzYWdlRm9yVXJsKG1lc3NhZ2UsIHVzZUJhc2U2NCkge1xuICAgIGlmICh1c2VCYXNlNjQpIHtcbiAgICAgICAgLy8gVE9ETyhqY2hhZHdpY2stYnVmKTogVGhyZWUgcmVnZXggcmVwbGFjZXMgc2VlbXMgZXhjZXNzaXZlLlxuICAgICAgICAvLyBDYW4gd2UgbWFrZSBwcm90b0Jhc2U2NC5lbmMgbW9yZSBmbGV4aWJsZT9cbiAgICAgICAgcmV0dXJuIHByb3RvQmFzZTY0XG4gICAgICAgICAgICAuZW5jKG1lc3NhZ2UpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFwrL2csIFwiLVwiKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcLy9nLCBcIl9cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC89KyQvLCBcIlwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQobmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKG1lc3NhZ2UpKTtcbiAgICB9XG59XG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtQ29ubmVjdFBvc3RUb0dldFJlcXVlc3QocmVxdWVzdCwgbWVzc2FnZSwgdXNlQmFzZTY0KSB7XG4gICAgbGV0IHF1ZXJ5ID0gYD9jb25uZWN0PXYke3Byb3RvY29sVmVyc2lvbn1gO1xuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxdWVzdC5oZWFkZXIuZ2V0KGhlYWRlckNvbnRlbnRUeXBlKTtcbiAgICBpZiAoKGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50VHlwZS5pbmRleE9mKGNvbnRlbnRUeXBlUHJlZml4KSkgPT09IDApIHtcbiAgICAgICAgcXVlcnkgKz1cbiAgICAgICAgICAgIFwiJmVuY29kaW5nPVwiICtcbiAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoY29udGVudFR5cGUuc2xpY2UoY29udGVudFR5cGVQcmVmaXgubGVuZ3RoKSk7XG4gICAgfVxuICAgIGNvbnN0IGNvbXByZXNzaW9uID0gcmVxdWVzdC5oZWFkZXIuZ2V0KGhlYWRlclVuYXJ5RW5jb2RpbmcpO1xuICAgIGlmIChjb21wcmVzc2lvbiAhPT0gbnVsbCAmJiBjb21wcmVzc2lvbiAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIHF1ZXJ5ICs9IFwiJmNvbXByZXNzaW9uPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGNvbXByZXNzaW9uKTtcbiAgICAgICAgLy8gRm9yY2UgYmFzZTY0IGZvciBjb21wcmVzc2VkIHBheWxvYWRzLlxuICAgICAgICB1c2VCYXNlNjQgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodXNlQmFzZTY0KSB7XG4gICAgICAgIHF1ZXJ5ICs9IFwiJmJhc2U2ND0xXCI7XG4gICAgfVxuICAgIHF1ZXJ5ICs9IFwiJm1lc3NhZ2U9XCIgKyBlbmNvZGVNZXNzYWdlRm9yVXJsKG1lc3NhZ2UsIHVzZUJhc2U2NCk7XG4gICAgY29uc3QgdXJsID0gcmVxdWVzdC51cmwgKyBxdWVyeTtcbiAgICAvLyBPbWl0IGhlYWRlcnMgdGhhdCBhcmUgbm90IHVzZWQgZm9yIHVuYXJ5IEdFVCByZXF1ZXN0cy5cbiAgICBjb25zdCBoZWFkZXIgPSBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcik7XG4gICAgW1xuICAgICAgICBoZWFkZXJQcm90b2NvbFZlcnNpb24sXG4gICAgICAgIGhlYWRlckNvbnRlbnRUeXBlLFxuICAgICAgICBoZWFkZXJVbmFyeUNvbnRlbnRMZW5ndGgsXG4gICAgICAgIGhlYWRlclVuYXJ5RW5jb2RpbmcsXG4gICAgICAgIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsXG4gICAgXS5mb3JFYWNoKChoKSA9PiBoZWFkZXIuZGVsZXRlKGgpKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0KSwgeyBpbml0OiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlcXVlc3QuaW5pdCksIHsgbWV0aG9kOiBcIkdFVFwiIH0pLCB1cmwsXG4gICAgICAgIGhlYWRlciB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: function() { return /* binding */ createHandlerFactory; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./end-stream.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./error-json.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parse-timeout.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./query-params.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./trailer-mux.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/compression.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../protocol/universal.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"connect\";\nconst methodPost = \"POST\";\nconst methodGet = \"GET\";\n/**\n * Create a factory that creates Connect handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_1__.createEndStreamSerialization)(opt.jsonOptions);\n    function fact(spec) {\n        let h;\n        let contentTypeRegExp;\n        const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n        switch (spec.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.Unary:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryRegExp;\n                h = createUnaryHandler(opt, spec, serialization);\n                break;\n            default:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamRegExp;\n                h = createStreamHandler(opt, spec, serialization, endStreamSerialization);\n                break;\n        }\n        const allowedMethods = [methodPost];\n        if (spec.method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            allowedMethods.push(methodGet);\n        }\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(contentTypeRegExp),\n            allowedMethods,\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createUnaryHandler(opt, spec, serialization) {\n    return async function handle(req) {\n        const isGet = req.method == methodGet;\n        if (isGet && spec.method.idempotency != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const queryParams = new URL(req.url).searchParams;\n        const compressionRequested = isGet\n            ? queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramCompression)\n            : req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding);\n        const type = isGet\n            ? (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseEncodingQuery)(queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramEncoding))\n            : (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, compressionRequested, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding);\n        let status = _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk.status;\n        let body;\n        try {\n            if (opt.requireConnectProtocolHeader) {\n                if (isGet) {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionParam)(queryParams);\n                }\n                else {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n                }\n            }\n            // raise compression error to serialize it as a error response\n            if (compression.error) {\n                throw compression.error;\n            }\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) {\n                throw timeout.error;\n            }\n            let reqBody;\n            if (isGet) {\n                reqBody = await readUnaryMessageFromQuery(opt.readMaxBytes, compression.request, queryParams);\n            }\n            else {\n                reqBody = await readUnaryMessageFromBody(opt.readMaxBytes, compression.request, req);\n            }\n            const input = parseUnaryMessage(spec.method, type.binary, serialization, reqBody);\n            const output = await (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.invokeUnaryImplementation)(spec, context, input, opt.interceptors);\n            body = serialization.getO(type.binary).serialize(output);\n        }\n        catch (e) {\n            let error;\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                error = e;\n            }\n            else {\n                error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            status = (0,_http_status_js__WEBPACK_IMPORTED_MODULE_17__.codeToHttpStatus)(error.code);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType, _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson);\n            error.metadata.forEach((value, key) => {\n                context.responseHeader.set(key, value);\n            });\n            body = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_18__.errorToJsonBytes)(error, opt.jsonOptions);\n        }\n        finally {\n            context.abort();\n        }\n        if (compression.response && body.byteLength >= opt.compressMinBytes) {\n            body = await compression.response.compress(body);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding, compression.response.name);\n        }\n        const header = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__.trailerMux)(context.responseHeader, context.responseTrailer);\n        header.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength, body.byteLength.toString(10));\n        return {\n            status,\n            body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.createAsyncIterable)([body]),\n            header,\n        };\n    };\n}\nasync function readUnaryMessageFromBody(readMaxBytes, compression, request) {\n    if (typeof request.body == \"object\" &&\n        request.body !== null &&\n        Symbol.asyncIterator in request.body) {\n        let reqBytes = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.readAllBytes)(request.body, readMaxBytes, request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength));\n        if (compression) {\n            reqBytes = await compression.decompress(reqBytes, readMaxBytes);\n        }\n        return reqBytes;\n    }\n    return request.body;\n}\nasync function readUnaryMessageFromQuery(readMaxBytes, compression, queryParams) {\n    var _a;\n    const base64 = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramBase64);\n    const message = (_a = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramMessage)) !== null && _a !== void 0 ? _a : \"\";\n    let decoded;\n    if (base64 === \"1\") {\n        decoded = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.protoBase64.dec(message);\n    }\n    else {\n        decoded = new TextEncoder().encode(message);\n    }\n    if (compression) {\n        decoded = await compression.decompress(decoded, readMaxBytes);\n    }\n    return decoded;\n}\nfunction parseUnaryMessage(method, useBinaryFormat, serialization, input) {\n    if (input instanceof Uint8Array) {\n        return serialization.getI(useBinaryFormat).parse(input);\n    }\n    if (useBinaryFormat) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"received parsed JSON request body, but content-type indicates binary format\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal);\n    }\n    try {\n        return method.I.fromJson(input);\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.InvalidArgument);\n    }\n}\nfunction createStreamHandler(opt, spec, serialization, endStreamSerialization) {\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || !type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformPrepend)(() => {\n            if (opt.requireConnectProtocolHeader) {\n                (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n            }\n            // raise compression error to serialize it as the end stream response\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformParseEnvelope)(serialization.getI(type.binary), _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCatchFinally)((e) => {\n            context.abort();\n            const end = {\n                metadata: context.responseTrailer,\n            };\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                end.error = e;\n            }\n            else if (e !== undefined) {\n                end.error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            return {\n                flags: _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag,\n                data: endStreamSerialization.serialize(end),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerContentType: function() { return /* binding */ headerContentType; },\n/* harmony export */   headerProtocolVersion: function() { return /* binding */ headerProtocolVersion; },\n/* harmony export */   headerStreamAcceptEncoding: function() { return /* binding */ headerStreamAcceptEncoding; },\n/* harmony export */   headerStreamEncoding: function() { return /* binding */ headerStreamEncoding; },\n/* harmony export */   headerTimeout: function() { return /* binding */ headerTimeout; },\n/* harmony export */   headerUnaryAcceptEncoding: function() { return /* binding */ headerUnaryAcceptEncoding; },\n/* harmony export */   headerUnaryContentLength: function() { return /* binding */ headerUnaryContentLength; },\n/* harmony export */   headerUnaryEncoding: function() { return /* binding */ headerUnaryEncoding; },\n/* harmony export */   headerUserAgent: function() { return /* binding */ headerUserAgent; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerUnaryContentLength = \"Content-Length\";\nconst headerUnaryEncoding = \"Content-Encoding\";\nconst headerStreamEncoding = \"Connect-Content-Encoding\";\nconst headerUnaryAcceptEncoding = \"Accept-Encoding\";\nconst headerStreamAcceptEncoding = \"Connect-Accept-Encoding\";\nconst headerTimeout = \"Connect-Timeout-Ms\";\nconst headerProtocolVersion = \"Connect-Protocol-Version\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9oZWFkZXJzLmpzPzcwNDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBoZWFkZXJDb250ZW50VHlwZSA9IFwiQ29udGVudC1UeXBlXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVW5hcnlDb250ZW50TGVuZ3RoID0gXCJDb250ZW50LUxlbmd0aFwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVuYXJ5RW5jb2RpbmcgPSBcIkNvbnRlbnQtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJTdHJlYW1FbmNvZGluZyA9IFwiQ29ubmVjdC1Db250ZW50LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVW5hcnlBY2NlcHRFbmNvZGluZyA9IFwiQWNjZXB0LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyU3RyZWFtQWNjZXB0RW5jb2RpbmcgPSBcIkNvbm5lY3QtQWNjZXB0LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVGltZW91dCA9IFwiQ29ubmVjdC1UaW1lb3V0LU1zXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyUHJvdG9jb2xWZXJzaW9uID0gXCJDb25uZWN0LVByb3RvY29sLVZlcnNpb25cIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJVc2VyQWdlbnQgPSBcIlVzZXItQWdlbnRcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: function() { return /* binding */ codeFromHttpStatus; },\n/* harmony export */   codeToHttpStatus: function() { return /* binding */ codeToHttpStatus; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Determine the Connect error code for the given HTTP status code.\n * See https://connectrpc.com/docs/protocol/#http-to-error-code\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n        case 401: // Unauthorized\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated;\n        case 403: // Forbidden\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied;\n        case 404: // Not Found\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 502: // Bad Gateway\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 503: // Service Unavailable\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        default:\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown;\n    }\n}\n/**\n * Returns a HTTP status code for the given Connect code.\n * See https://connectrpc.com/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToHttpStatus(code) {\n    switch (code) {\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled:\n            return 499; // Client Closed Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.InvalidArgument:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DeadlineExceeded:\n            return 504; // Gateway Timeout\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.NotFound:\n            return 404; // Not Found\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.AlreadyExists:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied:\n            return 403; // Forbidden\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.ResourceExhausted:\n            return 429; // Too Many Requests\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.FailedPrecondition:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Aborted:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.OutOfRange:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented:\n            return 501; // Not Implemented\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable:\n            return 503; // Service Unavailable\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DataLoss:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated:\n            return 401; // Unauthorized\n        default:\n            return 500; // same as CodeUnknown\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2h0dHAtc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9odHRwLXN0YXR1cy5qcz9mNDFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogRGV0ZXJtaW5lIHRoZSBDb25uZWN0IGVycm9yIGNvZGUgZm9yIHRoZSBnaXZlbiBIVFRQIHN0YXR1cyBjb2RlLlxuICogU2VlIGh0dHBzOi8vY29ubmVjdHJwYy5jb20vZG9jcy9wcm90b2NvbC8jaHR0cC10by1lcnJvci1jb2RlXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlRnJvbUh0dHBTdGF0dXMoaHR0cFN0YXR1cykge1xuICAgIHN3aXRjaCAoaHR0cFN0YXR1cykge1xuICAgICAgICBjYXNlIDQwMDogLy8gQmFkIFJlcXVlc3RcbiAgICAgICAgICAgIHJldHVybiBDb2RlLkludGVybmFsO1xuICAgICAgICBjYXNlIDQwMTogLy8gVW5hdXRob3JpemVkXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF1dGhlbnRpY2F0ZWQ7XG4gICAgICAgIGNhc2UgNDAzOiAvLyBGb3JiaWRkZW5cbiAgICAgICAgICAgIHJldHVybiBDb2RlLlBlcm1pc3Npb25EZW5pZWQ7XG4gICAgICAgIGNhc2UgNDA0OiAvLyBOb3QgRm91bmRcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuaW1wbGVtZW50ZWQ7XG4gICAgICAgIGNhc2UgNDI5OiAvLyBUb28gTWFueSBSZXF1ZXN0c1xuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGNhc2UgNTAyOiAvLyBCYWQgR2F0ZXdheVxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGNhc2UgNTAzOiAvLyBTZXJ2aWNlIFVuYXZhaWxhYmxlXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDQ6IC8vIEdhdGV3YXkgVGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5Vbmtub3duO1xuICAgIH1cbn1cbi8qKlxuICogUmV0dXJucyBhIEhUVFAgc3RhdHVzIGNvZGUgZm9yIHRoZSBnaXZlbiBDb25uZWN0IGNvZGUuXG4gKiBTZWUgaHR0cHM6Ly9jb25uZWN0cnBjLmNvbS9kb2NzL3Byb3RvY29sI2Vycm9yLWNvZGVzXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlVG9IdHRwU3RhdHVzKGNvZGUpIHtcbiAgICBzd2l0Y2ggKGNvZGUpIHtcbiAgICAgICAgY2FzZSBDb2RlLkNhbmNlbGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQ5OTsgLy8gQ2xpZW50IENsb3NlZCBSZXF1ZXN0XG4gICAgICAgIGNhc2UgQ29kZS5Vbmtub3duOlxuICAgICAgICAgICAgcmV0dXJuIDUwMDsgLy8gSW50ZXJuYWwgU2VydmVyIEVycm9yXG4gICAgICAgIGNhc2UgQ29kZS5JbnZhbGlkQXJndW1lbnQ6XG4gICAgICAgICAgICByZXR1cm4gNDAwOyAvLyBCYWQgUmVxdWVzdFxuICAgICAgICBjYXNlIENvZGUuRGVhZGxpbmVFeGNlZWRlZDpcbiAgICAgICAgICAgIHJldHVybiA1MDQ7IC8vIEdhdGV3YXkgVGltZW91dFxuICAgICAgICBjYXNlIENvZGUuTm90Rm91bmQ6XG4gICAgICAgICAgICByZXR1cm4gNDA0OyAvLyBOb3QgRm91bmRcbiAgICAgICAgY2FzZSBDb2RlLkFscmVhZHlFeGlzdHM6XG4gICAgICAgICAgICByZXR1cm4gNDA5OyAvLyBDb25mbGljdFxuICAgICAgICBjYXNlIENvZGUuUGVybWlzc2lvbkRlbmllZDpcbiAgICAgICAgICAgIHJldHVybiA0MDM7IC8vIEZvcmJpZGRlblxuICAgICAgICBjYXNlIENvZGUuUmVzb3VyY2VFeGhhdXN0ZWQ6XG4gICAgICAgICAgICByZXR1cm4gNDI5OyAvLyBUb28gTWFueSBSZXF1ZXN0c1xuICAgICAgICBjYXNlIENvZGUuRmFpbGVkUHJlY29uZGl0aW9uOlxuICAgICAgICAgICAgcmV0dXJuIDQwMDsgLy8gQmFkIFJlcXVlc3RcbiAgICAgICAgY2FzZSBDb2RlLkFib3J0ZWQ6XG4gICAgICAgICAgICByZXR1cm4gNDA5OyAvLyBDb25mbGljdFxuICAgICAgICBjYXNlIENvZGUuT3V0T2ZSYW5nZTpcbiAgICAgICAgICAgIHJldHVybiA0MDA7IC8vIEJhZCBSZXF1ZXN0XG4gICAgICAgIGNhc2UgQ29kZS5VbmltcGxlbWVudGVkOlxuICAgICAgICAgICAgcmV0dXJuIDUwMTsgLy8gTm90IEltcGxlbWVudGVkXG4gICAgICAgIGNhc2UgQ29kZS5JbnRlcm5hbDpcbiAgICAgICAgICAgIHJldHVybiA1MDA7IC8vIEludGVybmFsIFNlcnZlciBFcnJvclxuICAgICAgICBjYXNlIENvZGUuVW5hdmFpbGFibGU6XG4gICAgICAgICAgICByZXR1cm4gNTAzOyAvLyBTZXJ2aWNlIFVuYXZhaWxhYmxlXG4gICAgICAgIGNhc2UgQ29kZS5EYXRhTG9zczpcbiAgICAgICAgICAgIHJldHVybiA1MDA7IC8vIEludGVybmFsIFNlcnZlciBFcnJvclxuICAgICAgICBjYXNlIENvZGUuVW5hdXRoZW50aWNhdGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQwMTsgLy8gVW5hdXRob3JpemVkXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gNTAwOyAvLyBzYW1lIGFzIENvZGVVbmtub3duXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: function() { return /* reexport safe */ _http_status_js__WEBPACK_IMPORTED_MODULE_2__.codeFromHttpStatus; },\n/* harmony export */   codeFromString: function() { return /* reexport safe */ _code_string_js__WEBPACK_IMPORTED_MODULE_13__.codeFromString; },\n/* harmony export */   codeToHttpStatus: function() { return /* reexport safe */ _http_status_js__WEBPACK_IMPORTED_MODULE_2__.codeToHttpStatus; },\n/* harmony export */   codeToString: function() { return /* reexport safe */ _code_string_js__WEBPACK_IMPORTED_MODULE_13__.codeToString; },\n/* harmony export */   contentTypeRegExp: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeRegExp; },\n/* harmony export */   contentTypeStreamJson: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeStreamJson; },\n/* harmony export */   contentTypeStreamProto: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeStreamProto; },\n/* harmony export */   contentTypeStreamRegExp: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeStreamRegExp; },\n/* harmony export */   contentTypeUnaryJson: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeUnaryJson; },\n/* harmony export */   contentTypeUnaryProto: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeUnaryProto; },\n/* harmony export */   contentTypeUnaryRegExp: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.contentTypeUnaryRegExp; },\n/* harmony export */   createEndStreamSerialization: function() { return /* reexport safe */ _end_stream_js__WEBPACK_IMPORTED_MODULE_4__.createEndStreamSerialization; },\n/* harmony export */   createHandlerFactory: function() { return /* reexport safe */ _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__.createHandlerFactory; },\n/* harmony export */   createTransport: function() { return /* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.createTransport; },\n/* harmony export */   endStreamFlag: function() { return /* reexport safe */ _end_stream_js__WEBPACK_IMPORTED_MODULE_4__.endStreamFlag; },\n/* harmony export */   endStreamFromJson: function() { return /* reexport safe */ _end_stream_js__WEBPACK_IMPORTED_MODULE_4__.endStreamFromJson; },\n/* harmony export */   endStreamToJson: function() { return /* reexport safe */ _end_stream_js__WEBPACK_IMPORTED_MODULE_4__.endStreamToJson; },\n/* harmony export */   errorFromJson: function() { return /* reexport safe */ _error_json_js__WEBPACK_IMPORTED_MODULE_5__.errorFromJson; },\n/* harmony export */   errorFromJsonBytes: function() { return /* reexport safe */ _error_json_js__WEBPACK_IMPORTED_MODULE_5__.errorFromJsonBytes; },\n/* harmony export */   errorToJson: function() { return /* reexport safe */ _error_json_js__WEBPACK_IMPORTED_MODULE_5__.errorToJson; },\n/* harmony export */   errorToJsonBytes: function() { return /* reexport safe */ _error_json_js__WEBPACK_IMPORTED_MODULE_5__.errorToJsonBytes; },\n/* harmony export */   parseContentType: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_6__.parseContentType; },\n/* harmony export */   parseTimeout: function() { return /* reexport safe */ _parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__.parseTimeout; },\n/* harmony export */   protocolVersion: function() { return /* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_12__.protocolVersion; },\n/* harmony export */   requestHeader: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression; },\n/* harmony export */   trailerDemux: function() { return /* reexport safe */ _trailer_mux_js__WEBPACK_IMPORTED_MODULE_9__.trailerDemux; },\n/* harmony export */   trailerMux: function() { return /* reexport safe */ _trailer_mux_js__WEBPACK_IMPORTED_MODULE_9__.trailerMux; },\n/* harmony export */   transformConnectPostToGetRequest: function() { return /* reexport safe */ _get_request_js__WEBPACK_IMPORTED_MODULE_11__.transformConnectPostToGetRequest; },\n/* harmony export */   validateResponse: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_8__.validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_8__.validateResponseWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./end-stream.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error-json.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse-timeout.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trailer-mux.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _headers_js__WEBPACK_IMPORTED_MODULE_10__) if([\"default\",\"createHandlerFactory\",\"createTransport\",\"codeFromHttpStatus\",\"codeToHttpStatus\",\"requestHeader\",\"requestHeaderWithCompression\",\"endStreamToJson\",\"endStreamFromJson\",\"endStreamFlag\",\"createEndStreamSerialization\",\"errorFromJson\",\"errorFromJsonBytes\",\"errorToJson\",\"errorToJsonBytes\",\"parseContentType\",\"contentTypeUnaryProto\",\"contentTypeUnaryJson\",\"contentTypeStreamProto\",\"contentTypeStreamJson\",\"contentTypeRegExp\",\"contentTypeUnaryRegExp\",\"contentTypeStreamRegExp\",\"parseTimeout\",\"validateResponse\",\"validateResponseWithCompression\",\"trailerMux\",\"trailerDemux\",\"transformConnectPostToGetRequest\",\"protocolVersion\",\"codeFromString\",\"codeToString\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _headers_js__WEBPACK_IMPORTED_MODULE_10__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _get_request_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./get-request.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _code_string_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./code-string.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzREO0FBQ1g7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3RTtBQUNXO0FBQ2dDO0FBQ2Y7QUFDa0g7QUFDcEs7QUFDMEM7QUFDaEM7QUFDL0I7QUFDdUM7QUFDckI7QUFDRztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvaW5kZXguanM/ZGMyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuZXhwb3J0IHsgY3JlYXRlSGFuZGxlckZhY3RvcnkgfSBmcm9tIFwiLi9oYW5kbGVyLWZhY3RvcnkuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gXCIuL3RyYW5zcG9ydC5qc1wiO1xuLy8gQWxsIGV4cG9ydHMgYmVsb3cgYXJlIHByaXZhdGUg4oCUIGludGVybmFsIGNvZGUgdGhhdCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWNcbi8vIHZlcnNpb25pbmcuXG4vLyBXZSB3aWxsIHRyeSBoYXJkIHRvIGF2b2lkIGJyZWFraW5nIGNoYW5nZXMsIGJ1dCBpZiB5b3UgZGVwZW5kIG9uIHRoZVxuLy8gZm9sbG93aW5nIGV4cG9ydHMsIHdlIHJlY29tbWVuZCB0aGF0IHlvdSBkbyBzbyB3aXRoIGFuIGV4YWN0IHZlcnNpb25cbi8vIGNvbnN0cmFpbnQgKG5vIH4gb3IgXikuXG5leHBvcnQgeyBjb2RlRnJvbUh0dHBTdGF0dXMsIGNvZGVUb0h0dHBTdGF0dXMgfSBmcm9tIFwiLi9odHRwLXN0YXR1cy5qc1wiO1xuZXhwb3J0IHsgcmVxdWVzdEhlYWRlciwgcmVxdWVzdEhlYWRlcldpdGhDb21wcmVzc2lvbiwgfSBmcm9tIFwiLi9yZXF1ZXN0LWhlYWRlci5qc1wiO1xuZXhwb3J0IHsgZW5kU3RyZWFtVG9Kc29uLCBlbmRTdHJlYW1Gcm9tSnNvbiwgZW5kU3RyZWFtRmxhZywgY3JlYXRlRW5kU3RyZWFtU2VyaWFsaXphdGlvbiwgfSBmcm9tIFwiLi9lbmQtc3RyZWFtLmpzXCI7XG5leHBvcnQgeyBlcnJvckZyb21Kc29uLCBlcnJvckZyb21Kc29uQnl0ZXMsIGVycm9yVG9Kc29uLCBlcnJvclRvSnNvbkJ5dGVzLCB9IGZyb20gXCIuL2Vycm9yLWpzb24uanNcIjtcbmV4cG9ydCB7IHBhcnNlQ29udGVudFR5cGUsIGNvbnRlbnRUeXBlVW5hcnlQcm90bywgY29udGVudFR5cGVVbmFyeUpzb24sIGNvbnRlbnRUeXBlU3RyZWFtUHJvdG8sIGNvbnRlbnRUeXBlU3RyZWFtSnNvbiwgY29udGVudFR5cGVSZWdFeHAsIGNvbnRlbnRUeXBlVW5hcnlSZWdFeHAsIGNvbnRlbnRUeXBlU3RyZWFtUmVnRXhwLCB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuZXhwb3J0IHsgcGFyc2VUaW1lb3V0IH0gZnJvbSBcIi4vcGFyc2UtdGltZW91dC5qc1wiO1xuZXhwb3J0IHsgdmFsaWRhdGVSZXNwb25zZSwgdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbiwgfSBmcm9tIFwiLi92YWxpZGF0ZS1yZXNwb25zZS5qc1wiO1xuZXhwb3J0IHsgdHJhaWxlck11eCwgdHJhaWxlckRlbXV4IH0gZnJvbSBcIi4vdHJhaWxlci1tdXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmV4cG9ydCB7IHRyYW5zZm9ybUNvbm5lY3RQb3N0VG9HZXRSZXF1ZXN0IH0gZnJvbSBcIi4vZ2V0LXJlcXVlc3QuanNcIjtcbmV4cG9ydCB7IHByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb24uanNcIjtcbmV4cG9ydCB7IGNvZGVGcm9tU3RyaW5nIH0gZnJvbSBcIi4vY29kZS1zdHJpbmcuanNcIjtcbmV4cG9ydCB7IGNvZGVUb1N0cmluZyB9IGZyb20gXCIuL2NvZGUtc3RyaW5nLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: function() { return /* binding */ parseTimeout; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a Connect Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^\\d{1,10}$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid connect timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const timeoutMs = parseInt(results[0]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs: parseInt(results[0]),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUs7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxtREFBbUQsTUFBTSxHQUFHLDBDQUFJO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9wYXJzZS10aW1lb3V0LmpzPzcwNTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbi8qKlxuICogUGFyc2UgYSBDb25uZWN0IFRpbWVvdXQgKERlYWRsaW5lKSBoZWFkZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVRpbWVvdXQodmFsdWUsIG1heFRpbWVvdXRNcykge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSAvXlxcZHsxLDEwfSQvLmV4ZWModmFsdWUpO1xuICAgIGlmIChyZXN1bHRzID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcjogbmV3IENvbm5lY3RFcnJvcihgcHJvdG9jb2wgZXJyb3I6IGludmFsaWQgY29ubmVjdCB0aW1lb3V0IHZhbHVlOiAke3ZhbHVlfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgdGltZW91dE1zID0gcGFyc2VJbnQocmVzdWx0c1swXSk7XG4gICAgaWYgKHRpbWVvdXRNcyA+IG1heFRpbWVvdXRNcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGltZW91dE1zOiB0aW1lb3V0TXMsXG4gICAgICAgICAgICBlcnJvcjogbmV3IENvbm5lY3RFcnJvcihgdGltZW91dCAke3RpbWVvdXRNc31tcyBtdXN0IGJlIDw9ICR7bWF4VGltZW91dE1zfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGltZW91dE1zOiBwYXJzZUludChyZXN1bHRzWzBdKSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paramBase64: function() { return /* binding */ paramBase64; },\n/* harmony export */   paramCompression: function() { return /* binding */ paramCompression; },\n/* harmony export */   paramConnectVersion: function() { return /* binding */ paramConnectVersion; },\n/* harmony export */   paramEncoding: function() { return /* binding */ paramEncoding; },\n/* harmony export */   paramMessage: function() { return /* binding */ paramMessage; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst paramConnectVersion = \"connect\";\nconst paramEncoding = \"encoding\";\nconst paramCompression = \"compression\";\nconst paramBase64 = \"base64\";\nconst paramMessage = \"message\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3F1ZXJ5LXBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3F1ZXJ5LXBhcmFtcy5qcz8xODkyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgcGFyYW1Db25uZWN0VmVyc2lvbiA9IFwiY29ubmVjdFwiO1xuZXhwb3J0IGNvbnN0IHBhcmFtRW5jb2RpbmcgPSBcImVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgcGFyYW1Db21wcmVzc2lvbiA9IFwiY29tcHJlc3Npb25cIjtcbmV4cG9ydCBjb25zdCBwYXJhbUJhc2U2NCA9IFwiYmFzZTY0XCI7XG5leHBvcnQgY29uc3QgcGFyYW1NZXNzYWdlID0gXCJtZXNzYWdlXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: function() { return /* binding */ requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* binding */ requestHeaderWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Creates headers for a Connect request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}`);\n    }\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n        ? useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryJson\n        : useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamJson);\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion, _version_js__WEBPACK_IMPORTED_MODULE_3__.protocolVersion);\n    if (setUserAgent) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    }\n    return result;\n}\n/**\n * Creates headers for a Connect request with compression.\n *\n * Note that we always set the Content-Encoding header for unary methods.\n * It is up to the caller to decide whether to apply compression - and remove\n * the header if compression is not used, for example because the payload is\n * too small to make compression effective.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression, setUserAgent) {\n    const result = requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent);\n    if (sendCompression != null) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding;\n        result.set(name, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryAcceptEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamAcceptEncoding;\n        result.set(name, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3JlcXVlc3QtaGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dEO0FBQzJKO0FBQzVKO0FBQ2lGO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHdIQUF3SDtBQUN4SDtBQUNBLG1CQUFtQixzREFBYSxLQUFLLFVBQVU7QUFDL0M7QUFDQSxlQUFlLDBEQUFpQixnQkFBZ0IsMERBQVU7QUFDMUQ7QUFDQSxjQUFjLG1FQUFxQjtBQUNuQyxjQUFjLGtFQUFvQjtBQUNsQztBQUNBLGNBQWMsb0VBQXNCO0FBQ3BDLGNBQWMsbUVBQXFCO0FBQ25DLGVBQWUsOERBQXFCLEVBQUUsd0RBQWU7QUFDckQ7QUFDQSxtQkFBbUIsd0RBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQ0FBbUMsMERBQVU7QUFDN0MsY0FBYyw0REFBbUI7QUFDakMsY0FBYyw2REFBb0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDBEQUFVO0FBQzdDLGNBQWMsa0VBQXlCO0FBQ3ZDLGNBQWMsbUVBQTBCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvcmVxdWVzdC1oZWFkZXIuanM/MDA0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgTWV0aG9kS2luZCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJTdHJlYW1BY2NlcHRFbmNvZGluZywgaGVhZGVyU3RyZWFtRW5jb2RpbmcsIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIGhlYWRlclVuYXJ5RW5jb2RpbmcsIGhlYWRlclRpbWVvdXQsIGhlYWRlclByb3RvY29sVmVyc2lvbiwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb24uanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlU3RyZWFtSnNvbiwgY29udGVudFR5cGVTdHJlYW1Qcm90bywgY29udGVudFR5cGVVbmFyeUpzb24sIGNvbnRlbnRUeXBlVW5hcnlQcm90bywgfSBmcm9tIFwiLi9jb250ZW50LXR5cGUuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIENvbm5lY3QgcmVxdWVzdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXIobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICBpZiAodGltZW91dE1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJUaW1lb3V0LCBgJHt0aW1lb3V0TXN9YCk7XG4gICAgfVxuICAgIHJlc3VsdC5zZXQoaGVhZGVyQ29udGVudFR5cGUsIG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeVxuICAgICAgICA/IHVzZUJpbmFyeUZvcm1hdFxuICAgICAgICAgICAgPyBjb250ZW50VHlwZVVuYXJ5UHJvdG9cbiAgICAgICAgICAgIDogY29udGVudFR5cGVVbmFyeUpzb25cbiAgICAgICAgOiB1c2VCaW5hcnlGb3JtYXRcbiAgICAgICAgICAgID8gY29udGVudFR5cGVTdHJlYW1Qcm90b1xuICAgICAgICAgICAgOiBjb250ZW50VHlwZVN0cmVhbUpzb24pO1xuICAgIHJlc3VsdC5zZXQoaGVhZGVyUHJvdG9jb2xWZXJzaW9uLCBwcm90b2NvbFZlcnNpb24pO1xuICAgIGlmIChzZXRVc2VyQWdlbnQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJVc2VyQWdlbnQsIFwiY29ubmVjdC1lcy8xLjYuMVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIENvbm5lY3QgcmVxdWVzdCB3aXRoIGNvbXByZXNzaW9uLlxuICpcbiAqIE5vdGUgdGhhdCB3ZSBhbHdheXMgc2V0IHRoZSBDb250ZW50LUVuY29kaW5nIGhlYWRlciBmb3IgdW5hcnkgbWV0aG9kcy5cbiAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gZGVjaWRlIHdoZXRoZXIgdG8gYXBwbHkgY29tcHJlc3Npb24gLSBhbmQgcmVtb3ZlXG4gKiB0aGUgaGVhZGVyIGlmIGNvbXByZXNzaW9uIGlzIG5vdCB1c2VkLCBmb3IgZXhhbXBsZSBiZWNhdXNlIHRoZSBwYXlsb2FkIGlzXG4gKiB0b28gc21hbGwgdG8gbWFrZSBjb21wcmVzc2lvbiBlZmZlY3RpdmUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uKG1ldGhvZEtpbmQsIHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBhY2NlcHRDb21wcmVzc2lvbiwgc2VuZENvbXByZXNzaW9uLCBzZXRVc2VyQWdlbnQpIHtcbiAgICBjb25zdCByZXN1bHQgPSByZXF1ZXN0SGVhZGVyKG1ldGhvZEtpbmQsIHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBzZXRVc2VyQWdlbnQpO1xuICAgIGlmIChzZW5kQ29tcHJlc3Npb24gIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBuYW1lID0gbWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5XG4gICAgICAgICAgICA/IGhlYWRlclVuYXJ5RW5jb2RpbmdcbiAgICAgICAgICAgIDogaGVhZGVyU3RyZWFtRW5jb2Rpbmc7XG4gICAgICAgIHJlc3VsdC5zZXQobmFtZSwgc2VuZENvbXByZXNzaW9uLm5hbWUpO1xuICAgIH1cbiAgICBpZiAoYWNjZXB0Q29tcHJlc3Npb24ubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBuYW1lID0gbWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5XG4gICAgICAgICAgICA/IGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmdcbiAgICAgICAgICAgIDogaGVhZGVyU3RyZWFtQWNjZXB0RW5jb2Rpbmc7XG4gICAgICAgIHJlc3VsdC5zZXQobmFtZSwgYWNjZXB0Q29tcHJlc3Npb24ubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trailerDemux: function() { return /* binding */ trailerDemux; },\n/* harmony export */   trailerMux: function() { return /* binding */ trailerMux; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerDemux(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key) => {\n        if (key.toLowerCase().startsWith(\"trailer-\")) {\n            t.append(key.substring(8), value);\n        }\n        else {\n            h.append(key, value);\n        }\n    });\n    return [h, t];\n}\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function muxes a header and a trailer into a single Headers object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerMux(header, trailer) {\n    const h = new Headers(header);\n    trailer.forEach((value, key) => {\n        h.append(`trailer-${key}`, value);\n    });\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3RyYWlsZXItbXV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSTtBQUNoQyxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3RyYWlsZXItbXV4LmpzP2MwOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogSW4gdW5hcnkgUlBDcywgQ29ubmVjdCB0cmFuc3BvcnRzIHRyYWlsaW5nIG1ldGFkYXRhIGFzIHJlc3BvbnNlIGhlYWRlclxuICogZmllbGRzLCBwcmVmaXhlZCB3aXRoIFwidHJhaWxlci1cIi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGRlbXV4ZXMgaGVhZGVycyBhbmQgdHJhaWxlcnMgaW50byB0d28gc2VwYXJhdGUgSGVhZGVyc1xuICogb2JqZWN0cy5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWlsZXJEZW11eChoZWFkZXIpIHtcbiAgICBjb25zdCBoID0gbmV3IEhlYWRlcnMoKSwgdCA9IG5ldyBIZWFkZXJzKCk7XG4gICAgaGVhZGVyLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoXCJ0cmFpbGVyLVwiKSkge1xuICAgICAgICAgICAgdC5hcHBlbmQoa2V5LnN1YnN0cmluZyg4KSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaC5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gW2gsIHRdO1xufVxuLyoqXG4gKiBJbiB1bmFyeSBSUENzLCBDb25uZWN0IHRyYW5zcG9ydHMgdHJhaWxpbmcgbWV0YWRhdGEgYXMgcmVzcG9uc2UgaGVhZGVyXG4gKiBmaWVsZHMsIHByZWZpeGVkIHdpdGggXCJ0cmFpbGVyLVwiLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gbXV4ZXMgYSBoZWFkZXIgYW5kIGEgdHJhaWxlciBpbnRvIGEgc2luZ2xlIEhlYWRlcnMgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhaWxlck11eChoZWFkZXIsIHRyYWlsZXIpIHtcbiAgICBjb25zdCBoID0gbmV3IEhlYWRlcnMoaGVhZGVyKTtcbiAgICB0cmFpbGVyLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaC5hcHBlbmQoYHRyYWlsZXItJHtrZXl9YCwgdmFsdWUpO1xuICAgIH0pO1xuICAgIHJldHVybiBoO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trailer-mux.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error-json.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./end-stream.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _get_request_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./get-request.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../http-headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the Connect protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    let requestBody = serialization\n                        .getI(opt.useBinaryFormat)\n                        .serialize(req.message);\n                    if (opt.sendCompression &&\n                        requestBody.byteLength > opt.compressMinBytes) {\n                        requestBody = await opt.sendCompression.compress(requestBody);\n                        req.header.set(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding, opt.sendCompression.name);\n                    }\n                    else {\n                        req.header.delete(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding);\n                    }\n                    const useGet = opt.useHttpGet === true &&\n                        method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__.MethodIdempotency.NoSideEffects;\n                    let body;\n                    if (useGet) {\n                        req = (0,_get_request_js__WEBPACK_IMPORTED_MODULE_7__.transformConnectPostToGetRequest)(req, requestBody, opt.useBinaryFormat);\n                    }\n                    else {\n                        body = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.createAsyncIterable)([requestBody]);\n                    }\n                    const universalResponse = await opt.httpClient({\n                        url: req.url,\n                        method: (_a = req.init.method) !== null && _a !== void 0 ? _a : \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body,\n                    });\n                    const { compression, isUnaryError, unaryError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, universalResponse.status, universalResponse.header);\n                    const [header, trailer] = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__.trailerDemux)(universalResponse.header);\n                    let responseBody = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipeTo)(universalResponse.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.sinkAllBytes)(opt.readMaxBytes, universalResponse.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryContentLength)), { propagateDownStreamError: false });\n                    if (compression) {\n                        responseBody = await compression.decompress(responseBody, opt.readMaxBytes);\n                    }\n                    if (isUnaryError) {\n                        throw (0,_error_json_js__WEBPACK_IMPORTED_MODULE_11__.errorFromJsonBytes)(responseBody, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_12__.appendHeaders)(header, trailer), unaryError);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header,\n                        message: serialization\n                            .getO(opt.useBinaryFormat)\n                            .parse(responseBody),\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_13__.createEndStreamSerialization)(opt.jsonOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _end_stream_js__WEBPACK_IMPORTED_MODULE_13__.endStreamFlag, endStreamSerialization), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_1, _b, _c;\n                                let endStreamReceived = false;\n                                try {\n                                    for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                                        _c = iterable_1_1.value;\n                                        _d = false;\n                                        const chunk = _c;\n                                        if (chunk.end) {\n                                            if (endStreamReceived) {\n                                                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                            }\n                                            endStreamReceived = true;\n                                            if (chunk.value.error) {\n                                                const error = chunk.value.error;\n                                                uRes.header.forEach((value, key) => {\n                                                    error.metadata.append(key, value);\n                                                });\n                                                throw error;\n                                            }\n                                            chunk.value.metadata.forEach((value, key) => res.trailer.set(key, value));\n                                            continue;\n                                        }\n                                        if (endStreamReceived) {\n                                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra message after EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                        }\n                                        yield yield __await(chunk.value);\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                                if (!endStreamReceived) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: missing EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: function() { return /* binding */ validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* binding */ validateResponseWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Validates response status and header for the Connect protocol.\n * Throws a ConnectError if the header indicates an error, or if\n * the content type is unexpected, with the following exception:\n * For unary RPCs with an HTTP error status, this returns an error\n * derived from the HTTP status instead of throwing it, giving an\n * implementation a chance to parse a Connect error from the wire.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(methodKind, useBinaryFormat, status, headers) {\n    const mimeType = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType);\n    const parsedType = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_1__.parseContentType)(mimeType);\n    if (status !== 200) {\n        const errorFromStatus = new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`HTTP ${status}`, (0,_http_status_js__WEBPACK_IMPORTED_MODULE_3__.codeFromHttpStatus)(status), headers);\n        // If parsedType is defined and it is not binary, then this is a unary JSON response\n        if (methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary && parsedType && !parsedType.binary) {\n            return { isUnaryError: true, unaryError: errorFromStatus };\n        }\n        throw errorFromStatus;\n    }\n    const allowedContentType = {\n        binary: useBinaryFormat,\n        stream: methodKind !== _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary,\n    };\n    if ((parsedType === null || parsedType === void 0 ? void 0 : parsedType.binary) !== allowedContentType.binary ||\n        parsedType.stream !== allowedContentType.stream) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported content type ${mimeType}`, parsedType === undefined ? _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Unknown : _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n    }\n    return { isUnaryError: false };\n}\n/**\n * Validates response status and header for the Connect protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * @private\n */\nfunction validateResponseWithCompression(methodKind, acceptCompression, useBinaryFormat, status, headers) {\n    let compression;\n    const encoding = headers.get(methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding);\n    if (encoding != null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n        }\n    }\n    return Object.assign({ compression }, validateResponse(methodKind, useBinaryFormat, status, headers));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZhbGlkYXRlLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDZDtBQUNvQjtBQUNIO0FBQ0U7QUFDd0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlDQUFpQywwREFBaUI7QUFDbEQsdUJBQXVCLGtFQUFnQjtBQUN2QztBQUNBLG9DQUFvQywyREFBWSxTQUFTLE9BQU8sR0FBRyxtRUFBa0I7QUFDckY7QUFDQSwwQkFBMEIsMERBQVU7QUFDcEMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMERBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLDZCQUE2QixTQUFTLDhCQUE4QiwwQ0FBSSxXQUFXLDBDQUFJO0FBQ3JIO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsK0NBQStDLDBEQUFVLFNBQVMsNERBQW1CLEdBQUcsNkRBQW9CO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxtQ0FBbUMsU0FBUyxJQUFJLDBDQUFJO0FBQ3RGO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZhbGlkYXRlLXJlc3BvbnNlLmpzP2NhZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1ldGhvZEtpbmQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IGNvZGVGcm9tSHR0cFN0YXR1cyB9IGZyb20gXCIuL2h0dHAtc3RhdHVzLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgcGFyc2VDb250ZW50VHlwZSB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuaW1wb3J0IHsgaGVhZGVyQ29udGVudFR5cGUsIGhlYWRlclN0cmVhbUVuY29kaW5nLCBoZWFkZXJVbmFyeUVuY29kaW5nLCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbi8qKlxuICogVmFsaWRhdGVzIHJlc3BvbnNlIHN0YXR1cyBhbmQgaGVhZGVyIGZvciB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciBpZiB0aGUgaGVhZGVyIGluZGljYXRlcyBhbiBlcnJvciwgb3IgaWZcbiAqIHRoZSBjb250ZW50IHR5cGUgaXMgdW5leHBlY3RlZCwgd2l0aCB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjpcbiAqIEZvciB1bmFyeSBSUENzIHdpdGggYW4gSFRUUCBlcnJvciBzdGF0dXMsIHRoaXMgcmV0dXJucyBhbiBlcnJvclxuICogZGVyaXZlZCBmcm9tIHRoZSBIVFRQIHN0YXR1cyBpbnN0ZWFkIG9mIHRocm93aW5nIGl0LCBnaXZpbmcgYW5cbiAqIGltcGxlbWVudGF0aW9uIGEgY2hhbmNlIHRvIHBhcnNlIGEgQ29ubmVjdCBlcnJvciBmcm9tIHRoZSB3aXJlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZShtZXRob2RLaW5kLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykge1xuICAgIGNvbnN0IG1pbWVUeXBlID0gaGVhZGVycy5nZXQoaGVhZGVyQ29udGVudFR5cGUpO1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSBwYXJzZUNvbnRlbnRUeXBlKG1pbWVUeXBlKTtcbiAgICBpZiAoc3RhdHVzICE9PSAyMDApIHtcbiAgICAgICAgY29uc3QgZXJyb3JGcm9tU3RhdHVzID0gbmV3IENvbm5lY3RFcnJvcihgSFRUUCAke3N0YXR1c31gLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG4gICAgICAgIC8vIElmIHBhcnNlZFR5cGUgaXMgZGVmaW5lZCBhbmQgaXQgaXMgbm90IGJpbmFyeSwgdGhlbiB0aGlzIGlzIGEgdW5hcnkgSlNPTiByZXNwb25zZVxuICAgICAgICBpZiAobWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5ICYmIHBhcnNlZFR5cGUgJiYgIXBhcnNlZFR5cGUuYmluYXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4geyBpc1VuYXJ5RXJyb3I6IHRydWUsIHVuYXJ5RXJyb3I6IGVycm9yRnJvbVN0YXR1cyB9O1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycm9yRnJvbVN0YXR1cztcbiAgICB9XG4gICAgY29uc3QgYWxsb3dlZENvbnRlbnRUeXBlID0ge1xuICAgICAgICBiaW5hcnk6IHVzZUJpbmFyeUZvcm1hdCxcbiAgICAgICAgc3RyZWFtOiBtZXRob2RLaW5kICE9PSBNZXRob2RLaW5kLlVuYXJ5LFxuICAgIH07XG4gICAgaWYgKChwYXJzZWRUeXBlID09PSBudWxsIHx8IHBhcnNlZFR5cGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcnNlZFR5cGUuYmluYXJ5KSAhPT0gYWxsb3dlZENvbnRlbnRUeXBlLmJpbmFyeSB8fFxuICAgICAgICBwYXJzZWRUeXBlLnN0cmVhbSAhPT0gYWxsb3dlZENvbnRlbnRUeXBlLnN0cmVhbSkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCBjb250ZW50IHR5cGUgJHttaW1lVHlwZX1gLCBwYXJzZWRUeXBlID09PSB1bmRlZmluZWQgPyBDb2RlLlVua25vd24gOiBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgaXNVbmFyeUVycm9yOiBmYWxzZSB9O1xufVxuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBDb25uZWN0IHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVJlc3BvbnNlV2l0aENvbXByZXNzaW9uKG1ldGhvZEtpbmQsIGFjY2VwdENvbXByZXNzaW9uLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykge1xuICAgIGxldCBjb21wcmVzc2lvbjtcbiAgICBjb25zdCBlbmNvZGluZyA9IGhlYWRlcnMuZ2V0KG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeSA/IGhlYWRlclVuYXJ5RW5jb2RpbmcgOiBoZWFkZXJTdHJlYW1FbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9IG51bGwgJiYgZW5jb2RpbmcudG9Mb3dlckNhc2UoKSAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIGNvbXByZXNzaW9uID0gYWNjZXB0Q29tcHJlc3Npb24uZmluZCgoYykgPT4gYy5uYW1lID09PSBlbmNvZGluZyk7XG4gICAgICAgIGlmICghY29tcHJlc3Npb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYHVuc3VwcG9ydGVkIHJlc3BvbnNlIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImAsIENvZGUuSW50ZXJuYWwsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgY29tcHJlc3Npb24gfSwgdmFsaWRhdGVSZXNwb25zZShtZXRob2RLaW5kLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protocolVersion: function() { return /* binding */ protocolVersion; },\n/* harmony export */   requireProtocolVersionHeader: function() { return /* binding */ requireProtocolVersionHeader; },\n/* harmony export */   requireProtocolVersionParam: function() { return /* binding */ requireProtocolVersionParam; }\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query-params.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * The only know value for the header Connect-Protocol-Version.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst protocolVersion = \"1\";\n/**\n * Requires the Connect-Protocol-Version header to be present with the expected\n * value. Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionHeader(requestHeader) {\n    const v = requestHeader.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required header: set ${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} to \"${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== protocolVersion) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} must be \"${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n/**\n * Requires the connect query parameter to be present with the expected value.\n * Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionParam(queryParams) {\n    const v = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required parameter: set ${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} to \"v${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== `v${protocolVersion}`) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} must be \"v${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FEO0FBQ0c7QUFDTDtBQUNqQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyw4REFBcUI7QUFDckQ7QUFDQSxrQkFBa0IsMkRBQVksaUNBQWlDLDhEQUFxQixFQUFFLE1BQU0sZ0JBQWdCLElBQUksMENBQUk7QUFDcEg7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxJQUFJLDhEQUFxQixFQUFFLFdBQVcsZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixpRUFBbUI7QUFDakQ7QUFDQSxrQkFBa0IsMkRBQVksb0NBQW9DLGlFQUFtQixFQUFFLE9BQU8sZ0JBQWdCLElBQUksMENBQUk7QUFDdEg7QUFDQSx1QkFBdUIsZ0JBQWdCO0FBQ3ZDLGtCQUFrQiwyREFBWSxJQUFJLGlFQUFtQixFQUFFLFlBQVksZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3ZHO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC92ZXJzaW9uLmpzPzFiOWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGhlYWRlclByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHBhcmFtQ29ubmVjdFZlcnNpb24gfSBmcm9tIFwiLi9xdWVyeS1wYXJhbXMuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogVGhlIG9ubHkga25vdyB2YWx1ZSBmb3IgdGhlIGhlYWRlciBDb25uZWN0LVByb3RvY29sLVZlcnNpb24uXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBwcm90b2NvbFZlcnNpb24gPSBcIjFcIjtcbi8qKlxuICogUmVxdWlyZXMgdGhlIENvbm5lY3QtUHJvdG9jb2wtVmVyc2lvbiBoZWFkZXIgdG8gYmUgcHJlc2VudCB3aXRoIHRoZSBleHBlY3RlZFxuICogdmFsdWUuIFJhaXNlcyBhIENvbm5lY3RFcnJvciB3aXRoIENvZGUuSW52YWxpZEFyZ3VtZW50IG90aGVyd2lzZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVQcm90b2NvbFZlcnNpb25IZWFkZXIocmVxdWVzdEhlYWRlcikge1xuICAgIGNvbnN0IHYgPSByZXF1ZXN0SGVhZGVyLmdldChoZWFkZXJQcm90b2NvbFZlcnNpb24pO1xuICAgIGlmICh2ID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYG1pc3NpbmcgcmVxdWlyZWQgaGVhZGVyOiBzZXQgJHtoZWFkZXJQcm90b2NvbFZlcnNpb259IHRvIFwiJHtwcm90b2NvbFZlcnNpb259XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHYgIT09IHByb3RvY29sVmVyc2lvbikge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGAke2hlYWRlclByb3RvY29sVmVyc2lvbn0gbXVzdCBiZSBcIiR7cHJvdG9jb2xWZXJzaW9ufVwiOiBnb3QgXCIke3Z9XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXF1aXJlcyB0aGUgY29ubmVjdCBxdWVyeSBwYXJhbWV0ZXIgdG8gYmUgcHJlc2VudCB3aXRoIHRoZSBleHBlY3RlZCB2YWx1ZS5cbiAqIFJhaXNlcyBhIENvbm5lY3RFcnJvciB3aXRoIENvZGUuSW52YWxpZEFyZ3VtZW50IG90aGVyd2lzZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVQcm90b2NvbFZlcnNpb25QYXJhbShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHYgPSBxdWVyeVBhcmFtcy5nZXQocGFyYW1Db25uZWN0VmVyc2lvbik7XG4gICAgaWYgKHYgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IHNldCAke3BhcmFtQ29ubmVjdFZlcnNpb259IHRvIFwidiR7cHJvdG9jb2xWZXJzaW9ufVwiYCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbiAgICBlbHNlIGlmICh2ICE9PSBgdiR7cHJvdG9jb2xWZXJzaW9ufWApIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgJHtwYXJhbUNvbm5lY3RWZXJzaW9ufSBtdXN0IGJlIFwidiR7cHJvdG9jb2xWZXJzaW9ufVwiOiBnb3QgXCIke3Z9XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: function() { return /* binding */ contentTypeJson; },\n/* harmony export */   contentTypeProto: function() { return /* binding */ contentTypeProto; },\n/* harmony export */   contentTypeRegExp: function() { return /* binding */ contentTypeRegExp; },\n/* harmony export */   parseContentType: function() { return /* binding */ parseContentType; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC-web Content-Type header value.\n * Note that this includes application/grpc-web-text with the additional base64\n * encoding.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc-web(-text)?(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc-web+proto\";\nconst contentTypeJson = \"application/grpc-web+json\";\n/**\n * Parse a gRPC-web Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const text = !!match[1];\n    const binary = !match[2];\n    return { text, binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9jb250ZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0RUFBNEU7QUFDNUU7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9jb250ZW50LXR5cGUuanM/MTY4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGFueSB2YWxpZCBnUlBDLXdlYiBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICogTm90ZSB0aGF0IHRoaXMgaW5jbHVkZXMgYXBwbGljYXRpb24vZ3JwYy13ZWItdGV4dCB3aXRoIHRoZSBhZGRpdGlvbmFsIGJhc2U2NFxuICogZW5jb2RpbmcuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVJlZ0V4cCA9IC9eYXBwbGljYXRpb25cXC9ncnBjLXdlYigtdGV4dCk/KD86XFwrKD86KGpzb24pKD86OyA/Y2hhcnNldD11dGYtPzgpP3xwcm90bykpPyQvaTtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVByb3RvID0gXCJhcHBsaWNhdGlvbi9ncnBjLXdlYitwcm90b1wiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlSnNvbiA9IFwiYXBwbGljYXRpb24vZ3JwYy13ZWIranNvblwiO1xuLyoqXG4gKiBQYXJzZSBhIGdSUEMtd2ViIENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBjb250ZW50VHlwZSA9PT0gbnVsbCB8fCBjb250ZW50VHlwZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudFR5cGUubWF0Y2goY29udGVudFR5cGVSZWdFeHApO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgdGV4dCA9ICEhbWF0Y2hbMV07XG4gICAgY29uc3QgYmluYXJ5ID0gIW1hdGNoWzJdO1xuICAgIHJldHVybiB7IHRleHQsIGJpbmFyeSB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: function() { return /* binding */ createHandlerFactory; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n/* harmony import */ var _protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol-grpc/parse-timeout.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol-grpc/trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/compression.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/universal.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc-web\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC-web handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const trailerSerialization = (0,_trailer_js__WEBPACK_IMPORTED_MODULE_1__.createTrailerSerialization)();\n    function fact(spec) {\n        const h = createHandler(opt, trailerSerialization, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, trailerSerialization, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType));\n        if (type == undefined || type.text) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_9__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerGrpcStatus]: _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformParseEnvelope)(serialization.getI(type.binary), _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.Internal, undefined, undefined, e));\n            }\n            return {\n                flags: _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag,\n                data: trailerSerialization.serialize(context.responseTrailer),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding; },\n/* harmony export */   headerContentType: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType; },\n/* harmony export */   headerEncoding: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding; },\n/* harmony export */   headerGrpcMessage: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage; },\n/* harmony export */   headerGrpcStatus: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus; },\n/* harmony export */   headerStatusDetailsBin: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin; },\n/* harmony export */   headerTimeout: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout; },\n/* harmony export */   headerUserAgent: function() { return /* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent; },\n/* harmony export */   headerXGrpcWeb: function() { return /* binding */ headerXGrpcWeb; },\n/* harmony export */   headerXUserAgent: function() { return /* binding */ headerXUserAgent; }\n/* harmony export */ });\n/* harmony import */ var _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol-grpc/headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\n\n/**\n * gRPC-web does not use the standard header User-Agent.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXUserAgent = \"X-User-Agent\";\n/**\n * The canonical grpc/grpc-web JavaScript implementation sets\n * this request header with value \"1\".\n * Some servers may rely on the header to identify gRPC-web\n * requests. For example the proxy by improbable:\n * https://github.com/improbable-eng/grpc-web/blob/53aaf4cdc0fede7103c1b06f0cfc560c003a5c41/go/grpcweb/wrapper.go#L231\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXGrpcWeb = \"X-Grpc-Web\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb007QUFDcE07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy13ZWIvaGVhZGVycy5qcz83Mzc0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgeyBoZWFkZXJDb250ZW50VHlwZSwgaGVhZGVyRW5jb2RpbmcsIGhlYWRlckFjY2VwdEVuY29kaW5nLCBoZWFkZXJUaW1lb3V0LCBoZWFkZXJHcnBjU3RhdHVzLCBoZWFkZXJHcnBjTWVzc2FnZSwgaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuLi9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanNcIjtcbi8qKlxuICogZ1JQQy13ZWIgZG9lcyBub3QgdXNlIHRoZSBzdGFuZGFyZCBoZWFkZXIgVXNlci1BZ2VudC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGhlYWRlclhVc2VyQWdlbnQgPSBcIlgtVXNlci1BZ2VudFwiO1xuLyoqXG4gKiBUaGUgY2Fub25pY2FsIGdycGMvZ3JwYy13ZWIgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBzZXRzXG4gKiB0aGlzIHJlcXVlc3QgaGVhZGVyIHdpdGggdmFsdWUgXCIxXCIuXG4gKiBTb21lIHNlcnZlcnMgbWF5IHJlbHkgb24gdGhlIGhlYWRlciB0byBpZGVudGlmeSBnUlBDLXdlYlxuICogcmVxdWVzdHMuIEZvciBleGFtcGxlIHRoZSBwcm94eSBieSBpbXByb2JhYmxlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ltcHJvYmFibGUtZW5nL2dycGMtd2ViL2Jsb2IvNTNhYWY0Y2RjMGZlZGU3MTAzYzFiMDZmMGNmYzU2MGMwMDNhNWM0MS9nby9ncnBjd2ViL3dyYXBwZXIuZ28jTDIzMVxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgaGVhZGVyWEdycGNXZWIgPSBcIlgtR3JwYy1XZWJcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeJson; },\n/* harmony export */   contentTypeProto: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeProto; },\n/* harmony export */   contentTypeRegExp: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeRegExp; },\n/* harmony export */   createHandlerFactory: function() { return /* reexport safe */ _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__.createHandlerFactory; },\n/* harmony export */   createTrailerSerialization: function() { return /* reexport safe */ _trailer_js__WEBPACK_IMPORTED_MODULE_5__.createTrailerSerialization; },\n/* harmony export */   createTransport: function() { return /* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.createTransport; },\n/* harmony export */   grpcStatusOk: function() { return /* reexport safe */ _protocol_grpc_index_js__WEBPACK_IMPORTED_MODULE_6__.grpcStatusOk; },\n/* harmony export */   parseContentType: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType; },\n/* harmony export */   parseTimeout: function() { return /* reexport safe */ _protocol_grpc_index_js__WEBPACK_IMPORTED_MODULE_6__.parseTimeout; },\n/* harmony export */   requestHeader: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_2__.requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_2__.requestHeaderWithCompression; },\n/* harmony export */   setTrailerStatus: function() { return /* reexport safe */ _protocol_grpc_index_js__WEBPACK_IMPORTED_MODULE_6__.setTrailerStatus; },\n/* harmony export */   trailerFlag: function() { return /* reexport safe */ _trailer_js__WEBPACK_IMPORTED_MODULE_5__.trailerFlag; },\n/* harmony export */   trailerParse: function() { return /* reexport safe */ _trailer_js__WEBPACK_IMPORTED_MODULE_5__.trailerParse; },\n/* harmony export */   trailerSerialize: function() { return /* reexport safe */ _trailer_js__WEBPACK_IMPORTED_MODULE_5__.trailerSerialize; },\n/* harmony export */   validateResponse: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_4__.validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_4__.validateResponseWithCompression; },\n/* harmony export */   validateTrailer: function() { return /* reexport safe */ _protocol_grpc_index_js__WEBPACK_IMPORTED_MODULE_6__.validateTrailer; }\n/* harmony export */ });\n/* harmony import */ var _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _protocol_grpc_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol-grpc/index.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/index.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _headers_js__WEBPACK_IMPORTED_MODULE_7__) if([\"default\",\"createHandlerFactory\",\"createTransport\",\"requestHeader\",\"requestHeaderWithCompression\",\"parseContentType\",\"contentTypeRegExp\",\"contentTypeProto\",\"contentTypeJson\",\"validateResponse\",\"validateResponseWithCompression\",\"trailerFlag\",\"trailerParse\",\"trailerSerialize\",\"createTrailerSerialization\",\"parseTimeout\",\"setTrailerStatus\",\"validateTrailer\",\"grpcStatusOk\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _headers_js__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzREO0FBQ1g7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNtRjtBQUN5QjtBQUNoQjtBQUNZO0FBQ0c7QUFDOUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy13ZWIvaW5kZXguanM/MmNlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuZXhwb3J0IHsgY3JlYXRlSGFuZGxlckZhY3RvcnkgfSBmcm9tIFwiLi9oYW5kbGVyLWZhY3RvcnkuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gXCIuL3RyYW5zcG9ydC5qc1wiO1xuLy8gQWxsIGV4cG9ydHMgYmVsb3cgYXJlIHByaXZhdGUg4oCUIGludGVybmFsIGNvZGUgdGhhdCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWNcbi8vIHZlcnNpb25pbmcuXG4vLyBXZSB3aWxsIHRyeSBoYXJkIHRvIGF2b2lkIGJyZWFraW5nIGNoYW5nZXMsIGJ1dCBpZiB5b3UgZGVwZW5kIG9uIHRoZVxuLy8gZm9sbG93aW5nIGV4cG9ydHMsIHdlIHJlY29tbWVuZCB0aGF0IHlvdSBkbyBzbyB3aXRoIGFuIGV4YWN0IHZlcnNpb25cbi8vIGNvbnN0cmFpbnQgKG5vIH4gb3IgXikuXG5leHBvcnQgeyByZXF1ZXN0SGVhZGVyLCByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uLCB9IGZyb20gXCIuL3JlcXVlc3QtaGVhZGVyLmpzXCI7XG5leHBvcnQgeyBwYXJzZUNvbnRlbnRUeXBlLCBjb250ZW50VHlwZVJlZ0V4cCwgY29udGVudFR5cGVQcm90bywgY29udGVudFR5cGVKc29uLCB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuZXhwb3J0IHsgdmFsaWRhdGVSZXNwb25zZSwgdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbiwgfSBmcm9tIFwiLi92YWxpZGF0ZS1yZXNwb25zZS5qc1wiO1xuZXhwb3J0IHsgdHJhaWxlckZsYWcsIHRyYWlsZXJQYXJzZSwgdHJhaWxlclNlcmlhbGl6ZSwgY3JlYXRlVHJhaWxlclNlcmlhbGl6YXRpb24sIH0gZnJvbSBcIi4vdHJhaWxlci5qc1wiO1xuZXhwb3J0IHsgcGFyc2VUaW1lb3V0LCBzZXRUcmFpbGVyU3RhdHVzLCB2YWxpZGF0ZVRyYWlsZXIsIGdycGNTdGF0dXNPaywgfSBmcm9tIFwiLi4vcHJvdG9jb2wtZ3JwYy9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: function() { return /* binding */ requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* binding */ requestHeaderWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Creates headers for a gRPC-web request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    // Note that we do not support the grpc-web-text format.\n    // https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md#protocol-differences-vs-grpc-over-http2\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, useBinaryFormat ? _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeJson);\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerXGrpcWeb, \"1\");\n    // Note that we do not strictly comply with gRPC user agents.\n    // We use \"connect-es/1.2.3\" where gRPC would use \"grpc-es/1.2.3\".\n    // See https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerXUserAgent, \"connect-es/1.6.1\");\n    if (setUserAgent) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    }\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}m`);\n    }\n    return result;\n}\n/**\n * Creates headers for a gRPC-web request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression, setUserAgent) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent);\n    if (sendCompression != null) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9yZXF1ZXN0LWhlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEo7QUFDcEY7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0hBQXdIO0FBQ3hIO0FBQ0E7QUFDQSxlQUFlLDBEQUFpQixvQkFBb0IsOERBQWdCLEdBQUcsNkRBQWU7QUFDdEYsZUFBZSx1REFBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLHlEQUFnQjtBQUMvQjtBQUNBLG1CQUFtQix3REFBZTtBQUNsQztBQUNBO0FBQ0EsbUJBQW1CLHNEQUFhLEtBQUssVUFBVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFjO0FBQ2pDO0FBQ0E7QUFDQSxtQkFBbUIsNkRBQW9CO0FBQ3ZDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9yZXF1ZXN0LWhlYWRlci5qcz8yMGUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBoZWFkZXJBY2NlcHRFbmNvZGluZywgaGVhZGVyQ29udGVudFR5cGUsIGhlYWRlckVuY29kaW5nLCBoZWFkZXJUaW1lb3V0LCBoZWFkZXJYR3JwY1dlYiwgaGVhZGVyVXNlckFnZW50LCBoZWFkZXJYVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlSnNvbiwgY29udGVudFR5cGVQcm90byB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQy13ZWIgcmVxdWVzdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXIodXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICAvLyBOb3RlIHRoYXQgd2UgZG8gbm90IHN1cHBvcnQgdGhlIGdycGMtd2ViLXRleHQgZm9ybWF0LlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncnBjL2dycGMvYmxvYi9tYXN0ZXIvZG9jL1BST1RPQ09MLVdFQi5tZCNwcm90b2NvbC1kaWZmZXJlbmNlcy12cy1ncnBjLW92ZXItaHR0cDJcbiAgICByZXN1bHQuc2V0KGhlYWRlckNvbnRlbnRUeXBlLCB1c2VCaW5hcnlGb3JtYXQgPyBjb250ZW50VHlwZVByb3RvIDogY29udGVudFR5cGVKc29uKTtcbiAgICByZXN1bHQuc2V0KGhlYWRlclhHcnBjV2ViLCBcIjFcIik7XG4gICAgLy8gTm90ZSB0aGF0IHdlIGRvIG5vdCBzdHJpY3RseSBjb21wbHkgd2l0aCBnUlBDIHVzZXIgYWdlbnRzLlxuICAgIC8vIFdlIHVzZSBcImNvbm5lY3QtZXMvMS4yLjNcIiB3aGVyZSBnUlBDIHdvdWxkIHVzZSBcImdycGMtZXMvMS4yLjNcIi5cbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2dycGMvZ3JwYy9ibG9iL2M0NjJiYjhkNDg1ZmMxNDM0ZWNmYWU0Mzg4MjNjYThkMTRjZjMxNTQvZG9jL1BST1RPQ09MLUhUVFAyLm1kI3VzZXItYWdlbnRzXG4gICAgcmVzdWx0LnNldChoZWFkZXJYVXNlckFnZW50LCBcImNvbm5lY3QtZXMvMS42LjFcIik7XG4gICAgaWYgKHNldFVzZXJBZ2VudCkge1xuICAgICAgICByZXN1bHQuc2V0KGhlYWRlclVzZXJBZ2VudCwgXCJjb25uZWN0LWVzLzEuNi4xXCIpO1xuICAgIH1cbiAgICBpZiAodGltZW91dE1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJUaW1lb3V0LCBgJHt0aW1lb3V0TXN9bWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQy13ZWIgcmVxdWVzdCB3aXRoIGNvbXByZXNzaW9uLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdEhlYWRlcldpdGhDb21wcmVzc2lvbih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycywgYWNjZXB0Q29tcHJlc3Npb24sIHNlbmRDb21wcmVzc2lvbiwgc2V0VXNlckFnZW50KSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcmVxdWVzdEhlYWRlcih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycywgc2V0VXNlckFnZW50KTtcbiAgICBpZiAoc2VuZENvbXByZXNzaW9uICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJFbmNvZGluZywgc2VuZENvbXByZXNzaW9uLm5hbWUpO1xuICAgIH1cbiAgICBpZiAoYWNjZXB0Q29tcHJlc3Npb24ubGVuZ3RoID4gMCkge1xuICAgICAgICByZXN1bHQuc2V0KGhlYWRlckFjY2VwdEVuY29kaW5nLCBhY2NlcHRDb21wcmVzc2lvbi5tYXAoKGMpID0+IGMubmFtZSkuam9pbihcIixcIikpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTrailerSerialization: function() { return /* binding */ createTrailerSerialization; },\n/* harmony export */   trailerFlag: function() { return /* binding */ trailerFlag; },\n/* harmony export */   trailerParse: function() { return /* binding */ trailerParse; },\n/* harmony export */   trailerSerialize: function() { return /* binding */ trailerSerialize; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * trailerFlag indicates that the data in a EnvelopedMessage\n * is a set of trailers of the gRPC-web protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst trailerFlag = 0b10000000;\n/**\n * Parse a gRPC-web trailer, a set of header fields separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerParse(data) {\n    const headers = new Headers();\n    const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n    for (const line of lines) {\n        if (line === \"\") {\n            continue;\n        }\n        const i = line.indexOf(\":\");\n        if (i > 0) {\n            const name = line.substring(0, i).trim();\n            const value = line.substring(i + 1).trim();\n            headers.append(name, value);\n        }\n    }\n    return headers;\n}\n/**\n * Serialize a Headers object as a gRPC-web trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerSerialize(trailer) {\n    const lines = [];\n    trailer.forEach((value, key) => {\n        lines.push(`${key}: ${value}\\r\\n`);\n    });\n    return new TextEncoder().encode(lines.join(\"\"));\n}\n/**\n * Create a Serialization object that serializes a gRPC-web trailer, a Headers\n * object that is serialized as a set of header fields, separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createTrailerSerialization() {\n    return {\n        serialize: trailerSerialize,\n        parse: trailerParse,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi90cmFpbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixJQUFJLElBQUksTUFBTTtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi90cmFpbGVyLmpzPzVhODciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogdHJhaWxlckZsYWcgaW5kaWNhdGVzIHRoYXQgdGhlIGRhdGEgaW4gYSBFbnZlbG9wZWRNZXNzYWdlXG4gKiBpcyBhIHNldCBvZiB0cmFpbGVycyBvZiB0aGUgZ1JQQy13ZWIgcHJvdG9jb2wuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFpbGVyRmxhZyA9IDBiMTAwMDAwMDA7XG4vKipcbiAqIFBhcnNlIGEgZ1JQQy13ZWIgdHJhaWxlciwgYSBzZXQgb2YgaGVhZGVyIGZpZWxkcyBzZXBhcmF0ZWQgYnkgQ1JMRi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWlsZXJQYXJzZShkYXRhKSB7XG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgY29uc3QgbGluZXMgPSBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSkuc3BsaXQoXCJcXHJcXG5cIik7XG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgICAgIGlmIChsaW5lID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpID0gbGluZS5pbmRleE9mKFwiOlwiKTtcbiAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gbGluZS5zdWJzdHJpbmcoMCwgaSkudHJpbSgpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBsaW5lLnN1YnN0cmluZyhpICsgMSkudHJpbSgpO1xuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoZWFkZXJzO1xufVxuLyoqXG4gKiBTZXJpYWxpemUgYSBIZWFkZXJzIG9iamVjdCBhcyBhIGdSUEMtd2ViIHRyYWlsZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFpbGVyU2VyaWFsaXplKHRyYWlsZXIpIHtcbiAgICBjb25zdCBsaW5lcyA9IFtdO1xuICAgIHRyYWlsZXIuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBsaW5lcy5wdXNoKGAke2tleX06ICR7dmFsdWV9XFxyXFxuYCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShsaW5lcy5qb2luKFwiXCIpKTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgU2VyaWFsaXphdGlvbiBvYmplY3QgdGhhdCBzZXJpYWxpemVzIGEgZ1JQQy13ZWIgdHJhaWxlciwgYSBIZWFkZXJzXG4gKiBvYmplY3QgdGhhdCBpcyBzZXJpYWxpemVkIGFzIGEgc2V0IG9mIGhlYWRlciBmaWVsZHMsIHNlcGFyYXRlZCBieSBDUkxGLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhaWxlclNlcmlhbGl6YXRpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2VyaWFsaXplOiB0cmFpbGVyU2VyaWFsaXplLFxuICAgICAgICBwYXJzZTogdHJhaWxlclBhcnNlLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol-grpc/validate-trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the gRPC-web protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)((0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.createAsyncIterable)([req.message]), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const { trailer, message } = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipeTo)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _trailer_js__WEBPACK_IMPORTED_MODULE_7__.trailerFlag, (0,_trailer_js__WEBPACK_IMPORTED_MODULE_7__.createTrailerSerialization)()), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        let trailer;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                const env = _c;\n                                if (env.end) {\n                                    if (trailer !== undefined) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented);\n                                    }\n                                    trailer = env.value;\n                                }\n                                else {\n                                    if (message !== undefined) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra output message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented);\n                                    }\n                                    message = env.value;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return { trailer, message };\n                    }, {\n                        propagateDownStreamError: false,\n                    });\n                    if (trailer === undefined) {\n                        if (headerError != undefined) {\n                            throw headerError;\n                        }\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing trailer\", uRes.header.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus)\n                            ? _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented\n                            : _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unknown);\n                    }\n                    (0,_protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__.validateTrailer)(trailer, uRes.header);\n                    if (message === undefined) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing output message for unary method\", trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus) ? _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented : _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unknown);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    if (headerError) {\n                        throw headerError;\n                    }\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _trailer_js__WEBPACK_IMPORTED_MODULE_7__.trailerFlag, (0,_trailer_js__WEBPACK_IMPORTED_MODULE_7__.createTrailerSerialization)()), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_2, _b, _c;\n                                if (foundStatus) {\n                                    // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                                    // response (a response without a body and no trailers).\n                                    //\n                                    // The spec seems to disallow a trailers-only response for status 0 - we are\n                                    // lenient and only verify that the body is empty.\n                                    //\n                                    // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                                    // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                                    const r = yield __await(iterable[Symbol.asyncIterator]().next());\n                                    if (r.done !== true) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: extra data for trailers-only\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                    }\n                                    return yield __await(void 0);\n                                }\n                                let trailerReceived = false;\n                                try {\n                                    for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                                        _c = iterable_2_1.value;\n                                        _d = false;\n                                        const chunk = _c;\n                                        if (chunk.end) {\n                                            if (trailerReceived) {\n                                                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                            }\n                                            trailerReceived = true;\n                                            (0,_protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__.validateTrailer)(chunk.value, uRes.header);\n                                            chunk.value.forEach((value, key) => res.trailer.set(key, value));\n                                            continue;\n                                        }\n                                        if (trailerReceived) {\n                                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra message after trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                        }\n                                        yield yield __await(chunk.value);\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                                if (!trailerReceived) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Internal);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: function() { return /* binding */ validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* binding */ validateResponseWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n/* harmony import */ var _protocol_grpc_http_status_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../protocol-grpc/http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\");\n/* harmony import */ var _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol-grpc/trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Validates response status and header for the gRPC-web protocol.\n *\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    var _a;\n    // For compatibility with the `grpc-web` package, we treat all HTTP status\n    // codes in the 200 range as valid, not just HTTP 200.\n    if (status >= 200 && status < 300) {\n        return {\n            foundStatus: headers.has(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus),\n            headerError: (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_1__.findTrailerError)(headers),\n        };\n    }\n    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(decodeURIComponent((_a = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage)) !== null && _a !== void 0 ? _a : `HTTP ${status}`), (0,_protocol_grpc_http_status_js__WEBPACK_IMPORTED_MODULE_3__.codeFromHttpStatus)(status), headers);\n}\n/**\n * Validates response status and header for the gRPC-web protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus, headerError } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Internal, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n        headerError,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi92YWxpZGF0ZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDa0Q7QUFDZjtBQUNDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5REFBZ0I7QUFDckQseUJBQXlCLGtGQUFnQjtBQUN6QztBQUNBO0FBQ0EsY0FBYywyREFBWSxzQ0FBc0MsMERBQWlCLDRDQUE0QyxPQUFPLElBQUksaUZBQWtCO0FBQzFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQSxpQ0FBaUMsdURBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFZLG1DQUFtQyxTQUFTLElBQUksMENBQUk7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi92YWxpZGF0ZS1yZXNwb25zZS5qcz85NjljIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJFbmNvZGluZywgaGVhZGVyR3JwY01lc3NhZ2UsIGhlYWRlckdycGNTdGF0dXMsIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgY29kZUZyb21IdHRwU3RhdHVzIH0gZnJvbSBcIi4uL3Byb3RvY29sLWdycGMvaHR0cC1zdGF0dXMuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi4vcHJvdG9jb2wtZ3JwYy90cmFpbGVyLXN0YXR1cy5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDLXdlYiBwcm90b2NvbC5cbiAqXG4gKiBUaHJvd3MgYSBDb25uZWN0RXJyb3IgaWYgdGhlIGhlYWRlciBjb250YWlucyBhbiBlcnJvciBzdGF0dXMsXG4gKiBvciBpZiB0aGUgSFRUUCBzdGF0dXMgaW5kaWNhdGVzIGFuIGVycm9yLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmRcbiAqIGluIHRoZSByZXNwb25zZSBoZWFkZXIuIEluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhXG4gKiB0cmFpbGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZShzdGF0dXMsIGhlYWRlcnMpIHtcbiAgICB2YXIgX2E7XG4gICAgLy8gRm9yIGNvbXBhdGliaWxpdHkgd2l0aCB0aGUgYGdycGMtd2ViYCBwYWNrYWdlLCB3ZSB0cmVhdCBhbGwgSFRUUCBzdGF0dXNcbiAgICAvLyBjb2RlcyBpbiB0aGUgMjAwIHJhbmdlIGFzIHZhbGlkLCBub3QganVzdCBIVFRQIDIwMC5cbiAgICBpZiAoc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZvdW5kU3RhdHVzOiBoZWFkZXJzLmhhcyhoZWFkZXJHcnBjU3RhdHVzKSxcbiAgICAgICAgICAgIGhlYWRlckVycm9yOiBmaW5kVHJhaWxlckVycm9yKGhlYWRlcnMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGRlY29kZVVSSUNvbXBvbmVudCgoX2EgPSBoZWFkZXJzLmdldChoZWFkZXJHcnBjTWVzc2FnZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGBIVFRQICR7c3RhdHVzfWApLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG59XG4vKipcbiAqIFZhbGlkYXRlcyByZXNwb25zZSBzdGF0dXMgYW5kIGhlYWRlciBmb3IgdGhlIGdSUEMtd2ViIHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHJlc3BvbnNlIGNvbXByZXNzaW9uLCBhbmQgYSBib29sZWFuXG4gKiBpbmRpY2F0aW5nIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmQgaW4gdGhlIHJlc3BvbnNlIGhlYWRlclxuICogKGluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhIHRyYWlsZXIpLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihhY2NlcHRDb21wcmVzc2lvbiwgc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgeyBmb3VuZFN0YXR1cywgaGVhZGVyRXJyb3IgfSA9IHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKTtcbiAgICBsZXQgY29tcHJlc3Npb247XG4gICAgY29uc3QgZW5jb2RpbmcgPSBoZWFkZXJzLmdldChoZWFkZXJFbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9PSBudWxsICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb21wcmVzc2lvbiA9IGFjY2VwdENvbXByZXNzaW9uLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gZW5jb2RpbmcpO1xuICAgICAgICBpZiAoIWNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCByZXNwb25zZSBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgLCBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBmb3VuZFN0YXR1cyxcbiAgICAgICAgY29tcHJlc3Npb24sXG4gICAgICAgIGhlYWRlckVycm9yLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: function() { return /* binding */ contentTypeJson; },\n/* harmony export */   contentTypeProto: function() { return /* binding */ contentTypeProto; },\n/* harmony export */   contentTypeRegExp: function() { return /* binding */ contentTypeRegExp; },\n/* harmony export */   parseContentType: function() { return /* binding */ parseContentType; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc+proto\";\nconst contentTypeJson = \"application/grpc+json\";\n/**\n * Parse a gRPC Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const binary = !match[1];\n    return { binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMvY29udGVudC10eXBlLmpzPzhiNmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhbnkgdmFsaWQgZ1JQQyBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgY29udGVudFR5cGVSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvZ3JwYyg/OlxcKyg/Oihqc29uKSg/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pKT8kL2k7XG5leHBvcnQgY29uc3QgY29udGVudFR5cGVQcm90byA9IFwiYXBwbGljYXRpb24vZ3JwYytwcm90b1wiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlSnNvbiA9IFwiYXBwbGljYXRpb24vZ3JwYytqc29uXCI7XG4vKipcbiAqIFBhcnNlIGEgZ1JQQyBDb250ZW50LVR5cGUgaGVhZGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb250ZW50VHlwZShjb250ZW50VHlwZSkge1xuICAgIGNvbnN0IG1hdGNoID0gY29udGVudFR5cGUgPT09IG51bGwgfHwgY29udGVudFR5cGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnRUeXBlLm1hdGNoKGNvbnRlbnRUeXBlUmVnRXhwKTtcbiAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGJpbmFyeSA9ICFtYXRjaFsxXTtcbiAgICByZXR1cm4geyBiaW5hcnkgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Status: function() { return /* binding */ Status; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * The `Status` type defines a logical error model that is suitable for different\n * programming environments, including REST APIs and RPC APIs. It is used by\n * [gRPC](https://github.com/grpc). The error model is designed to be:\n *\n * - Simple to use and understand for most users\n * - Flexible enough to meet unexpected needs\n *\n * # Overview\n *\n * The `Status` message contains three pieces of data: error code, error message,\n * and error details. The error code should be an enum value of\n * [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\n * error message should be a developer-facing English message that helps\n * developers *understand* and *resolve* the error. If a localized user-facing\n * error message is needed, put the localized message in the error details or\n * localize it in the client. The optional error details may contain arbitrary\n * information about the error. There is a predefined set of error detail types\n * in the package `google.rpc` which can be used for common error conditions.\n *\n * # Language mapping\n *\n * The `Status` message is the logical representation of the error model, but it\n * is not necessarily the actual wire format. When the `Status` message is\n * exposed in different client libraries and different wire protocols, it can be\n * mapped differently. For example, it will likely be mapped to some exceptions\n * in Java, but more likely mapped to some error codes in C.\n *\n * # Other uses\n *\n * The error model and the `Status` message can be used in a variety of\n * environments, either with or without APIs, to provide a\n * consistent developer experience across different environments.\n *\n * Example uses of this error model include:\n *\n * - Partial errors. If a service needs to return partial errors to the client,\n *     it may embed the `Status` in the normal response to indicate the partial\n *     errors.\n *\n * - Workflow errors. A typical workflow has multiple steps. Each step may\n *     have a `Status` message for error reporting purpose.\n *\n * - Batch operations. If a client uses batch request and batch response, the\n *     `Status` message should be used directly inside batch response, one for\n *     each error sub-response.\n *\n * - Asynchronous operations. If an API call embeds asynchronous operation\n *     results in its response, the status of those operations should be\n *     represented directly using the `Status` message.\n *\n * - Logging. If some API errors are stored in logs, the message `Status` could\n *     be used directly after any stripping needed for security/privacy reasons.\n *\n * @generated from message google.rpc.Status\n */\nclass Status extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There will be a\n         * common set of message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */\n        this.details = [];\n        _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(Status, a, b);\n    }\n}\nStatus.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\nStatus.typeName = \"google.rpc.Status\";\nStatus.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"details\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Any, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: function() { return /* binding */ createHandlerFactory; }\n/* harmony export */ });\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse-timeout.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol/compression.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/universal.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    function fact(spec) {\n        const h = createHandler(opt, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_2__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType));\n        if (type == undefined) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_8__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerGrpcStatus]: _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformParseEnvelope)(serialization.getI(type.binary)));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformJoinEnvelopes)(), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_14__.Code.Internal, undefined, undefined, e));\n            }\n        }), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.untilFirst)(outputIt), header: context.responseHeader, trailer: context.responseTrailer });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: function() { return /* binding */ headerAcceptEncoding; },\n/* harmony export */   headerContentType: function() { return /* binding */ headerContentType; },\n/* harmony export */   headerEncoding: function() { return /* binding */ headerEncoding; },\n/* harmony export */   headerGrpcMessage: function() { return /* binding */ headerGrpcMessage; },\n/* harmony export */   headerGrpcStatus: function() { return /* binding */ headerGrpcStatus; },\n/* harmony export */   headerMessageType: function() { return /* binding */ headerMessageType; },\n/* harmony export */   headerStatusDetailsBin: function() { return /* binding */ headerStatusDetailsBin; },\n/* harmony export */   headerTimeout: function() { return /* binding */ headerTimeout; },\n/* harmony export */   headerUserAgent: function() { return /* binding */ headerUserAgent; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerEncoding = \"Grpc-Encoding\";\nconst headerAcceptEncoding = \"Grpc-Accept-Encoding\";\nconst headerTimeout = \"Grpc-Timeout\";\nconst headerGrpcStatus = \"Grpc-Status\";\nconst headerGrpcMessage = \"Grpc-Message\";\nconst headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nconst headerMessageType = \"Grpc-Message-Type\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy9oZWFkZXJzLmpzPzliMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBoZWFkZXJDb250ZW50VHlwZSA9IFwiQ29udGVudC1UeXBlXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyRW5jb2RpbmcgPSBcIkdycGMtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJBY2NlcHRFbmNvZGluZyA9IFwiR3JwYy1BY2NlcHQtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJUaW1lb3V0ID0gXCJHcnBjLVRpbWVvdXRcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJHcnBjU3RhdHVzID0gXCJHcnBjLVN0YXR1c1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlckdycGNNZXNzYWdlID0gXCJHcnBjLU1lc3NhZ2VcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJTdGF0dXNEZXRhaWxzQmluID0gXCJHcnBjLVN0YXR1cy1EZXRhaWxzLUJpblwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlck1lc3NhZ2VUeXBlID0gXCJHcnBjLU1lc3NhZ2UtVHlwZVwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVzZXJBZ2VudCA9IFwiVXNlci1BZ2VudFwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: function() { return /* binding */ codeFromHttpStatus; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Determine the gRPC-web error code for the given HTTP status code.\n * See https://github.com/grpc/grpc/blob/master/doc/http-grpc-status-mapping.md.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n        case 401: // Unauthorized\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated;\n        case 403: // Forbidden\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied;\n        case 404: // Not Found\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 502: // Bad Gateway\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 503: // Service Unavailable\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        default:\n            // 200 is UNKNOWN because there should be a grpc-status in case of truly OK response.\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2h0dHAtc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0E7QUFDQSxtQkFBbUIsMENBQUk7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2h0dHAtc3RhdHVzLmpzPzliYzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBEZXRlcm1pbmUgdGhlIGdSUEMtd2ViIGVycm9yIGNvZGUgZm9yIHRoZSBnaXZlbiBIVFRQIHN0YXR1cyBjb2RlLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ncnBjL2dycGMvYmxvYi9tYXN0ZXIvZG9jL2h0dHAtZ3JwYy1zdGF0dXMtbWFwcGluZy5tZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVGcm9tSHR0cFN0YXR1cyhodHRwU3RhdHVzKSB7XG4gICAgc3dpdGNoIChodHRwU3RhdHVzKSB7XG4gICAgICAgIGNhc2UgNDAwOiAvLyBCYWQgUmVxdWVzdFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuSW50ZXJuYWw7XG4gICAgICAgIGNhc2UgNDAxOiAvLyBVbmF1dGhvcml6ZWRcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXV0aGVudGljYXRlZDtcbiAgICAgICAgY2FzZSA0MDM6IC8vIEZvcmJpZGRlblxuICAgICAgICAgICAgcmV0dXJuIENvZGUuUGVybWlzc2lvbkRlbmllZDtcbiAgICAgICAgY2FzZSA0MDQ6IC8vIE5vdCBGb3VuZFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5pbXBsZW1lbnRlZDtcbiAgICAgICAgY2FzZSA0Mjk6IC8vIFRvbyBNYW55IFJlcXVlc3RzXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDI6IC8vIEJhZCBHYXRld2F5XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDM6IC8vIFNlcnZpY2UgVW5hdmFpbGFibGVcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXZhaWxhYmxlO1xuICAgICAgICBjYXNlIDUwNDogLy8gR2F0ZXdheSBUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIC8vIDIwMCBpcyBVTktOT1dOIGJlY2F1c2UgdGhlcmUgc2hvdWxkIGJlIGEgZ3JwYy1zdGF0dXMgaW4gY2FzZSBvZiB0cnVseSBPSyByZXNwb25zZS5cbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVua25vd247XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: function() { return /* reexport safe */ _http_status_js__WEBPACK_IMPORTED_MODULE_2__.codeFromHttpStatus; },\n/* harmony export */   contentTypeJson: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeJson; },\n/* harmony export */   contentTypeProto: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeProto; },\n/* harmony export */   contentTypeRegExp: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeRegExp; },\n/* harmony export */   createHandlerFactory: function() { return /* reexport safe */ _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__.createHandlerFactory; },\n/* harmony export */   createTransport: function() { return /* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.createTransport; },\n/* harmony export */   findTrailerError: function() { return /* reexport safe */ _trailer_status_js__WEBPACK_IMPORTED_MODULE_6__.findTrailerError; },\n/* harmony export */   grpcStatusOk: function() { return /* reexport safe */ _trailer_status_js__WEBPACK_IMPORTED_MODULE_6__.grpcStatusOk; },\n/* harmony export */   parseContentType: function() { return /* reexport safe */ _content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType; },\n/* harmony export */   parseTimeout: function() { return /* reexport safe */ _parse_timeout_js__WEBPACK_IMPORTED_MODULE_5__.parseTimeout; },\n/* harmony export */   requestHeader: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* reexport safe */ _request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression; },\n/* harmony export */   setTrailerStatus: function() { return /* reexport safe */ _trailer_status_js__WEBPACK_IMPORTED_MODULE_6__.setTrailerStatus; },\n/* harmony export */   validateResponse: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_7__.validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* reexport safe */ _validate_response_js__WEBPACK_IMPORTED_MODULE_7__.validateResponseWithCompression; },\n/* harmony export */   validateTrailer: function() { return /* reexport safe */ _validate_trailer_js__WEBPACK_IMPORTED_MODULE_8__.validateTrailer; }\n/* harmony export */ });\n/* harmony import */ var _handler_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parse-timeout.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js\");\n/* harmony import */ var _validate_trailer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./validate-trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _headers_js__WEBPACK_IMPORTED_MODULE_9__) if([\"default\",\"createHandlerFactory\",\"createTransport\",\"codeFromHttpStatus\",\"requestHeader\",\"requestHeaderWithCompression\",\"parseContentType\",\"contentTypeRegExp\",\"contentTypeJson\",\"contentTypeProto\",\"parseTimeout\",\"findTrailerError\",\"setTrailerStatus\",\"grpcStatusOk\",\"validateResponse\",\"validateResponseWithCompression\",\"validateTrailer\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _headers_js__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEQ7QUFDWDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3NEO0FBQzZCO0FBQ3lCO0FBQzFEO0FBQ3NDO0FBQ0k7QUFDcEM7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy9pbmRleC5qcz9lYmYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5leHBvcnQgeyBjcmVhdGVIYW5kbGVyRmFjdG9yeSB9IGZyb20gXCIuL2hhbmRsZXItZmFjdG9yeS5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSBcIi4vdHJhbnNwb3J0LmpzXCI7XG4vLyBBbGwgZXhwb3J0cyBiZWxvdyBhcmUgcHJpdmF0ZSDigJQgaW50ZXJuYWwgY29kZSB0aGF0IGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpY1xuLy8gdmVyc2lvbmluZy5cbi8vIFdlIHdpbGwgdHJ5IGhhcmQgdG8gYXZvaWQgYnJlYWtpbmcgY2hhbmdlcywgYnV0IGlmIHlvdSBkZXBlbmQgb24gdGhlXG4vLyBmb2xsb3dpbmcgZXhwb3J0cywgd2UgcmVjb21tZW5kIHRoYXQgeW91IGRvIHNvIHdpdGggYW4gZXhhY3QgdmVyc2lvblxuLy8gY29uc3RyYWludCAobm8gfiBvciBeKS5cbmV4cG9ydCB7IGNvZGVGcm9tSHR0cFN0YXR1cyB9IGZyb20gXCIuL2h0dHAtc3RhdHVzLmpzXCI7XG5leHBvcnQgeyByZXF1ZXN0SGVhZGVyLCByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uLCB9IGZyb20gXCIuL3JlcXVlc3QtaGVhZGVyLmpzXCI7XG5leHBvcnQgeyBwYXJzZUNvbnRlbnRUeXBlLCBjb250ZW50VHlwZVJlZ0V4cCwgY29udGVudFR5cGVKc29uLCBjb250ZW50VHlwZVByb3RvLCB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuZXhwb3J0IHsgcGFyc2VUaW1lb3V0IH0gZnJvbSBcIi4vcGFyc2UtdGltZW91dC5qc1wiO1xuZXhwb3J0IHsgZmluZFRyYWlsZXJFcnJvciwgc2V0VHJhaWxlclN0YXR1cywgZ3JwY1N0YXR1c09rLCB9IGZyb20gXCIuL3RyYWlsZXItc3RhdHVzLmpzXCI7XG5leHBvcnQgeyB2YWxpZGF0ZVJlc3BvbnNlLCB2YWxpZGF0ZVJlc3BvbnNlV2l0aENvbXByZXNzaW9uLCB9IGZyb20gXCIuL3ZhbGlkYXRlLXJlc3BvbnNlLmpzXCI7XG5leHBvcnQgeyB2YWxpZGF0ZVRyYWlsZXIgfSBmcm9tIFwiLi92YWxpZGF0ZS10cmFpbGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: function() { return /* binding */ parseTimeout; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a gRPC Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^(\\d{1,8})([HMSmun])$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid grpc timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const unitToMultiplicand = {\n        H: 60 * 60 * 1000, // hour\n        M: 60 * 1000, // minute\n        S: 1000, // second\n        m: 1, // millisecond\n        u: 0.001, // microsecond\n        n: 0.000001, // nanosecond\n    };\n    const timeoutMs = unitToMultiplicand[results[2]] *\n        parseInt(results[1]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLElBQUk7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxnREFBZ0QsTUFBTSxHQUFHLDBDQUFJO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy9wYXJzZS10aW1lb3V0LmpzPzgxY2EiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbi8qKlxuICogUGFyc2UgYSBnUlBDIFRpbWVvdXQgKERlYWRsaW5lKSBoZWFkZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVRpbWVvdXQodmFsdWUsIG1heFRpbWVvdXRNcykge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSAvXihcXGR7MSw4fSkoW0hNU211bl0pJC8uZXhlYyh2YWx1ZSk7XG4gICAgaWYgKHJlc3VsdHMgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBuZXcgQ29ubmVjdEVycm9yKGBwcm90b2NvbCBlcnJvcjogaW52YWxpZCBncnBjIHRpbWVvdXQgdmFsdWU6ICR7dmFsdWV9YCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB1bml0VG9NdWx0aXBsaWNhbmQgPSB7XG4gICAgICAgIEg6IDYwICogNjAgKiAxMDAwLCAvLyBob3VyXG4gICAgICAgIE06IDYwICogMTAwMCwgLy8gbWludXRlXG4gICAgICAgIFM6IDEwMDAsIC8vIHNlY29uZFxuICAgICAgICBtOiAxLCAvLyBtaWxsaXNlY29uZFxuICAgICAgICB1OiAwLjAwMSwgLy8gbWljcm9zZWNvbmRcbiAgICAgICAgbjogMC4wMDAwMDEsIC8vIG5hbm9zZWNvbmRcbiAgICB9O1xuICAgIGNvbnN0IHRpbWVvdXRNcyA9IHVuaXRUb011bHRpcGxpY2FuZFtyZXN1bHRzWzJdXSAqXG4gICAgICAgIHBhcnNlSW50KHJlc3VsdHNbMV0pO1xuICAgIGlmICh0aW1lb3V0TXMgPiBtYXhUaW1lb3V0TXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRpbWVvdXRNczogdGltZW91dE1zLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyBDb25uZWN0RXJyb3IoYHRpbWVvdXQgJHt0aW1lb3V0TXN9bXMgbXVzdCBiZSA8PSAke21heFRpbWVvdXRNc31gLCBDb2RlLkludmFsaWRBcmd1bWVudCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHRpbWVvdXRNcyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: function() { return /* binding */ requestHeader; },\n/* harmony export */   requestHeaderWithCompression: function() { return /* binding */ requestHeaderWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Creates headers for a gRPC request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, useBinaryFormat ? _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeJson);\n    // Note that we do not strictly comply with gRPC user agents.\n    // We use \"connect-es/1.2.3\" where gRPC would use \"grpc-es/1.2.3\".\n    // See https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}m`);\n    }\n    // The gRPC-HTTP2 specification requires this - it flushes out proxies that\n    // don't support HTTP trailers.\n    result.set(\"Te\", \"trailers\");\n    return result;\n}\n/**\n * Creates headers for a gRPC request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3JlcXVlc3QtaGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3SDtBQUNsRDtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx3SEFBd0g7QUFDeEgsZUFBZSwwREFBaUIsb0JBQW9CLDhEQUFnQixHQUFHLDZEQUFlO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0RBQWU7QUFDOUI7QUFDQSxtQkFBbUIsc0RBQWEsS0FBSyxVQUFVO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIsdURBQWM7QUFDakM7QUFDQTtBQUNBLG1CQUFtQiw2REFBb0I7QUFDdkM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMvcmVxdWVzdC1oZWFkZXIuanM/MTk1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgaGVhZGVyQWNjZXB0RW5jb2RpbmcsIGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJFbmNvZGluZywgaGVhZGVyVGltZW91dCwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlSnNvbiwgY29udGVudFR5cGVQcm90byB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQyByZXF1ZXN0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdEhlYWRlcih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycykge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICByZXN1bHQuc2V0KGhlYWRlckNvbnRlbnRUeXBlLCB1c2VCaW5hcnlGb3JtYXQgPyBjb250ZW50VHlwZVByb3RvIDogY29udGVudFR5cGVKc29uKTtcbiAgICAvLyBOb3RlIHRoYXQgd2UgZG8gbm90IHN0cmljdGx5IGNvbXBseSB3aXRoIGdSUEMgdXNlciBhZ2VudHMuXG4gICAgLy8gV2UgdXNlIFwiY29ubmVjdC1lcy8xLjIuM1wiIHdoZXJlIGdSUEMgd291bGQgdXNlIFwiZ3JwYy1lcy8xLjIuM1wiLlxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvYzQ2MmJiOGQ0ODVmYzE0MzRlY2ZhZTQzODgyM2NhOGQxNGNmMzE1NC9kb2MvUFJPVE9DT0wtSFRUUDIubWQjdXNlci1hZ2VudHNcbiAgICByZXN1bHQuc2V0KGhlYWRlclVzZXJBZ2VudCwgXCJjb25uZWN0LWVzLzEuNi4xXCIpO1xuICAgIGlmICh0aW1lb3V0TXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXN1bHQuc2V0KGhlYWRlclRpbWVvdXQsIGAke3RpbWVvdXRNc31tYCk7XG4gICAgfVxuICAgIC8vIFRoZSBnUlBDLUhUVFAyIHNwZWNpZmljYXRpb24gcmVxdWlyZXMgdGhpcyAtIGl0IGZsdXNoZXMgb3V0IHByb3hpZXMgdGhhdFxuICAgIC8vIGRvbid0IHN1cHBvcnQgSFRUUCB0cmFpbGVycy5cbiAgICByZXN1bHQuc2V0KFwiVGVcIiwgXCJ0cmFpbGVyc1wiKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQyByZXF1ZXN0IHdpdGggY29tcHJlc3Npb24uXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uKHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBhY2NlcHRDb21wcmVzc2lvbiwgc2VuZENvbXByZXNzaW9uKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcmVxdWVzdEhlYWRlcih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycyk7XG4gICAgaWYgKHNlbmRDb21wcmVzc2lvbiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5zZXQoaGVhZGVyRW5jb2RpbmcsIHNlbmRDb21wcmVzc2lvbi5uYW1lKTtcbiAgICB9XG4gICAgaWYgKGFjY2VwdENvbXByZXNzaW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJBY2NlcHRFbmNvZGluZywgYWNjZXB0Q29tcHJlc3Npb24ubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findTrailerError: function() { return /* binding */ findTrailerError; },\n/* harmony export */   grpcStatusOk: function() { return /* binding */ grpcStatusOk; },\n/* harmony export */   setTrailerStatus: function() { return /* binding */ setTrailerStatus; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gen/status_pb.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * The value of the Grpc-Status header or trailer in case of success.\n * Used by the gRPC and gRPC-web protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst grpcStatusOk = \"0\";\n/**\n * Sets the fields \"grpc-status\" and \"grpc-message\" in the given\n * Headers object.\n * If an error is given and contains error details, the function\n * will also set the field \"grpc-status-details-bin\" with an encoded\n * google.rpc.Status message including the error details.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction setTrailerStatus(target, error) {\n    if (error) {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, error.code.toString(10));\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage, encodeURIComponent(error.rawMessage));\n        if (error.details.length > 0) {\n            const status = new _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status({\n                code: error.code,\n                message: error.rawMessage,\n                details: error.details.map((value) => \"getType\" in value\n                    ? _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any.pack(value)\n                    : new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any({\n                        typeUrl: `type.googleapis.com/${value.type}`,\n                        value: value.value,\n                    })),\n            });\n            target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.encodeBinaryHeader)(status));\n        }\n    }\n    else {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, grpcStatusOk.toString());\n    }\n    return target;\n}\n/**\n * Find an error status in the given Headers object, which can be either\n * a trailer, or a header (as allowed for so-called trailers-only responses).\n * The field \"grpc-status-details-bin\" is inspected, and if not present,\n * the fields \"grpc-status\" and \"grpc-message\" are used.\n * Returns an error only if the gRPC status code is > 0.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction findTrailerError(headerOrTrailer) {\n    // TODO\n    // let code: Code;\n    // let message: string = \"\";\n    var _a;\n    // Prefer the protobuf-encoded data to the grpc-status header.\n    const statusBytes = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin);\n    if (statusBytes != null) {\n        const status = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.decodeBinaryHeader)(statusBytes, _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status);\n        if (status.code == 0) {\n            return undefined;\n        }\n        const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(status.message, status.code, headerOrTrailer);\n        error.details = status.details.map((any) => ({\n            type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n            value: any.value,\n        }));\n        return error;\n    }\n    const grpcStatus = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus);\n    if (grpcStatus != null) {\n        if (grpcStatus === grpcStatusOk) {\n            return undefined;\n        }\n        const code = parseInt(grpcStatus, 10);\n        if (code in _code_js__WEBPACK_IMPORTED_MODULE_5__.Code) {\n            return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(decodeURIComponent((_a = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n        }\n        return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(`invalid grpc-status: ${grpcStatus}`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headerOrTrailer);\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3RyYWlsZXItc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lDO0FBQ0c7QUFDTztBQUN5QjtBQUMxQztBQUMwRDtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DLG1CQUFtQiwwREFBaUI7QUFDcEM7QUFDQSwrQkFBK0IscURBQU07QUFDckM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFHO0FBQ3pCLDBCQUEwQixtREFBRztBQUM3Qix3REFBd0QsV0FBVztBQUNuRTtBQUNBLHFCQUFxQjtBQUNyQixhQUFhO0FBQ2IsdUJBQXVCLCtEQUFzQixFQUFFLG9FQUFrQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywrREFBc0I7QUFDbEU7QUFDQSx1QkFBdUIsb0VBQWtCLGNBQWMscURBQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkNBQTJDLHlEQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBDQUFJO0FBQ3hCLHVCQUF1QiwyREFBWSw4Q0FBOEMsMERBQWlCO0FBQ2xHO0FBQ0EsbUJBQW1CLDJEQUFZLHlCQUF5QixXQUFXLEdBQUcsMENBQUk7QUFDMUU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMvdHJhaWxlci1zdGF0dXMuanM/ZDA4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQW55IH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuaW1wb3J0IHsgU3RhdHVzIH0gZnJvbSBcIi4vZ2VuL3N0YXR1c19wYi5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IGRlY29kZUJpbmFyeUhlYWRlciwgZW5jb2RlQmluYXJ5SGVhZGVyIH0gZnJvbSBcIi4uL2h0dHAtaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJHcnBjTWVzc2FnZSwgaGVhZGVyR3JwY1N0YXR1cywgaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG4vKipcbiAqIFRoZSB2YWx1ZSBvZiB0aGUgR3JwYy1TdGF0dXMgaGVhZGVyIG9yIHRyYWlsZXIgaW4gY2FzZSBvZiBzdWNjZXNzLlxuICogVXNlZCBieSB0aGUgZ1JQQyBhbmQgZ1JQQy13ZWIgcHJvdG9jb2xzLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgZ3JwY1N0YXR1c09rID0gXCIwXCI7XG4vKipcbiAqIFNldHMgdGhlIGZpZWxkcyBcImdycGMtc3RhdHVzXCIgYW5kIFwiZ3JwYy1tZXNzYWdlXCIgaW4gdGhlIGdpdmVuXG4gKiBIZWFkZXJzIG9iamVjdC5cbiAqIElmIGFuIGVycm9yIGlzIGdpdmVuIGFuZCBjb250YWlucyBlcnJvciBkZXRhaWxzLCB0aGUgZnVuY3Rpb25cbiAqIHdpbGwgYWxzbyBzZXQgdGhlIGZpZWxkIFwiZ3JwYy1zdGF0dXMtZGV0YWlscy1iaW5cIiB3aXRoIGFuIGVuY29kZWRcbiAqIGdvb2dsZS5ycGMuU3RhdHVzIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBlcnJvciBkZXRhaWxzLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHJhaWxlclN0YXR1cyh0YXJnZXQsIGVycm9yKSB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHRhcmdldC5zZXQoaGVhZGVyR3JwY1N0YXR1cywgZXJyb3IuY29kZS50b1N0cmluZygxMCkpO1xuICAgICAgICB0YXJnZXQuc2V0KGhlYWRlckdycGNNZXNzYWdlLCBlbmNvZGVVUklDb21wb25lbnQoZXJyb3IucmF3TWVzc2FnZSkpO1xuICAgICAgICBpZiAoZXJyb3IuZGV0YWlscy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBuZXcgU3RhdHVzKHtcbiAgICAgICAgICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLnJhd01lc3NhZ2UsXG4gICAgICAgICAgICAgICAgZGV0YWlsczogZXJyb3IuZGV0YWlscy5tYXAoKHZhbHVlKSA9PiBcImdldFR5cGVcIiBpbiB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICA/IEFueS5wYWNrKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA6IG5ldyBBbnkoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZVVybDogYHR5cGUuZ29vZ2xlYXBpcy5jb20vJHt2YWx1ZS50eXBlfWAsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGFyZ2V0LnNldChoZWFkZXJTdGF0dXNEZXRhaWxzQmluLCBlbmNvZGVCaW5hcnlIZWFkZXIoc3RhdHVzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRhcmdldC5zZXQoaGVhZGVyR3JwY1N0YXR1cywgZ3JwY1N0YXR1c09rLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuLyoqXG4gKiBGaW5kIGFuIGVycm9yIHN0YXR1cyBpbiB0aGUgZ2l2ZW4gSGVhZGVycyBvYmplY3QsIHdoaWNoIGNhbiBiZSBlaXRoZXJcbiAqIGEgdHJhaWxlciwgb3IgYSBoZWFkZXIgKGFzIGFsbG93ZWQgZm9yIHNvLWNhbGxlZCB0cmFpbGVycy1vbmx5IHJlc3BvbnNlcykuXG4gKiBUaGUgZmllbGQgXCJncnBjLXN0YXR1cy1kZXRhaWxzLWJpblwiIGlzIGluc3BlY3RlZCwgYW5kIGlmIG5vdCBwcmVzZW50LFxuICogdGhlIGZpZWxkcyBcImdycGMtc3RhdHVzXCIgYW5kIFwiZ3JwYy1tZXNzYWdlXCIgYXJlIHVzZWQuXG4gKiBSZXR1cm5zIGFuIGVycm9yIG9ubHkgaWYgdGhlIGdSUEMgc3RhdHVzIGNvZGUgaXMgPiAwLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmluZFRyYWlsZXJFcnJvcihoZWFkZXJPclRyYWlsZXIpIHtcbiAgICAvLyBUT0RPXG4gICAgLy8gbGV0IGNvZGU6IENvZGU7XG4gICAgLy8gbGV0IG1lc3NhZ2U6IHN0cmluZyA9IFwiXCI7XG4gICAgdmFyIF9hO1xuICAgIC8vIFByZWZlciB0aGUgcHJvdG9idWYtZW5jb2RlZCBkYXRhIHRvIHRoZSBncnBjLXN0YXR1cyBoZWFkZXIuXG4gICAgY29uc3Qgc3RhdHVzQnl0ZXMgPSBoZWFkZXJPclRyYWlsZXIuZ2V0KGhlYWRlclN0YXR1c0RldGFpbHNCaW4pO1xuICAgIGlmIChzdGF0dXNCeXRlcyAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGRlY29kZUJpbmFyeUhlYWRlcihzdGF0dXNCeXRlcywgU3RhdHVzKTtcbiAgICAgICAgaWYgKHN0YXR1cy5jb2RlID09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgQ29ubmVjdEVycm9yKHN0YXR1cy5tZXNzYWdlLCBzdGF0dXMuY29kZSwgaGVhZGVyT3JUcmFpbGVyKTtcbiAgICAgICAgZXJyb3IuZGV0YWlscyA9IHN0YXR1cy5kZXRhaWxzLm1hcCgoYW55KSA9PiAoe1xuICAgICAgICAgICAgdHlwZTogYW55LnR5cGVVcmwuc3Vic3RyaW5nKGFueS50eXBlVXJsLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpLFxuICAgICAgICAgICAgdmFsdWU6IGFueS52YWx1ZSxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfVxuICAgIGNvbnN0IGdycGNTdGF0dXMgPSBoZWFkZXJPclRyYWlsZXIuZ2V0KGhlYWRlckdycGNTdGF0dXMpO1xuICAgIGlmIChncnBjU3RhdHVzICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGdycGNTdGF0dXMgPT09IGdycGNTdGF0dXNPaykge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2RlID0gcGFyc2VJbnQoZ3JwY1N0YXR1cywgMTApO1xuICAgICAgICBpZiAoY29kZSBpbiBDb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IENvbm5lY3RFcnJvcihkZWNvZGVVUklDb21wb25lbnQoKF9hID0gaGVhZGVyT3JUcmFpbGVyLmdldChoZWFkZXJHcnBjTWVzc2FnZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiXCIpLCBjb2RlLCBoZWFkZXJPclRyYWlsZXIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQ29ubmVjdEVycm9yKGBpbnZhbGlkIGdycGMtc3RhdHVzOiAke2dycGNTdGF0dXN9YCwgQ29kZS5JbnRlcm5hbCwgaGVhZGVyT3JUcmFpbGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate-response.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js\");\n/* harmony import */ var _validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./validate-trailer.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the gRPC protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)((0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.createAsyncIterable)([req.message]), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const message = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipeTo)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                const chunk = _c;\n                                if (message !== undefined) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: received extra output message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unimplemented);\n                                }\n                                message = chunk;\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return message;\n                    }, { propagateDownStreamError: false });\n                    (0,_validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__.validateTrailer)(uRes.trailer, uRes.header);\n                    if (message === undefined) {\n                        // Trailers only response\n                        if (headerError) {\n                            throw headerError;\n                        }\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: missing output message for unary method\", uRes.trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus)\n                            ? _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unimplemented\n                            : _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unknown);\n                    }\n                    if (headerError) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: received output message for unary method with error status\", _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unknown);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer: uRes.trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    if (headerError) {\n                        throw headerError;\n                    }\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: uRes.trailer, message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                yield __await(yield* __asyncDelegator(__asyncValues(iterable)));\n                                if (!foundStatus) {\n                                    (0,_validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__.validateTrailer)(uRes.trailer, uRes.header);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: function() { return /* binding */ validateResponse; },\n/* harmony export */   validateResponseWithCompression: function() { return /* binding */ validateResponseWithCompression; }\n/* harmony export */ });\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Validates response status and header for the gRPC protocol.\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    if (status != 200) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`HTTP ${status}`, (0,_http_status_js__WEBPACK_IMPORTED_MODULE_1__.codeFromHttpStatus)(status), headers);\n    }\n    const mimeType = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType);\n    const parsedType = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType)(mimeType);\n    if (parsedType == undefined) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unsupported content type ${mimeType}`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unknown);\n    }\n    return {\n        foundStatus: headers.has(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerGrpcStatus),\n        headerError: (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_5__.findTrailerError)(headers),\n    };\n}\n/**\n * Validates response status and header for the gRPC protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus, headerError } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Internal, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n        headerError,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3ZhbGlkYXRlLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDc0Q7QUFDSDtBQUNJO0FBQ3JCO0FBQ2tEO0FBQy9CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJEQUFZLFNBQVMsT0FBTyxHQUFHLG1FQUFrQjtBQUNuRTtBQUNBLGlDQUFpQywwREFBaUI7QUFDbEQsdUJBQXVCLGtFQUFnQjtBQUN2QztBQUNBLGtCQUFrQiwyREFBWSw2QkFBNkIsU0FBUyxHQUFHLDBDQUFJO0FBQzNFO0FBQ0E7QUFDQSxpQ0FBaUMseURBQWdCO0FBQ2pELHFCQUFxQixvRUFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksMkJBQTJCO0FBQ3ZDO0FBQ0EsaUNBQWlDLHVEQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxtQ0FBbUMsU0FBUyxJQUFJLDBDQUFJO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy92YWxpZGF0ZS1yZXNwb25zZS5qcz82NzQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBjb2RlRnJvbUh0dHBTdGF0dXMgfSBmcm9tIFwiLi9odHRwLXN0YXR1cy5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi90cmFpbGVyLXN0YXR1cy5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJDb250ZW50VHlwZSwgaGVhZGVyRW5jb2RpbmcsIGhlYWRlckdycGNTdGF0dXMsIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgcGFyc2VDb250ZW50VHlwZSB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDIHByb3RvY29sLlxuICogVGhyb3dzIGEgQ29ubmVjdEVycm9yIGlmIHRoZSBoZWFkZXIgY29udGFpbnMgYW4gZXJyb3Igc3RhdHVzLFxuICogb3IgaWYgdGhlIEhUVFAgc3RhdHVzIGluZGljYXRlcyBhbiBlcnJvci5cbiAqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIGEgZ1JQQyBzdGF0dXMgd2FzIGZvdW5kXG4gKiBpbiB0aGUgcmVzcG9uc2UgaGVhZGVyLiBJbiB0aGlzIGNhc2UsIGNsaWVudHMgY2FuIG5vdCBleHBlY3QgYVxuICogdHJhaWxlci5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgaWYgKHN0YXR1cyAhPSAyMDApIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgSFRUUCAke3N0YXR1c31gLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG4gICAgfVxuICAgIGNvbnN0IG1pbWVUeXBlID0gaGVhZGVycy5nZXQoaGVhZGVyQ29udGVudFR5cGUpO1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSBwYXJzZUNvbnRlbnRUeXBlKG1pbWVUeXBlKTtcbiAgICBpZiAocGFyc2VkVHlwZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgdW5zdXBwb3J0ZWQgY29udGVudCB0eXBlICR7bWltZVR5cGV9YCwgQ29kZS5Vbmtub3duKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZm91bmRTdGF0dXM6IGhlYWRlcnMuaGFzKGhlYWRlckdycGNTdGF0dXMpLFxuICAgICAgICBoZWFkZXJFcnJvcjogZmluZFRyYWlsZXJFcnJvcihoZWFkZXJzKSxcbiAgICB9O1xufVxuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDIHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHJlc3BvbnNlIGNvbXByZXNzaW9uLCBhbmQgYSBib29sZWFuXG4gKiBpbmRpY2F0aW5nIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmQgaW4gdGhlIHJlc3BvbnNlIGhlYWRlclxuICogKGluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhIHRyYWlsZXIpLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihhY2NlcHRDb21wcmVzc2lvbiwgc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgeyBmb3VuZFN0YXR1cywgaGVhZGVyRXJyb3IgfSA9IHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKTtcbiAgICBsZXQgY29tcHJlc3Npb247XG4gICAgY29uc3QgZW5jb2RpbmcgPSBoZWFkZXJzLmdldChoZWFkZXJFbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9PSBudWxsICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb21wcmVzc2lvbiA9IGFjY2VwdENvbXByZXNzaW9uLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gZW5jb2RpbmcpO1xuICAgICAgICBpZiAoIWNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCByZXNwb25zZSBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgLCBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBmb3VuZFN0YXR1cyxcbiAgICAgICAgY29tcHJlc3Npb24sXG4gICAgICAgIGhlYWRlckVycm9yLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateTrailer: function() { return /* binding */ validateTrailer; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trailer-status.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Validates a trailer for the gRPC and the gRPC-web protocol.\n *\n * If the trailer contains an error status, a ConnectError is\n * thrown. It will include trailer and header in the error's\n * \"metadata\" property.\n *\n * Throws a ConnectError with code \"internal\" if neither the trailer\n * nor the header contain the Grpc-Status field.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateTrailer(trailer, header) {\n    const err = (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_0__.findTrailerError)(trailer);\n    if (err) {\n        header.forEach((value, key) => {\n            err.metadata.append(key, value);\n        });\n        throw err;\n    }\n    if (!header.has(_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcStatus) && !trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcStatus)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"protocol error: missing status\", _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3ZhbGlkYXRlLXRyYWlsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNpQjtBQUNIO0FBQ087QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0Isb0VBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFnQixrQkFBa0IseURBQWdCO0FBQ3RFLGtCQUFrQiwyREFBWSxtQ0FBbUMsMENBQUk7QUFDckU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3ZhbGlkYXRlLXRyYWlsZXIuanM/ODRlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgaGVhZGVyR3JwY1N0YXR1cyB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi90cmFpbGVyLXN0YXR1cy5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgYSB0cmFpbGVyIGZvciB0aGUgZ1JQQyBhbmQgdGhlIGdSUEMtd2ViIHByb3RvY29sLlxuICpcbiAqIElmIHRoZSB0cmFpbGVyIGNvbnRhaW5zIGFuIGVycm9yIHN0YXR1cywgYSBDb25uZWN0RXJyb3IgaXNcbiAqIHRocm93bi4gSXQgd2lsbCBpbmNsdWRlIHRyYWlsZXIgYW5kIGhlYWRlciBpbiB0aGUgZXJyb3Inc1xuICogXCJtZXRhZGF0YVwiIHByb3BlcnR5LlxuICpcbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciB3aXRoIGNvZGUgXCJpbnRlcm5hbFwiIGlmIG5laXRoZXIgdGhlIHRyYWlsZXJcbiAqIG5vciB0aGUgaGVhZGVyIGNvbnRhaW4gdGhlIEdycGMtU3RhdHVzIGZpZWxkLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVUcmFpbGVyKHRyYWlsZXIsIGhlYWRlcikge1xuICAgIGNvbnN0IGVyciA9IGZpbmRUcmFpbGVyRXJyb3IodHJhaWxlcik7XG4gICAgaWYgKGVycikge1xuICAgICAgICBoZWFkZXIuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgZXJyLm1ldGFkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgaWYgKCFoZWFkZXIuaGFzKGhlYWRlckdycGNTdGF0dXMpICYmICF0cmFpbGVyLmhhcyhoZWFkZXJHcnBjU3RhdHVzKSkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKFwicHJvdG9jb2wgZXJyb3I6IG1pc3Npbmcgc3RhdHVzXCIsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncIterable: function() { return /* binding */ createAsyncIterable; },\n/* harmony export */   createWritableIterable: function() { return /* binding */ createWritableIterable; },\n/* harmony export */   makeIterableAbortable: function() { return /* binding */ makeIterableAbortable; },\n/* harmony export */   pipe: function() { return /* binding */ pipe; },\n/* harmony export */   pipeTo: function() { return /* binding */ pipeTo; },\n/* harmony export */   readAllBytes: function() { return /* binding */ readAllBytes; },\n/* harmony export */   sinkAll: function() { return /* binding */ sinkAll; },\n/* harmony export */   sinkAllBytes: function() { return /* binding */ sinkAllBytes; },\n/* harmony export */   transformAppend: function() { return /* binding */ transformAppend; },\n/* harmony export */   transformCatch: function() { return /* binding */ transformCatch; },\n/* harmony export */   transformCatchFinally: function() { return /* binding */ transformCatchFinally; },\n/* harmony export */   transformCompressEnvelope: function() { return /* binding */ transformCompressEnvelope; },\n/* harmony export */   transformDecompressEnvelope: function() { return /* binding */ transformDecompressEnvelope; },\n/* harmony export */   transformJoinEnvelopes: function() { return /* binding */ transformJoinEnvelopes; },\n/* harmony export */   transformParseEnvelope: function() { return /* binding */ transformParseEnvelope; },\n/* harmony export */   transformPrepend: function() { return /* binding */ transformPrepend; },\n/* harmony export */   transformReadAllBytes: function() { return /* binding */ transformReadAllBytes; },\n/* harmony export */   transformSerializeEnvelope: function() { return /* binding */ transformSerializeEnvelope; },\n/* harmony export */   transformSplitEnvelope: function() { return /* binding */ transformSplitEnvelope; },\n/* harmony export */   untilFirst: function() { return /* binding */ untilFirst; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./limit-io.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\nfunction pipeTo(source, ...rest) {\n    const [transforms, sink, opt] = pickTransformsAndSink(rest);\n    let iterable = source;\n    let abortable;\n    if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n        iterable = abortable = makeIterableAbortable(iterable);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    iterable = pipe(iterable, ...transforms, { propagateDownStreamError: false });\n    return sink(iterable).catch((reason) => {\n        if (abortable) {\n            return abortable.abort(reason).then(() => Promise.reject(reason));\n        }\n        return Promise.reject(reason);\n    });\n}\n// pick transforms, the sink, and options from the pipeTo() rest parameter\nfunction pickTransformsAndSink(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    const sink = rest.pop();\n    return [rest, sink, opt];\n}\n/**\n * Creates an AsyncIterableSink that concatenates all elements from the input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAll() {\n    return async function (iterable) {\n        var _a, e_1, _b, _c;\n        const all = [];\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                _c = iterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                all.push(chunk);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return all;\n    };\n}\n/**\n * Creates an AsyncIterableSink that concatenates all chunks from the input into\n * a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAllBytes(readMaxBytes, lengthHint) {\n    return async function (iterable) {\n        return await readAllBytes(iterable, readMaxBytes, lengthHint);\n    };\n}\nfunction pipe(source, ...rest) {\n    return __asyncGenerator(this, arguments, function* pipe_1() {\n        var _a;\n        const [transforms, opt] = pickTransforms(rest);\n        let abortable;\n        const sourceIt = source[Symbol.asyncIterator]();\n        const cachedSource = {\n            [Symbol.asyncIterator]() {\n                return sourceIt;\n            },\n        };\n        let iterable = cachedSource;\n        if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n            iterable = abortable = makeIterableAbortable(iterable);\n        }\n        for (const t of transforms) {\n            iterable = t(iterable);\n        }\n        const it = iterable[Symbol.asyncIterator]();\n        try {\n            for (;;) {\n                const r = yield __await(it.next());\n                if (r.done === true) {\n                    break;\n                }\n                if (!abortable) {\n                    yield yield __await(r.value);\n                    continue;\n                }\n                try {\n                    yield yield __await(r.value);\n                }\n                catch (e) {\n                    yield __await(abortable.abort(e)); // propagate downstream error to the source\n                    throw e;\n                }\n            }\n        }\n        finally {\n            if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n                // Call return on the source iterable to indicate\n                // that we will no longer consume it and it should\n                // cleanup any allocated resources.\n                (_a = sourceIt.return) === null || _a === void 0 ? void 0 : _a.call(sourceIt).catch(() => {\n                    // return returns a promise, which we don't care about.\n                    //\n                    // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                    // this is to ensure error is caught and ignored.\n                });\n            }\n        }\n    });\n}\nfunction pickTransforms(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    return [rest, opt];\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given catchError function.\n *\n * The catchError function may return a final value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatch(catchError) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    const caught = yield __await(catchError(e));\n                    if (caught !== undefined) {\n                        yield yield __await(caught);\n                    }\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given function. Unlike transformCatch(), the given function\n * is also called when no error is raised.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatchFinally(catchFinally) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            let err;\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    err = e;\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n            const caught = yield __await(catchFinally(err));\n            if (caught !== undefined) {\n                yield yield __await(caught);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that appends a value.\n *\n * The element to append is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformAppend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_2, _b, _c;\n            try {\n                for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                    _c = iterable_2_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            const append = yield __await(provide());\n            if (append !== undefined) {\n                yield yield __await(append);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that prepends an element.\n *\n * The element to prepend is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformPrepend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_3, _b, _c;\n            const prepend = yield __await(provide());\n            if (prepend !== undefined) {\n                yield yield __await(prepend);\n            }\n            try {\n                for (var _d = true, iterable_3 = __asyncValues(iterable), iterable_3_1; iterable_3_1 = yield __await(iterable_3.next()), _a = iterable_3_1.done, !_a; _d = true) {\n                    _c = iterable_3_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_3.return)) yield __await(_b.call(iterable_3));\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that reads all bytes from the input, and\n * concatenates them to a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformReadAllBytes(readMaxBytes, lengthHint) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            yield yield __await(yield __await(readAllBytes(iterable, readMaxBytes, lengthHint)));\n        });\n    };\n}\nfunction transformSerializeEnvelope(serialization, endStreamFlag, endSerialization) {\n    if (endStreamFlag === undefined || endSerialization === undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_4, _b, _c;\n                try {\n                    for (var _d = true, iterable_4 = __asyncValues(iterable), iterable_4_1; iterable_4_1 = yield __await(iterable_4.next()), _a = iterable_4_1.done, !_a; _d = true) {\n                        _c = iterable_4_1.value;\n                        _d = false;\n                        const chunk = _c;\n                        const data = serialization.serialize(chunk);\n                        yield yield __await({ flags: 0, data });\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_4.return)) yield __await(_b.call(iterable_4));\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            });\n        };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_5, _b, _c;\n            try {\n                for (var _d = true, iterable_5 = __asyncValues(iterable), iterable_5_1; iterable_5_1 = yield __await(iterable_5.next()), _a = iterable_5_1.done, !_a; _d = true) {\n                    _c = iterable_5_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    let data;\n                    let flags = 0;\n                    if (chunk.end) {\n                        flags = flags | endStreamFlag;\n                        data = endSerialization.serialize(chunk.value);\n                    }\n                    else {\n                        data = serialization.serialize(chunk.value);\n                    }\n                    yield yield __await({ flags, data });\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_5.return)) yield __await(_b.call(iterable_5));\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        });\n    };\n}\nfunction transformParseEnvelope(serialization, endStreamFlag, endSerialization) {\n    // code path always yields ParsedEnvelopedMessage<T, E>\n    if (endSerialization && endStreamFlag !== undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_6, _b, _c;\n                try {\n                    for (var _d = true, iterable_6 = __asyncValues(iterable), iterable_6_1; iterable_6_1 = yield __await(iterable_6.next()), _a = iterable_6_1.done, !_a; _d = true) {\n                        _c = iterable_6_1.value;\n                        _d = false;\n                        const { flags, data } = _c;\n                        if ((flags & endStreamFlag) === endStreamFlag) {\n                            yield yield __await({ value: endSerialization.parse(data), end: true });\n                        }\n                        else {\n                            yield yield __await({ value: serialization.parse(data), end: false });\n                        }\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_6.return)) yield __await(_b.call(iterable_6));\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            });\n        };\n    }\n    // code path always yields T\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_7, _b, _c;\n            try {\n                for (var _d = true, iterable_7 = __asyncValues(iterable), iterable_7_1; iterable_7_1 = yield __await(iterable_7.next()), _a = iterable_7_1.done, !_a; _d = true) {\n                    _c = iterable_7_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    if (endStreamFlag !== undefined &&\n                        (flags & endStreamFlag) === endStreamFlag) {\n                        if (endSerialization === null) {\n                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"unexpected end flag\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                        }\n                        // skips end-of-stream envelope\n                        continue;\n                    }\n                    yield yield __await(serialization.parse(data));\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_7.return)) yield __await(_b.call(iterable_7));\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and compresses them if they are larger than compressMinBytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCompressEnvelope(compression, compressMinBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_8, _b, _c;\n            try {\n                for (var _d = true, iterable_8 = __asyncValues(iterable), iterable_8_1; iterable_8_1 = yield __await(iterable_8.next()), _a = iterable_8_1.done, !_a; _d = true) {\n                    _c = iterable_8_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeCompress)(env, compression, compressMinBytes)));\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_8.return)) yield __await(_b.call(iterable_8));\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and decompresses them using the given compression.\n *\n * The iterable raises an error if the decompressed payload of an enveloped\n * message is larger than readMaxBytes, or if no compression is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformDecompressEnvelope(compression, readMaxBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_9, _b, _c;\n            try {\n                for (var _d = true, iterable_9 = __asyncValues(iterable), iterable_9_1; iterable_9_1 = yield __await(iterable_9.next()), _a = iterable_9_1.done, !_a; _d = true) {\n                    _c = iterable_9_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeDecompress)(env, compression, readMaxBytes)));\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_9.return)) yield __await(_b.call(iterable_9));\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes enveloped messages as a source,\n * and joins them into a stream of raw bytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformJoinEnvelopes() {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_10, _b, _c;\n            try {\n                for (var _d = true, iterable_10 = __asyncValues(iterable), iterable_10_1; iterable_10_1 = yield __await(iterable_10.next()), _a = iterable_10_1.done, !_a; _d = true) {\n                    _c = iterable_10_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    yield yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.encodeEnvelope)(flags, data));\n                }\n            }\n            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_10.return)) yield __await(_b.call(iterable_10));\n                }\n                finally { if (e_10) throw e_10.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes raw bytes as a source, and splits\n * them into enveloped messages.\n *\n * The iterable raises an error\n * - if the payload of an enveloped message is larger than readMaxBytes,\n * - if the stream ended before an enveloped message fully arrived,\n * - or if the stream ended with extraneous data.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformSplitEnvelope(readMaxBytes) {\n    // append chunk to buffer, returning updated buffer\n    function append(buffer, chunk) {\n        const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        return n;\n    }\n    // tuple 0: envelope, or undefined if incomplete\n    // tuple 1: remainder of the buffer\n    function shiftEnvelope(buffer, header) {\n        if (buffer.byteLength < 5 + header.length) {\n            return [undefined, buffer];\n        }\n        return [\n            { flags: header.flags, data: buffer.subarray(5, 5 + header.length) },\n            buffer.subarray(5 + header.length),\n        ];\n    }\n    // undefined: header is incomplete\n    function peekHeader(buffer) {\n        if (buffer.byteLength < 5) {\n            return undefined;\n        }\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const length = view.getUint32(1); // 4 bytes message length\n        const flags = view.getUint8(0); // first byte is flags\n        return { length, flags };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_11, _b, _c;\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_11 = __asyncValues(iterable), iterable_11_1; iterable_11_1 = yield __await(iterable_11.next()), _a = iterable_11_1.done, !_a; _d = true) {\n                    _c = iterable_11_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for (;;) {\n                        const header = peekHeader(buffer);\n                        if (!header) {\n                            break;\n                        }\n                        (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, header.length, true);\n                        let env;\n                        [env, buffer] = shiftEnvelope(buffer, header);\n                        if (!env) {\n                            break;\n                        }\n                        yield yield __await(env);\n                    }\n                }\n            }\n            catch (e_11_1) { e_11 = { error: e_11_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_11.return)) yield __await(_b.call(iterable_11));\n                }\n                finally { if (e_11) throw e_11.error; }\n            }\n            if (buffer.byteLength > 0) {\n                const header = peekHeader(buffer);\n                let message = \"protocol error: incomplete envelope\";\n                if (header) {\n                    message = `protocol error: promised ${header.length} bytes in enveloped message, got ${buffer.byteLength - 5} bytes`;\n                }\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        });\n    };\n}\n/**\n * Reads all bytes from the source, and concatenates them to a single Uint8Array.\n *\n * Raises an error if:\n * - more than readMaxBytes are read\n * - lengthHint is a positive integer, but larger than readMaxBytes\n * - lengthHint is a positive integer, and the source contains more or less bytes\n *   than promised\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function readAllBytes(iterable, readMaxBytes, lengthHint) {\n    var _a, e_12, _b, _c, _d, e_13, _e, _f;\n    const [ok, hint] = parseLengthHint(lengthHint);\n    if (ok) {\n        if (hint > readMaxBytes) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, hint, true);\n        }\n        const buffer = new Uint8Array(hint);\n        let offset = 0;\n        try {\n            for (var _g = true, iterable_12 = __asyncValues(iterable), iterable_12_1; iterable_12_1 = await iterable_12.next(), _a = iterable_12_1.done, !_a; _g = true) {\n                _c = iterable_12_1.value;\n                _g = false;\n                const chunk = _c;\n                if (offset + chunk.byteLength > hint) {\n                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset + chunk.byteLength}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                }\n                buffer.set(chunk, offset);\n                offset += chunk.byteLength;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (!_g && !_a && (_b = iterable_12.return)) await _b.call(iterable_12);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        if (offset < hint) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n        }\n        return buffer;\n    }\n    const chunks = [];\n    let count = 0;\n    try {\n        for (var _h = true, iterable_13 = __asyncValues(iterable), iterable_13_1; iterable_13_1 = await iterable_13.next(), _d = iterable_13_1.done, !_d; _h = true) {\n            _f = iterable_13_1.value;\n            _h = false;\n            const chunk = _f;\n            count += chunk.byteLength;\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, count);\n            chunks.push(chunk);\n        }\n    }\n    catch (e_13_1) { e_13 = { error: e_13_1 }; }\n    finally {\n        try {\n            if (!_h && !_d && (_e = iterable_13.return)) await _e.call(iterable_13);\n        }\n        finally { if (e_13) throw e_13.error; }\n    }\n    const all = new Uint8Array(count);\n    let offset = 0;\n    for (let chunk = chunks.shift(); chunk; chunk = chunks.shift()) {\n        all.set(chunk, offset);\n        offset += chunk.byteLength;\n    }\n    return all;\n}\n// parse the lengthHint argument of readAllBytes()\nfunction parseLengthHint(lengthHint) {\n    if (lengthHint === undefined || lengthHint === null) {\n        return [false, 0];\n    }\n    const n = typeof lengthHint == \"string\" ? parseInt(lengthHint, 10) : lengthHint;\n    if (!Number.isSafeInteger(n) || n < 0) {\n        return [false, n];\n    }\n    return [true, n];\n}\n/**\n * Wait for the first element of an iterable without modifying the iterable.\n * This consumes the first element, but pushes it back on the stack.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function untilFirst(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    let first = await it.next();\n    return {\n        [Symbol.asyncIterator]() {\n            const w = {\n                async next() {\n                    if (first !== null) {\n                        const n = first;\n                        first = null;\n                        return n;\n                    }\n                    return await it.next();\n                },\n            };\n            if (it.throw !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                w.throw = (e) => it.throw(e);\n            }\n            if (it.return !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                w.return = (value) => it.return(value);\n            }\n            return w;\n        },\n    };\n}\n/**\n * Wrap the given iterable and return an iterable with an abort() method.\n *\n * This function exists purely for convenience. Where one would typically have\n * to access the iterator directly, advance through all elements, and call\n * AsyncIterator.throw() to notify the upstream iterable, this function allows\n * to use convenient for-await loops and still notify the upstream iterable:\n *\n * ```ts\n * const abortable = makeIterableAbortable(iterable);\n * for await (const ele of abortable) {\n *   await abortable.abort(\"ERR\");\n * }\n * ```\n * There are a couple of limitations of this function:\n * - the given async iterable must implement throw\n * - the async iterable cannot be re-use\n * - if source catches errors and yields values for them, they are ignored, and\n *   the source may still dangle\n *\n * There are four possible ways an async function* can handle yield errors:\n * 1. don't catch errors at all - Abortable.abort() will resolve \"rethrown\"\n * 2. catch errors and rethrow - Abortable.abort() will resolve \"rethrown\"\n * 3. catch errors and return - Abortable.abort() will resolve \"completed\"\n * 4. catch errors and yield a value - Abortable.abort() will resolve \"caught\"\n *\n * Note that catching errors and yielding a value is problematic, and it should\n * be documented that this may leave the source in a dangling state.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction makeIterableAbortable(iterable) {\n    const innerCandidate = iterable[Symbol.asyncIterator]();\n    if (innerCandidate.throw === undefined) {\n        throw new Error(\"AsyncIterable does not implement throw\");\n    }\n    const inner = innerCandidate;\n    let aborted;\n    let resultPromise;\n    let it = {\n        next() {\n            resultPromise = inner.next().finally(() => {\n                resultPromise = undefined;\n            });\n            return resultPromise;\n        },\n        throw(e) {\n            return inner.throw(e);\n        },\n    };\n    if (innerCandidate.return !== undefined) {\n        it = Object.assign(Object.assign({}, it), { return(value) {\n                return inner.return(value);\n            } });\n    }\n    let used = false;\n    return {\n        abort(reason) {\n            if (aborted) {\n                return aborted.state;\n            }\n            const f = () => {\n                return inner.throw(reason).then((r) => (r.done === true ? \"completed\" : \"caught\"), () => \"rethrown\");\n            };\n            if (resultPromise) {\n                aborted = { reason, state: resultPromise.then(f, f) };\n                return aborted.state;\n            }\n            aborted = { reason, state: f() };\n            return aborted.state;\n        },\n        [Symbol.asyncIterator]() {\n            if (used) {\n                throw new Error(\"AsyncIterable cannot be re-used\");\n            }\n            used = true;\n            return it;\n        },\n    };\n}\n/**\n * Create a new WritableIterable.\n */\nfunction createWritableIterable() {\n    // We start with two queues to capture the read and write attempts.\n    //\n    // The writes and reads each check of their counterpart is\n    // already available and either interact/add themselves to the queue.\n    const readQueue = [];\n    const writeQueue = [];\n    let err = undefined;\n    let nextResolve;\n    let nextReject;\n    let nextPromise = new Promise((resolve, reject) => {\n        nextResolve = resolve;\n        nextReject = reject;\n    });\n    let closed = false;\n    // drain the readQueue in case of error/writer is closed by sending a\n    // done result.\n    function drain() {\n        for (const next of readQueue.splice(0, readQueue.length)) {\n            next({ done: true, value: undefined });\n        }\n    }\n    return {\n        close() {\n            closed = true;\n            drain();\n        },\n        async write(payload) {\n            if (closed) {\n                throw err !== null && err !== void 0 ? err : new Error(\"cannot write, WritableIterable already closed\");\n            }\n            const read = readQueue.shift();\n            if (read === undefined) {\n                // We didn't find a pending read so we add the payload to the write queue.\n                writeQueue.push(payload);\n            }\n            else {\n                // We found a pending read so we respond with the payload.\n                read({ done: false, value: payload });\n                if (readQueue.length > 0) {\n                    // If there are more in the read queue we can mark the write as complete.\n                    // as the error reporting is not guaranteed to be sequential and therefore cannot\n                    // to linked to a specific write.\n                    return;\n                }\n            }\n            // We await the next call for as many times as there are items in the queue + 1\n            //\n            // If there are no items in the write queue that means write happened and we just have\n            // to wait for one more call likewise if we are the nth write in the queue we\n            // have to wait for n writes to complete and one more.\n            const limit = writeQueue.length + 1;\n            for (let i = 0; i < limit; i++) {\n                await nextPromise;\n            }\n        },\n        [Symbol.asyncIterator]() {\n            return {\n                next() {\n                    // Resolve the nextPromise to indicate\n                    // pending writes that a read attempt has been made\n                    // after their write.\n                    //\n                    // We also need to reset the promise for future writes.\n                    nextResolve();\n                    nextPromise = new Promise((resolve, reject) => {\n                        nextResolve = resolve;\n                        nextReject = reject;\n                    });\n                    const write = writeQueue.shift();\n                    if (write !== undefined) {\n                        // We found a pending write so response with the payload.\n                        return Promise.resolve({ done: false, value: write });\n                    }\n                    if (closed) {\n                        return Promise.resolve({ done: true, value: undefined });\n                    }\n                    // We return a promise immediately that is either resolved/rejected\n                    // as writes happen.\n                    let readResolve;\n                    const readPromise = new Promise((resolve) => (readResolve = resolve));\n                    readQueue.push(readResolve); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    return readPromise;\n                },\n                throw(throwErr) {\n                    err = throwErr;\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    // This will reject all pending writes.\n                    nextReject(err);\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n                return() {\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    // Resolve once for the write awaiting confirmation.\n                    nextResolve();\n                    // Reject all future writes.\n                    nextPromise = Promise.reject(new Error(\"cannot write, consumer called return\"));\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n            };\n        },\n    };\n}\n/**\n * Create an asynchronous iterable from an array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\n// eslint-disable-next-line @typescript-eslint/require-await\nfunction createAsyncIterable(items) {\n    return __asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n        yield __await(yield* __asyncDelegator(__asyncValues(items)));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressedFlag: function() { return /* binding */ compressedFlag; },\n/* harmony export */   compressionNegotiate: function() { return /* binding */ compressionNegotiate; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * compressedFlag indicates that the data in a EnvelopedMessage is\n * compressed. It has the same meaning in the gRPC-Web, gRPC-HTTP2,\n * and Connect protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst compressedFlag = 0b00000001;\n/**\n * Validates the request encoding and determines the accepted response encoding.\n *\n * Returns the request and response compression to use. If the client requested\n * an encoding that is not available, the returned object contains an error that\n * must be used for the response.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction compressionNegotiate(available, requested, // e.g. the value of the Grpc-Encoding header\naccepted, // e.g. the value of the Grpc-Accept-Encoding header\nheaderNameAcceptEncoding) {\n    let request = null;\n    let response = null;\n    let error = undefined;\n    if (requested !== null && requested !== \"identity\") {\n        const found = available.find((c) => c.name === requested);\n        if (found) {\n            request = found;\n        }\n        else {\n            // To comply with https://github.com/grpc/grpc/blob/master/doc/compression.md\n            // and the Connect protocol, we return code \"unimplemented\" and specify\n            // acceptable compression(s).\n            const acceptable = available.map((c) => c.name).join(\",\");\n            error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unknown compression \"${requested}\": supported encodings are ${acceptable}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unimplemented, {\n                [headerNameAcceptEncoding]: acceptable,\n            });\n        }\n    }\n    if (accepted === null || accepted === \"\") {\n        // Support asymmetric compression. This logic follows\n        // https://github.com/grpc/grpc/blob/master/doc/compression.md and common\n        // sense.\n        response = request;\n    }\n    else {\n        const acceptNames = accepted.split(\",\").map((n) => n.trim());\n        for (const name of acceptNames) {\n            const found = available.find((c) => c.name === name);\n            if (found) {\n                response = found;\n                break;\n            }\n        }\n    }\n    return { request, response, error };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb21wcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZLHlCQUF5QixVQUFVLDZCQUE2QixXQUFXLEdBQUcsMENBQUk7QUFDdEg7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL2NvbXByZXNzaW9uLmpzP2M2ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogY29tcHJlc3NlZEZsYWcgaW5kaWNhdGVzIHRoYXQgdGhlIGRhdGEgaW4gYSBFbnZlbG9wZWRNZXNzYWdlIGlzXG4gKiBjb21wcmVzc2VkLiBJdCBoYXMgdGhlIHNhbWUgbWVhbmluZyBpbiB0aGUgZ1JQQy1XZWIsIGdSUEMtSFRUUDIsXG4gKiBhbmQgQ29ubmVjdCBwcm90b2NvbHMuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb21wcmVzc2VkRmxhZyA9IDBiMDAwMDAwMDE7XG4vKipcbiAqIFZhbGlkYXRlcyB0aGUgcmVxdWVzdCBlbmNvZGluZyBhbmQgZGV0ZXJtaW5lcyB0aGUgYWNjZXB0ZWQgcmVzcG9uc2UgZW5jb2RpbmcuXG4gKlxuICogUmV0dXJucyB0aGUgcmVxdWVzdCBhbmQgcmVzcG9uc2UgY29tcHJlc3Npb24gdG8gdXNlLiBJZiB0aGUgY2xpZW50IHJlcXVlc3RlZFxuICogYW4gZW5jb2RpbmcgdGhhdCBpcyBub3QgYXZhaWxhYmxlLCB0aGUgcmV0dXJuZWQgb2JqZWN0IGNvbnRhaW5zIGFuIGVycm9yIHRoYXRcbiAqIG11c3QgYmUgdXNlZCBmb3IgdGhlIHJlc3BvbnNlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3Npb25OZWdvdGlhdGUoYXZhaWxhYmxlLCByZXF1ZXN0ZWQsIC8vIGUuZy4gdGhlIHZhbHVlIG9mIHRoZSBHcnBjLUVuY29kaW5nIGhlYWRlclxuYWNjZXB0ZWQsIC8vIGUuZy4gdGhlIHZhbHVlIG9mIHRoZSBHcnBjLUFjY2VwdC1FbmNvZGluZyBoZWFkZXJcbmhlYWRlck5hbWVBY2NlcHRFbmNvZGluZykge1xuICAgIGxldCByZXF1ZXN0ID0gbnVsbDtcbiAgICBsZXQgcmVzcG9uc2UgPSBudWxsO1xuICAgIGxldCBlcnJvciA9IHVuZGVmaW5lZDtcbiAgICBpZiAocmVxdWVzdGVkICE9PSBudWxsICYmIHJlcXVlc3RlZCAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIGNvbnN0IGZvdW5kID0gYXZhaWxhYmxlLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gcmVxdWVzdGVkKTtcbiAgICAgICAgaWYgKGZvdW5kKSB7XG4gICAgICAgICAgICByZXF1ZXN0ID0gZm91bmQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBUbyBjb21wbHkgd2l0aCBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvbWFzdGVyL2RvYy9jb21wcmVzc2lvbi5tZFxuICAgICAgICAgICAgLy8gYW5kIHRoZSBDb25uZWN0IHByb3RvY29sLCB3ZSByZXR1cm4gY29kZSBcInVuaW1wbGVtZW50ZWRcIiBhbmQgc3BlY2lmeVxuICAgICAgICAgICAgLy8gYWNjZXB0YWJsZSBjb21wcmVzc2lvbihzKS5cbiAgICAgICAgICAgIGNvbnN0IGFjY2VwdGFibGUgPSBhdmFpbGFibGUubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpO1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgQ29ubmVjdEVycm9yKGB1bmtub3duIGNvbXByZXNzaW9uIFwiJHtyZXF1ZXN0ZWR9XCI6IHN1cHBvcnRlZCBlbmNvZGluZ3MgYXJlICR7YWNjZXB0YWJsZX1gLCBDb2RlLlVuaW1wbGVtZW50ZWQsIHtcbiAgICAgICAgICAgICAgICBbaGVhZGVyTmFtZUFjY2VwdEVuY29kaW5nXTogYWNjZXB0YWJsZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChhY2NlcHRlZCA9PT0gbnVsbCB8fCBhY2NlcHRlZCA9PT0gXCJcIikge1xuICAgICAgICAvLyBTdXBwb3J0IGFzeW1tZXRyaWMgY29tcHJlc3Npb24uIFRoaXMgbG9naWMgZm9sbG93c1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvbWFzdGVyL2RvYy9jb21wcmVzc2lvbi5tZCBhbmQgY29tbW9uXG4gICAgICAgIC8vIHNlbnNlLlxuICAgICAgICByZXNwb25zZSA9IHJlcXVlc3Q7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhY2NlcHROYW1lcyA9IGFjY2VwdGVkLnNwbGl0KFwiLFwiKS5tYXAoKG4pID0+IG4udHJpbSgpKTtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIGFjY2VwdE5hbWVzKSB7XG4gICAgICAgICAgICBjb25zdCBmb3VuZCA9IGF2YWlsYWJsZS5maW5kKChjKSA9PiBjLm5hbWUgPT09IG5hbWUpO1xuICAgICAgICAgICAgaWYgKGZvdW5kKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBmb3VuZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyByZXF1ZXN0LCByZXNwb25zZSwgZXJyb3IgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeMatcher: function() { return /* binding */ contentTypeMatcher; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst contentTypeMatcherCacheSize = 1024;\n/**\n * Create a function that returns true if the given mime type is supported.\n * A mime type is supported when one of the regular expressions match.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction contentTypeMatcher(...supported) {\n    const cache = new Map();\n    const source = supported.reduce((previousValue, currentValue) => previousValue.concat(\"supported\" in currentValue ? currentValue.supported : currentValue), []);\n    function match(contentType) {\n        if (contentType === null || contentType.length == 0) {\n            return false;\n        }\n        const cached = cache.get(contentType);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const ok = source.some((re) => re.test(contentType));\n        if (cache.size < contentTypeMatcherCacheSize) {\n            cache.set(contentType, ok);\n        }\n        return ok;\n    }\n    match.supported = source;\n    return match;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb250ZW50LXR5cGUtbWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvY29udGVudC10eXBlLW1hdGNoZXIuanM/YzBkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuY29uc3QgY29udGVudFR5cGVNYXRjaGVyQ2FjaGVTaXplID0gMTAyNDtcbi8qKlxuICogQ3JlYXRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG1pbWUgdHlwZSBpcyBzdXBwb3J0ZWQuXG4gKiBBIG1pbWUgdHlwZSBpcyBzdXBwb3J0ZWQgd2hlbiBvbmUgb2YgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbnMgbWF0Y2guXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50VHlwZU1hdGNoZXIoLi4uc3VwcG9ydGVkKSB7XG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgY29uc3Qgc291cmNlID0gc3VwcG9ydGVkLnJlZHVjZSgocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlKSA9PiBwcmV2aW91c1ZhbHVlLmNvbmNhdChcInN1cHBvcnRlZFwiIGluIGN1cnJlbnRWYWx1ZSA/IGN1cnJlbnRWYWx1ZS5zdXBwb3J0ZWQgOiBjdXJyZW50VmFsdWUpLCBbXSk7XG4gICAgZnVuY3Rpb24gbWF0Y2goY29udGVudFR5cGUpIHtcbiAgICAgICAgaWYgKGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2FjaGVkID0gY2FjaGUuZ2V0KGNvbnRlbnRUeXBlKTtcbiAgICAgICAgaWYgKGNhY2hlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9rID0gc291cmNlLnNvbWUoKHJlKSA9PiByZS50ZXN0KGNvbnRlbnRUeXBlKSk7XG4gICAgICAgIGlmIChjYWNoZS5zaXplIDwgY29udGVudFR5cGVNYXRjaGVyQ2FjaGVTaXplKSB7XG4gICAgICAgICAgICBjYWNoZS5zZXQoY29udGVudFR5cGUsIG9rKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2s7XG4gICAgfVxuICAgIG1hdGNoLnN1cHBvcnRlZCA9IHNvdXJjZTtcbiAgICByZXR1cm4gbWF0Y2g7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMethodUrl: function() { return /* binding */ createMethodUrl; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a URL for the given RPC. This simply adds the qualified\n * service name, a slash, and the method name to the path of the given\n * baseUrl.\n *\n * For example, the baseUri https://example.com and method \"Say\" from\n * the service example.ElizaService results in:\n * https://example.com/example.ElizaService/Say\n *\n * This format is used by the protocols Connect, gRPC and Twirp.\n *\n * Note that this function also accepts a protocol-relative baseUrl.\n * If given an empty string or \"/\" as a baseUrl, it returns just the\n * path.\n */\nfunction createMethodUrl(baseUrl, service, method) {\n    const s = typeof service == \"string\" ? service : service.typeName;\n    const m = typeof method == \"string\" ? method : method.name;\n    return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jcmVhdGUtbWV0aG9kLXVybC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrREFBa0QsRUFBRSxHQUFHLEVBQUU7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvY3JlYXRlLW1ldGhvZC11cmwuanM/ZDk0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDcmVhdGUgYSBVUkwgZm9yIHRoZSBnaXZlbiBSUEMuIFRoaXMgc2ltcGx5IGFkZHMgdGhlIHF1YWxpZmllZFxuICogc2VydmljZSBuYW1lLCBhIHNsYXNoLCBhbmQgdGhlIG1ldGhvZCBuYW1lIHRvIHRoZSBwYXRoIG9mIHRoZSBnaXZlblxuICogYmFzZVVybC5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgdGhlIGJhc2VVcmkgaHR0cHM6Ly9leGFtcGxlLmNvbSBhbmQgbWV0aG9kIFwiU2F5XCIgZnJvbVxuICogdGhlIHNlcnZpY2UgZXhhbXBsZS5FbGl6YVNlcnZpY2UgcmVzdWx0cyBpbjpcbiAqIGh0dHBzOi8vZXhhbXBsZS5jb20vZXhhbXBsZS5FbGl6YVNlcnZpY2UvU2F5XG4gKlxuICogVGhpcyBmb3JtYXQgaXMgdXNlZCBieSB0aGUgcHJvdG9jb2xzIENvbm5lY3QsIGdSUEMgYW5kIFR3aXJwLlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIGFsc28gYWNjZXB0cyBhIHByb3RvY29sLXJlbGF0aXZlIGJhc2VVcmwuXG4gKiBJZiBnaXZlbiBhbiBlbXB0eSBzdHJpbmcgb3IgXCIvXCIgYXMgYSBiYXNlVXJsLCBpdCByZXR1cm5zIGp1c3QgdGhlXG4gKiBwYXRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWV0aG9kVXJsKGJhc2VVcmwsIHNlcnZpY2UsIG1ldGhvZCkge1xuICAgIGNvbnN0IHMgPSB0eXBlb2Ygc2VydmljZSA9PSBcInN0cmluZ1wiID8gc2VydmljZSA6IHNlcnZpY2UudHlwZU5hbWU7XG4gICAgY29uc3QgbSA9IHR5cGVvZiBtZXRob2QgPT0gXCJzdHJpbmdcIiA/IG1ldGhvZCA6IG1ldGhvZC5uYW1lO1xuICAgIHJldHVybiBiYXNlVXJsLnRvU3RyaW5nKCkucmVwbGFjZSgvXFwvPyQvLCBgLyR7c30vJHttfWApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEnvelopeReadableStream: function() { return /* binding */ createEnvelopeReadableStream; },\n/* harmony export */   encodeEnvelope: function() { return /* binding */ encodeEnvelope; },\n/* harmony export */   encodeEnvelopes: function() { return /* binding */ encodeEnvelopes; },\n/* harmony export */   envelopeCompress: function() { return /* binding */ envelopeCompress; },\n/* harmony export */   envelopeDecompress: function() { return /* binding */ envelopeDecompress; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compression.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Create a WHATWG ReadableStream of enveloped messages from a ReadableStream\n * of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            let header = undefined;\n            for (;;) {\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for (let i = 1; i < 5; i++) {\n                        length = (length << 8) + buffer[i];\n                    }\n                    header = { flags: buffer[0], length };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) {\n                    break;\n                }\n                const result = await reader.read();\n                if (result.done) {\n                    break;\n                }\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"premature end of stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data,\n            });\n        },\n    });\n}\n/**\n * Compress an EnvelopedMessage.\n *\n * Raises Internal if an enveloped message is already compressed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeCompress(envelope, compression, compressMinBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid envelope, already compressed\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (compression && data.byteLength >= compressMinBytes) {\n        data = await compression.compress(data);\n        flags = flags | _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Decompress an EnvelopedMessage.\n *\n * Raises InvalidArgument if an envelope is compressed, but compression is null.\n *\n * Relies on the provided Compression to raise ResourceExhausted if the\n * *decompressed* message size is larger than readMaxBytes. If the envelope is\n * not compressed, readMaxBytes is not honored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeDecompress(envelope, compression, readMaxBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"received compressed envelope, but do not know how to decompress\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n        }\n        data = await compression.decompress(data, readMaxBytes);\n        flags = flags ^ _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Encode a single enveloped message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelope(flags, data) {\n    const bytes = new Uint8Array(data.length + 5);\n    bytes.set(data, 5);\n    const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    v.setUint8(0, flags); // first byte is flags\n    v.setUint32(1, data.length); // 4 bytes message length\n    return bytes;\n}\n/**\n * Encode a set of enveloped messages.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelopes(...envelopes) {\n    const len = envelopes.reduce((previousValue, currentValue) => previousValue + currentValue.data.length + 5, 0);\n    const bytes = new Uint8Array(len);\n    const v = new DataView(bytes.buffer);\n    let offset = 0;\n    for (const e of envelopes) {\n        v.setUint8(offset, e.flags); // first byte is flags\n        v.setUint32(offset + 1, e.data.length); // 4 bytes message length\n        bytes.set(e.data, offset + 5);\n        offset += e.data.length + 5;\n    }\n    return bytes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertByteStreamRequest: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.assertByteStreamRequest; },\n/* harmony export */   compressedFlag: function() { return /* reexport safe */ _compression_js__WEBPACK_IMPORTED_MODULE_7__.compressedFlag; },\n/* harmony export */   compressionNegotiate: function() { return /* reexport safe */ _compression_js__WEBPACK_IMPORTED_MODULE_7__.compressionNegotiate; },\n/* harmony export */   contentTypeMatcher: function() { return /* reexport safe */ _content_type_matcher_js__WEBPACK_IMPORTED_MODULE_9__.contentTypeMatcher; },\n/* harmony export */   createAsyncIterable: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.createAsyncIterable; },\n/* harmony export */   createClientMethodSerializers: function() { return /* reexport safe */ _serialization_js__WEBPACK_IMPORTED_MODULE_4__.createClientMethodSerializers; },\n/* harmony export */   createDeadlineSignal: function() { return /* reexport safe */ _signals_js__WEBPACK_IMPORTED_MODULE_11__.createDeadlineSignal; },\n/* harmony export */   createEnvelopeReadableStream: function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_6__.createEnvelopeReadableStream; },\n/* harmony export */   createFetchClient: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.createFetchClient; },\n/* harmony export */   createFetchHandler: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.createFetchHandler; },\n/* harmony export */   createLinkedAbortController: function() { return /* reexport safe */ _signals_js__WEBPACK_IMPORTED_MODULE_11__.createLinkedAbortController; },\n/* harmony export */   createMethodSerializationLookup: function() { return /* reexport safe */ _serialization_js__WEBPACK_IMPORTED_MODULE_4__.createMethodSerializationLookup; },\n/* harmony export */   createMethodUrl: function() { return /* reexport safe */ _create_method_url_js__WEBPACK_IMPORTED_MODULE_0__.createMethodUrl; },\n/* harmony export */   createUniversalHandlerClient: function() { return /* reexport safe */ _universal_handler_client_js__WEBPACK_IMPORTED_MODULE_1__.createUniversalHandlerClient; },\n/* harmony export */   createUniversalMethodHandler: function() { return /* reexport safe */ _universal_handler_js__WEBPACK_IMPORTED_MODULE_13__.createUniversalMethodHandler; },\n/* harmony export */   createUniversalServiceHandlers: function() { return /* reexport safe */ _universal_handler_js__WEBPACK_IMPORTED_MODULE_13__.createUniversalServiceHandlers; },\n/* harmony export */   createWritableIterable: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.createWritableIterable; },\n/* harmony export */   encodeEnvelope: function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_6__.encodeEnvelope; },\n/* harmony export */   encodeEnvelopes: function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_6__.encodeEnvelopes; },\n/* harmony export */   envelopeCompress: function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_6__.envelopeCompress; },\n/* harmony export */   envelopeDecompress: function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_6__.envelopeDecompress; },\n/* harmony export */   getAbortSignalReason: function() { return /* reexport safe */ _signals_js__WEBPACK_IMPORTED_MODULE_11__.getAbortSignalReason; },\n/* harmony export */   getJsonOptions: function() { return /* reexport safe */ _serialization_js__WEBPACK_IMPORTED_MODULE_4__.getJsonOptions; },\n/* harmony export */   invokeUnaryImplementation: function() { return /* reexport safe */ _invoke_implementation_js__WEBPACK_IMPORTED_MODULE_10__.invokeUnaryImplementation; },\n/* harmony export */   limitSerialization: function() { return /* reexport safe */ _serialization_js__WEBPACK_IMPORTED_MODULE_4__.limitSerialization; },\n/* harmony export */   makeIterableAbortable: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.makeIterableAbortable; },\n/* harmony export */   pipe: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe; },\n/* harmony export */   pipeTo: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipeTo; },\n/* harmony export */   readAllBytes: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.readAllBytes; },\n/* harmony export */   runStreamingCall: function() { return /* reexport safe */ _run_call_js__WEBPACK_IMPORTED_MODULE_3__.runStreamingCall; },\n/* harmony export */   runUnaryCall: function() { return /* reexport safe */ _run_call_js__WEBPACK_IMPORTED_MODULE_3__.runUnaryCall; },\n/* harmony export */   sinkAll: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.sinkAll; },\n/* harmony export */   sinkAllBytes: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.sinkAllBytes; },\n/* harmony export */   transformAppend: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformAppend; },\n/* harmony export */   transformCatch: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCatch; },\n/* harmony export */   transformCatchFinally: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCatchFinally; },\n/* harmony export */   transformCompressEnvelope: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCompressEnvelope; },\n/* harmony export */   transformDecompressEnvelope: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformDecompressEnvelope; },\n/* harmony export */   transformInvokeImplementation: function() { return /* reexport safe */ _invoke_implementation_js__WEBPACK_IMPORTED_MODULE_10__.transformInvokeImplementation; },\n/* harmony export */   transformJoinEnvelopes: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformJoinEnvelopes; },\n/* harmony export */   transformParseEnvelope: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformParseEnvelope; },\n/* harmony export */   transformPrepend: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformPrepend; },\n/* harmony export */   transformReadAllBytes: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformReadAllBytes; },\n/* harmony export */   transformSerializeEnvelope: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSerializeEnvelope; },\n/* harmony export */   transformSplitEnvelope: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSplitEnvelope; },\n/* harmony export */   uResponseMethodNotAllowed: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.uResponseMethodNotAllowed; },\n/* harmony export */   uResponseNotFound: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.uResponseNotFound; },\n/* harmony export */   uResponseOk: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.uResponseOk; },\n/* harmony export */   uResponseUnsupportedMediaType: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.uResponseUnsupportedMediaType; },\n/* harmony export */   uResponseVersionNotSupported: function() { return /* reexport safe */ _universal_js__WEBPACK_IMPORTED_MODULE_12__.uResponseVersionNotSupported; },\n/* harmony export */   universalClientRequestToFetch: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.universalClientRequestToFetch; },\n/* harmony export */   universalClientResponseFromFetch: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.universalClientResponseFromFetch; },\n/* harmony export */   universalServerRequestFromFetch: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.universalServerRequestFromFetch; },\n/* harmony export */   universalServerResponseToFetch: function() { return /* reexport safe */ _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__.universalServerResponseToFetch; },\n/* harmony export */   untilFirst: function() { return /* reexport safe */ _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.untilFirst; },\n/* harmony export */   validateReadWriteMaxBytes: function() { return /* reexport safe */ _limit_io_js__WEBPACK_IMPORTED_MODULE_5__.validateReadWriteMaxBytes; },\n/* harmony export */   validateUniversalHandlerOptions: function() { return /* reexport safe */ _universal_handler_js__WEBPACK_IMPORTED_MODULE_13__.validateUniversalHandlerOptions; }\n/* harmony export */ });\n/* harmony import */ var _create_method_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-method-url.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _universal_handler_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./universal-handler-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js\");\n/* harmony import */ var _universal_fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./universal-fetch.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-fetch.js\");\n/* harmony import */ var _run_call_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./run-call.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _serialization_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serialization.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./limit-io.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./compression.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _async_iterable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _content_type_matcher_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./content-type-matcher.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _invoke_implementation_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./invoke-implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./signals.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _universal_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./universal.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _universal_handler_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./universal-handler.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lEO0FBQ29CO0FBQ21JO0FBQ2pKO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDeUk7QUFDL0U7QUFDMkU7QUFDN0Q7QUFDOFY7QUFDdlc7QUFDd0M7QUFDQztBQUMwRTtBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9pbmRleC5qcz80Yjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5leHBvcnQgeyBjcmVhdGVNZXRob2RVcmwgfSBmcm9tIFwiLi9jcmVhdGUtbWV0aG9kLXVybC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlVW5pdmVyc2FsSGFuZGxlckNsaWVudCB9IGZyb20gXCIuL3VuaXZlcnNhbC1oYW5kbGVyLWNsaWVudC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlRmV0Y2hDbGllbnQsIGNyZWF0ZUZldGNoSGFuZGxlciwgdW5pdmVyc2FsQ2xpZW50UmVxdWVzdFRvRmV0Y2gsIHVuaXZlcnNhbENsaWVudFJlc3BvbnNlRnJvbUZldGNoLCB1bml2ZXJzYWxTZXJ2ZXJSZXF1ZXN0RnJvbUZldGNoLCB1bml2ZXJzYWxTZXJ2ZXJSZXNwb25zZVRvRmV0Y2gsIH0gZnJvbSBcIi4vdW5pdmVyc2FsLWZldGNoLmpzXCI7XG5leHBvcnQgeyBydW5VbmFyeUNhbGwsIHJ1blN0cmVhbWluZ0NhbGwgfSBmcm9tIFwiLi9ydW4tY2FsbC5qc1wiO1xuLy8gQWxsIGV4cG9ydHMgYmVsb3cgYXJlIHByaXZhdGUg4oCUIGludGVybmFsIGNvZGUgdGhhdCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWNcbi8vIHZlcnNpb25pbmcuXG4vLyBXZSB3aWxsIHRyeSBoYXJkIHRvIGF2b2lkIGJyZWFraW5nIGNoYW5nZXMsIGJ1dCBpZiB5b3UgZGVwZW5kIG9uIHRoZVxuLy8gZm9sbG93aW5nIGV4cG9ydHMsIHdlIHJlY29tbWVuZCB0aGF0IHlvdSBkbyBzbyB3aXRoIGFuIGV4YWN0IHZlcnNpb25cbi8vIGNvbnN0cmFpbnQgKG5vIH4gb3IgXikuXG5leHBvcnQgeyBjcmVhdGVNZXRob2RTZXJpYWxpemF0aW9uTG9va3VwLCBjcmVhdGVDbGllbnRNZXRob2RTZXJpYWxpemVycywgZ2V0SnNvbk9wdGlvbnMsIGxpbWl0U2VyaWFsaXphdGlvbiwgfSBmcm9tIFwiLi9zZXJpYWxpemF0aW9uLmpzXCI7XG5leHBvcnQgeyB2YWxpZGF0ZVJlYWRXcml0ZU1heEJ5dGVzIH0gZnJvbSBcIi4vbGltaXQtaW8uanNcIjtcbmV4cG9ydCB7IGVuY29kZUVudmVsb3BlLCBlbmNvZGVFbnZlbG9wZXMsIGVudmVsb3BlRGVjb21wcmVzcywgZW52ZWxvcGVDb21wcmVzcywgY3JlYXRlRW52ZWxvcGVSZWFkYWJsZVN0cmVhbSwgfSBmcm9tIFwiLi9lbnZlbG9wZS5qc1wiO1xuZXhwb3J0IHsgY29tcHJlc3NlZEZsYWcsIGNvbXByZXNzaW9uTmVnb3RpYXRlIH0gZnJvbSBcIi4vY29tcHJlc3Npb24uanNcIjtcbmV4cG9ydCB7IHBpcGUsIHRyYW5zZm9ybUNhdGNoLCB0cmFuc2Zvcm1DYXRjaEZpbmFsbHksIHRyYW5zZm9ybUFwcGVuZCwgdHJhbnNmb3JtUHJlcGVuZCwgdHJhbnNmb3JtUmVhZEFsbEJ5dGVzLCB0cmFuc2Zvcm1Db21wcmVzc0VudmVsb3BlLCB0cmFuc2Zvcm1EZWNvbXByZXNzRW52ZWxvcGUsIHRyYW5zZm9ybUpvaW5FbnZlbG9wZXMsIHRyYW5zZm9ybVNwbGl0RW52ZWxvcGUsIHRyYW5zZm9ybVNlcmlhbGl6ZUVudmVsb3BlLCB0cmFuc2Zvcm1QYXJzZUVudmVsb3BlLCBwaXBlVG8sIHNpbmtBbGwsIHNpbmtBbGxCeXRlcywgbWFrZUl0ZXJhYmxlQWJvcnRhYmxlLCBjcmVhdGVXcml0YWJsZUl0ZXJhYmxlLCBjcmVhdGVBc3luY0l0ZXJhYmxlLCByZWFkQWxsQnl0ZXMsIHVudGlsRmlyc3QsIH0gZnJvbSBcIi4vYXN5bmMtaXRlcmFibGUuanNcIjtcbmV4cG9ydCB7IGNvbnRlbnRUeXBlTWF0Y2hlciB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS1tYXRjaGVyLmpzXCI7XG5leHBvcnQgeyBpbnZva2VVbmFyeUltcGxlbWVudGF0aW9uLCB0cmFuc2Zvcm1JbnZva2VJbXBsZW1lbnRhdGlvbiwgfSBmcm9tIFwiLi9pbnZva2UtaW1wbGVtZW50YXRpb24uanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlciwgZ2V0QWJvcnRTaWduYWxSZWFzb24sIGNyZWF0ZURlYWRsaW5lU2lnbmFsLCB9IGZyb20gXCIuL3NpZ25hbHMuanNcIjtcbmV4cG9ydCB7IGFzc2VydEJ5dGVTdHJlYW1SZXF1ZXN0LCB1UmVzcG9uc2VPaywgdVJlc3BvbnNlTm90Rm91bmQsIHVSZXNwb25zZVVuc3VwcG9ydGVkTWVkaWFUeXBlLCB1UmVzcG9uc2VNZXRob2ROb3RBbGxvd2VkLCB1UmVzcG9uc2VWZXJzaW9uTm90U3VwcG9ydGVkLCB9IGZyb20gXCIuL3VuaXZlcnNhbC5qc1wiO1xuZXhwb3J0IHsgdmFsaWRhdGVVbml2ZXJzYWxIYW5kbGVyT3B0aW9ucywgY3JlYXRlVW5pdmVyc2FsU2VydmljZUhhbmRsZXJzLCBjcmVhdGVVbml2ZXJzYWxNZXRob2RIYW5kbGVyLCB9IGZyb20gXCIuL3VuaXZlcnNhbC1oYW5kbGVyLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/index.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invokeUnaryImplementation: function() { return /* binding */ invokeUnaryImplementation; },\n/* harmony export */   transformInvokeImplementation: function() { return /* binding */ transformInvokeImplementation; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interceptor.js */ \"./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\n\n/**\n * Invoke a user-provided implementation of a unary RPC. Returns a normalized\n * output message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function invokeUnaryImplementation(spec, context, input, interceptors) {\n    const anyFn = async (req) => {\n        return {\n            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n            stream: false,\n            service: req.service,\n            method: req.method,\n            header: context.responseHeader,\n            trailer: context.responseTrailer,\n        };\n    };\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n    const { message } = await next({\n        init: {\n            method: context.requestMethod,\n        },\n        message: input,\n        url: context.url,\n        signal: context.signal,\n        service: spec.service,\n        method: spec.method,\n        header: context.requestHeader,\n        contextValues: context.values,\n        stream: false,\n    });\n    return message;\n}\n/**\n * Return an AsyncIterableTransform that invokes a user-provided implementation,\n * giving it input from an asynchronous iterable, and returning its output as an\n * asynchronous iterable.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformInvokeImplementation(spec, context, interceptors) {\n    switch (spec.kind) {\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.Unary:\n            return function unary(input) {\n                return __asyncGenerator(this, arguments, function* unary_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ServerStreaming: {\n            return function serverStreaming(input) {\n                return __asyncGenerator(this, arguments, function* serverStreaming_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ClientStreaming: {\n            return function clientStreaming(input) {\n                return __asyncGenerator(this, arguments, function* clientStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.BiDiStreaming:\n            return function biDiStreaming(input) {\n                return __asyncGenerator(this, arguments, function* biDiStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                });\n            };\n    }\n}\nfunction copyHeaders(from, to) {\n    if (from === to) {\n        return;\n    }\n    to.forEach((_, key) => {\n        to.delete(key);\n    });\n    from.forEach((value, key) => {\n        to.set(key, value);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertReadMaxBytes: function() { return /* binding */ assertReadMaxBytes; },\n/* harmony export */   assertWriteMaxBytes: function() { return /* binding */ assertWriteMaxBytes; },\n/* harmony export */   validateReadWriteMaxBytes: function() { return /* binding */ validateReadWriteMaxBytes; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * At most, allow ~4GiB to be received or sent per message.\n * zlib used by Node.js caps maxOutputLength at this value. It also happens to\n * be the maximum theoretical message size supported by protobuf-es.\n */\nconst maxReadMaxBytes = 0xffffffff;\nconst maxWriteMaxBytes = maxReadMaxBytes;\n/**\n * The default value for the compressMinBytes option. The CPU cost of compressing\n * very small messages usually isn't worth the small reduction in network I/O, so\n * the default value is 1 kibibyte.\n */\nconst defaultCompressMinBytes = 1024;\n/**\n * Asserts that the options writeMaxBytes, readMaxBytes, and compressMinBytes\n * are within sane limits, and returns default values where no value is\n * provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateReadWriteMaxBytes(readMaxBytes, writeMaxBytes, compressMinBytes) {\n    writeMaxBytes !== null && writeMaxBytes !== void 0 ? writeMaxBytes : (writeMaxBytes = maxWriteMaxBytes);\n    readMaxBytes !== null && readMaxBytes !== void 0 ? readMaxBytes : (readMaxBytes = maxReadMaxBytes);\n    compressMinBytes !== null && compressMinBytes !== void 0 ? compressMinBytes : (compressMinBytes = defaultCompressMinBytes);\n    if (writeMaxBytes < 1 || writeMaxBytes > maxWriteMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`writeMaxBytes ${writeMaxBytes} must be >= 1 and <= ${maxWriteMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (readMaxBytes < 1 || readMaxBytes > maxReadMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`readMaxBytes ${readMaxBytes} must be >= 1 and <= ${maxReadMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    return {\n        readMaxBytes,\n        writeMaxBytes,\n        compressMinBytes,\n    };\n}\n/**\n * Raise an error ResourceExhausted if more than writeMaxByte are written.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertWriteMaxBytes(writeMaxBytes, bytesWritten) {\n    if (bytesWritten > writeMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`message size ${bytesWritten} is larger than configured writeMaxBytes ${writeMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n/**\n * Raise an error ResourceExhausted if more than readMaxBytes are read.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertReadMaxBytes(readMaxBytes, bytesRead, totalSizeKnown = false) {\n    if (bytesRead > readMaxBytes) {\n        let message = `message size is larger than configured readMaxBytes ${readMaxBytes}`;\n        if (totalSizeKnown) {\n            message = `message size ${bytesRead} is larger than configured readMaxBytes ${readMaxBytes}`;\n        }\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9saW1pdC1pby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21EO0FBQ2pCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGtCQUFrQixlQUFlLHNCQUFzQixpQkFBaUIsR0FBRywwQ0FBSTtBQUM3RztBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLHNCQUFzQixnQkFBZ0IsR0FBRywwQ0FBSTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLDBDQUEwQyxjQUFjLEdBQUcsMENBQUk7QUFDNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNkVBQTZFLGFBQWE7QUFDMUY7QUFDQSxzQ0FBc0MsV0FBVyx5Q0FBeUMsYUFBYTtBQUN2RztBQUNBLGtCQUFrQiwyREFBWSxVQUFVLDBDQUFJO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvbGltaXQtaW8uanM/YzgwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBBdCBtb3N0LCBhbGxvdyB+NEdpQiB0byBiZSByZWNlaXZlZCBvciBzZW50IHBlciBtZXNzYWdlLlxuICogemxpYiB1c2VkIGJ5IE5vZGUuanMgY2FwcyBtYXhPdXRwdXRMZW5ndGggYXQgdGhpcyB2YWx1ZS4gSXQgYWxzbyBoYXBwZW5zIHRvXG4gKiBiZSB0aGUgbWF4aW11bSB0aGVvcmV0aWNhbCBtZXNzYWdlIHNpemUgc3VwcG9ydGVkIGJ5IHByb3RvYnVmLWVzLlxuICovXG5jb25zdCBtYXhSZWFkTWF4Qnl0ZXMgPSAweGZmZmZmZmZmO1xuY29uc3QgbWF4V3JpdGVNYXhCeXRlcyA9IG1heFJlYWRNYXhCeXRlcztcbi8qKlxuICogVGhlIGRlZmF1bHQgdmFsdWUgZm9yIHRoZSBjb21wcmVzc01pbkJ5dGVzIG9wdGlvbi4gVGhlIENQVSBjb3N0IG9mIGNvbXByZXNzaW5nXG4gKiB2ZXJ5IHNtYWxsIG1lc3NhZ2VzIHVzdWFsbHkgaXNuJ3Qgd29ydGggdGhlIHNtYWxsIHJlZHVjdGlvbiBpbiBuZXR3b3JrIEkvTywgc29cbiAqIHRoZSBkZWZhdWx0IHZhbHVlIGlzIDEga2liaWJ5dGUuXG4gKi9cbmNvbnN0IGRlZmF1bHRDb21wcmVzc01pbkJ5dGVzID0gMTAyNDtcbi8qKlxuICogQXNzZXJ0cyB0aGF0IHRoZSBvcHRpb25zIHdyaXRlTWF4Qnl0ZXMsIHJlYWRNYXhCeXRlcywgYW5kIGNvbXByZXNzTWluQnl0ZXNcbiAqIGFyZSB3aXRoaW4gc2FuZSBsaW1pdHMsIGFuZCByZXR1cm5zIGRlZmF1bHQgdmFsdWVzIHdoZXJlIG5vIHZhbHVlIGlzXG4gKiBwcm92aWRlZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUmVhZFdyaXRlTWF4Qnl0ZXMocmVhZE1heEJ5dGVzLCB3cml0ZU1heEJ5dGVzLCBjb21wcmVzc01pbkJ5dGVzKSB7XG4gICAgd3JpdGVNYXhCeXRlcyAhPT0gbnVsbCAmJiB3cml0ZU1heEJ5dGVzICE9PSB2b2lkIDAgPyB3cml0ZU1heEJ5dGVzIDogKHdyaXRlTWF4Qnl0ZXMgPSBtYXhXcml0ZU1heEJ5dGVzKTtcbiAgICByZWFkTWF4Qnl0ZXMgIT09IG51bGwgJiYgcmVhZE1heEJ5dGVzICE9PSB2b2lkIDAgPyByZWFkTWF4Qnl0ZXMgOiAocmVhZE1heEJ5dGVzID0gbWF4UmVhZE1heEJ5dGVzKTtcbiAgICBjb21wcmVzc01pbkJ5dGVzICE9PSBudWxsICYmIGNvbXByZXNzTWluQnl0ZXMgIT09IHZvaWQgMCA/IGNvbXByZXNzTWluQnl0ZXMgOiAoY29tcHJlc3NNaW5CeXRlcyA9IGRlZmF1bHRDb21wcmVzc01pbkJ5dGVzKTtcbiAgICBpZiAod3JpdGVNYXhCeXRlcyA8IDEgfHwgd3JpdGVNYXhCeXRlcyA+IG1heFdyaXRlTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgd3JpdGVNYXhCeXRlcyAke3dyaXRlTWF4Qnl0ZXN9IG11c3QgYmUgPj0gMSBhbmQgPD0gJHttYXhXcml0ZU1heEJ5dGVzfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbiAgICBpZiAocmVhZE1heEJ5dGVzIDwgMSB8fCByZWFkTWF4Qnl0ZXMgPiBtYXhSZWFkTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfSBtdXN0IGJlID49IDEgYW5kIDw9ICR7bWF4UmVhZE1heEJ5dGVzfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByZWFkTWF4Qnl0ZXMsXG4gICAgICAgIHdyaXRlTWF4Qnl0ZXMsXG4gICAgICAgIGNvbXByZXNzTWluQnl0ZXMsXG4gICAgfTtcbn1cbi8qKlxuICogUmFpc2UgYW4gZXJyb3IgUmVzb3VyY2VFeGhhdXN0ZWQgaWYgbW9yZSB0aGFuIHdyaXRlTWF4Qnl0ZSBhcmUgd3JpdHRlbi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFdyaXRlTWF4Qnl0ZXMod3JpdGVNYXhCeXRlcywgYnl0ZXNXcml0dGVuKSB7XG4gICAgaWYgKGJ5dGVzV3JpdHRlbiA+IHdyaXRlTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgbWVzc2FnZSBzaXplICR7Ynl0ZXNXcml0dGVufSBpcyBsYXJnZXIgdGhhbiBjb25maWd1cmVkIHdyaXRlTWF4Qnl0ZXMgJHt3cml0ZU1heEJ5dGVzfWAsIENvZGUuUmVzb3VyY2VFeGhhdXN0ZWQpO1xuICAgIH1cbn1cbi8qKlxuICogUmFpc2UgYW4gZXJyb3IgUmVzb3VyY2VFeGhhdXN0ZWQgaWYgbW9yZSB0aGFuIHJlYWRNYXhCeXRlcyBhcmUgcmVhZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFJlYWRNYXhCeXRlcyhyZWFkTWF4Qnl0ZXMsIGJ5dGVzUmVhZCwgdG90YWxTaXplS25vd24gPSBmYWxzZSkge1xuICAgIGlmIChieXRlc1JlYWQgPiByZWFkTWF4Qnl0ZXMpIHtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBgbWVzc2FnZSBzaXplIGlzIGxhcmdlciB0aGFuIGNvbmZpZ3VyZWQgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfWA7XG4gICAgICAgIGlmICh0b3RhbFNpemVLbm93bikge1xuICAgICAgICAgICAgbWVzc2FnZSA9IGBtZXNzYWdlIHNpemUgJHtieXRlc1JlYWR9IGlzIGxhcmdlciB0aGFuIGNvbmZpZ3VyZWQgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfWA7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihtZXNzYWdlLCBDb2RlLlJlc291cmNlRXhoYXVzdGVkKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: function() { return /* binding */ normalize; },\n/* harmony export */   normalizeIterable: function() { return /* binding */ normalizeIterable; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n *  Takes a partial protobuf messages of the\n *  specified message type as input, and returns full instances.\n */\nfunction normalize(type, message) {\n    return message instanceof type\n        ? message\n        : new type(message);\n}\n/**\n * Takes an AsyncIterable of partial protobuf messages of the\n * specified message type as input, and yields full instances.\n */\nfunction normalizeIterable(messageType, input) {\n    function transform(result) {\n        if (result.done === true) {\n            return result;\n        }\n        return {\n            done: result.done,\n            value: normalize(messageType, result.value),\n        };\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            const it = input[Symbol.asyncIterator]();\n            const res = {\n                next: () => it.next().then(transform),\n            };\n            if (it.throw !== undefined) {\n                res.throw = (e) => it.throw(e).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            if (it.return !== undefined) {\n                res.return = (v) => it.return(v).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            return res;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9ub3JtYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvbm9ybWFsaXplLmpzPzZmYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG4vKipcbiAqICBUYWtlcyBhIHBhcnRpYWwgcHJvdG9idWYgbWVzc2FnZXMgb2YgdGhlXG4gKiAgc3BlY2lmaWVkIG1lc3NhZ2UgdHlwZSBhcyBpbnB1dCwgYW5kIHJldHVybnMgZnVsbCBpbnN0YW5jZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemUodHlwZSwgbWVzc2FnZSkge1xuICAgIHJldHVybiBtZXNzYWdlIGluc3RhbmNlb2YgdHlwZVxuICAgICAgICA/IG1lc3NhZ2VcbiAgICAgICAgOiBuZXcgdHlwZShtZXNzYWdlKTtcbn1cbi8qKlxuICogVGFrZXMgYW4gQXN5bmNJdGVyYWJsZSBvZiBwYXJ0aWFsIHByb3RvYnVmIG1lc3NhZ2VzIG9mIHRoZVxuICogc3BlY2lmaWVkIG1lc3NhZ2UgdHlwZSBhcyBpbnB1dCwgYW5kIHlpZWxkcyBmdWxsIGluc3RhbmNlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUl0ZXJhYmxlKG1lc3NhZ2VUeXBlLCBpbnB1dCkge1xuICAgIGZ1bmN0aW9uIHRyYW5zZm9ybShyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5kb25lID09PSB0cnVlKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkb25lOiByZXN1bHQuZG9uZSxcbiAgICAgICAgICAgIHZhbHVlOiBub3JtYWxpemUobWVzc2FnZVR5cGUsIHJlc3VsdC52YWx1ZSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICBjb25zdCBpdCA9IGlucHV0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgY29uc3QgcmVzID0ge1xuICAgICAgICAgICAgICAgIG5leHQ6ICgpID0+IGl0Lm5leHQoKS50aGVuKHRyYW5zZm9ybSksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGl0LnRocm93ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXMudGhyb3cgPSAoZSkgPT4gaXQudGhyb3coZSkudGhlbih0cmFuc2Zvcm0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpdC5yZXR1cm4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJlcy5yZXR1cm4gPSAodikgPT4gaXQucmV0dXJuKHYpLnRoZW4odHJhbnNmb3JtKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runStreamingCall: function() { return /* binding */ runStreamingCall; },\n/* harmony export */   runUnaryCall: function() { return /* binding */ runUnaryCall; }\n/* harmony export */ });\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interceptor.js */ \"./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signals.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */\nfunction runUnaryCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(opt.req.method.I, opt.req.message), signal });\n    return next(req).then((res) => {\n        done();\n        return res;\n    }, abort);\n}\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */\nfunction runStreamingCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalizeIterable)(opt.req.method.I, opt.req.message), signal });\n    let doneCalled = false;\n    // Call return on the request iterable to indicate\n    // that we will no longer consume it and it should\n    // cleanup any allocated resources.\n    signal.addEventListener(\"abort\", function () {\n        var _a, _b;\n        const it = opt.req.message[Symbol.asyncIterator]();\n        // If the signal is aborted due to an error, we want to throw\n        // the error to the request iterator.\n        if (!doneCalled) {\n            (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, this.reason).catch(() => {\n                // throw returns a promise, which we don't care about.\n                //\n                // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                // this is to ensure error is caught and ignored.\n            });\n        }\n        (_b = it.return) === null || _b === void 0 ? void 0 : _b.call(it).catch(() => {\n            // return returns a promise, which we don't care about.\n            //\n            // Uncaught promises are thrown at sometime/somewhere by the event loop,\n            // this is to ensure error is caught and ignored.\n        });\n    });\n    return next(req).then((res) => {\n        return Object.assign(Object.assign({}, res), { message: {\n                [Symbol.asyncIterator]() {\n                    const it = res.message[Symbol.asyncIterator]();\n                    return {\n                        next() {\n                            return it.next().then((r) => {\n                                if (r.done == true) {\n                                    doneCalled = true;\n                                    done();\n                                }\n                                return r;\n                            }, abort);\n                        },\n                        // We deliberately omit throw/return.\n                    };\n                },\n            } });\n    }, abort);\n}\n/**\n * Create an AbortSignal for Transport implementations. The signal is available\n * in UnaryRequest and StreamingRequest, and is triggered when the call is\n * aborted (via a timeout or explicit cancellation), errored (e.g. when reading\n * an error from the server from the wire), or finished successfully.\n *\n * Transport implementations can pass the signal to HTTP clients to ensure that\n * there are no unused connections leak.\n *\n * Returns a tuple:\n * [0]: The signal, which is also aborted if the optional deadline is reached.\n * [1]: Function to call if the Transport encountered an error.\n * [2]: Function to call if the Transport finished without an error.\n */\nfunction setupSignal(opt) {\n    const { signal, cleanup } = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createDeadlineSignal)(opt.timeoutMs);\n    const controller = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createLinkedAbortController)(opt.signal, signal);\n    return [\n        controller.signal,\n        function abort(reason) {\n            // We peek at the deadline signal because fetch() will throw an error on\n            // abort that discards the signal reason.\n            const e = _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError.from(signal.aborted ? (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.getAbortSignalReason)(signal) : reason);\n            controller.abort(e);\n            cleanup();\n            return Promise.reject(e);\n        },\n        function done() {\n            cleanup();\n            controller.abort();\n        },\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9ydW4tY2FsbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzRDtBQUNIO0FBQ3FEO0FBQzFDO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsa0VBQWlCO0FBQ2xDO0FBQ0EsOENBQThDLGNBQWMsU0FBUyx3REFBUyw2Q0FBNkM7QUFDM0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQixrRUFBaUI7QUFDbEM7QUFDQSw4Q0FBOEMsY0FBYyxTQUFTLGdFQUFpQiw2Q0FBNkM7QUFDbkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSw2Q0FBNkMsVUFBVTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3Qix5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2YsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQkFBa0IsRUFBRSxpRUFBb0I7QUFDcEQsdUJBQXVCLHdFQUEyQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFZLHVCQUF1QixpRUFBb0I7QUFDN0U7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL3J1bi1jYWxsLmpzPzc2MDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGFwcGx5SW50ZXJjZXB0b3JzIH0gZnJvbSBcIi4uL2ludGVyY2VwdG9yLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlRGVhZGxpbmVTaWduYWwsIGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlciwgZ2V0QWJvcnRTaWduYWxSZWFzb24sIH0gZnJvbSBcIi4vc2lnbmFscy5qc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplLCBub3JtYWxpemVJdGVyYWJsZSB9IGZyb20gXCIuL25vcm1hbGl6ZS5qc1wiO1xuLyoqXG4gKiBSdW5zIGEgdW5hcnkgbWV0aG9kIHdpdGggdGhlIGdpdmVuIGludGVyY2VwdG9ycy4gTm90ZSB0aGF0IHRoaXMgZnVuY3Rpb25cbiAqIGlzIG9ubHkgdXNlZCB3aGVuIGltcGxlbWVudGluZyBhIFRyYW5zcG9ydC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1blVuYXJ5Q2FsbChvcHQpIHtcbiAgICBjb25zdCBuZXh0ID0gYXBwbHlJbnRlcmNlcHRvcnMob3B0Lm5leHQsIG9wdC5pbnRlcmNlcHRvcnMpO1xuICAgIGNvbnN0IFtzaWduYWwsIGFib3J0LCBkb25lXSA9IHNldHVwU2lnbmFsKG9wdCk7XG4gICAgY29uc3QgcmVxID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHQucmVxKSwgeyBtZXNzYWdlOiBub3JtYWxpemUob3B0LnJlcS5tZXRob2QuSSwgb3B0LnJlcS5tZXNzYWdlKSwgc2lnbmFsIH0pO1xuICAgIHJldHVybiBuZXh0KHJlcSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9LCBhYm9ydCk7XG59XG4vKipcbiAqIFJ1bnMgYSBzZXJ2ZXItc3RyZWFtaW5nIG1ldGhvZCB3aXRoIHRoZSBnaXZlbiBpbnRlcmNlcHRvcnMuIE5vdGUgdGhhdCB0aGlzXG4gKiBmdW5jdGlvbiBpcyBvbmx5IHVzZWQgd2hlbiBpbXBsZW1lbnRpbmcgYSBUcmFuc3BvcnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBydW5TdHJlYW1pbmdDYWxsKG9wdCkge1xuICAgIGNvbnN0IG5leHQgPSBhcHBseUludGVyY2VwdG9ycyhvcHQubmV4dCwgb3B0LmludGVyY2VwdG9ycyk7XG4gICAgY29uc3QgW3NpZ25hbCwgYWJvcnQsIGRvbmVdID0gc2V0dXBTaWduYWwob3B0KTtcbiAgICBjb25zdCByZXEgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdC5yZXEpLCB7IG1lc3NhZ2U6IG5vcm1hbGl6ZUl0ZXJhYmxlKG9wdC5yZXEubWV0aG9kLkksIG9wdC5yZXEubWVzc2FnZSksIHNpZ25hbCB9KTtcbiAgICBsZXQgZG9uZUNhbGxlZCA9IGZhbHNlO1xuICAgIC8vIENhbGwgcmV0dXJuIG9uIHRoZSByZXF1ZXN0IGl0ZXJhYmxlIHRvIGluZGljYXRlXG4gICAgLy8gdGhhdCB3ZSB3aWxsIG5vIGxvbmdlciBjb25zdW1lIGl0IGFuZCBpdCBzaG91bGRcbiAgICAvLyBjbGVhbnVwIGFueSBhbGxvY2F0ZWQgcmVzb3VyY2VzLlxuICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBjb25zdCBpdCA9IG9wdC5yZXEubWVzc2FnZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgLy8gSWYgdGhlIHNpZ25hbCBpcyBhYm9ydGVkIGR1ZSB0byBhbiBlcnJvciwgd2Ugd2FudCB0byB0aHJvd1xuICAgICAgICAvLyB0aGUgZXJyb3IgdG8gdGhlIHJlcXVlc3QgaXRlcmF0b3IuXG4gICAgICAgIGlmICghZG9uZUNhbGxlZCkge1xuICAgICAgICAgICAgKF9hID0gaXQudGhyb3cpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGl0LCB0aGlzLnJlYXNvbikuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHRocm93IHJldHVybnMgYSBwcm9taXNlLCB3aGljaCB3ZSBkb24ndCBjYXJlIGFib3V0LlxuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gVW5jYXVnaHQgcHJvbWlzZXMgYXJlIHRocm93biBhdCBzb21ldGltZS9zb21ld2hlcmUgYnkgdGhlIGV2ZW50IGxvb3AsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyB0byBlbnN1cmUgZXJyb3IgaXMgY2F1Z2h0IGFuZCBpZ25vcmVkLlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgKF9iID0gaXQucmV0dXJuKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChpdCkuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgLy8gcmV0dXJuIHJldHVybnMgYSBwcm9taXNlLCB3aGljaCB3ZSBkb24ndCBjYXJlIGFib3V0LlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIFVuY2F1Z2h0IHByb21pc2VzIGFyZSB0aHJvd24gYXQgc29tZXRpbWUvc29tZXdoZXJlIGJ5IHRoZSBldmVudCBsb29wLFxuICAgICAgICAgICAgLy8gdGhpcyBpcyB0byBlbnN1cmUgZXJyb3IgaXMgY2F1Z2h0IGFuZCBpZ25vcmVkLlxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gbmV4dChyZXEpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXMpLCB7IG1lc3NhZ2U6IHtcbiAgICAgICAgICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpdCA9IHJlcy5tZXNzYWdlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXQubmV4dCgpLnRoZW4oKHIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIuZG9uZSA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb25lQ2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBhYm9ydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2UgZGVsaWJlcmF0ZWx5IG9taXQgdGhyb3cvcmV0dXJuLlxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IH0pO1xuICAgIH0sIGFib3J0KTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIEFib3J0U2lnbmFsIGZvciBUcmFuc3BvcnQgaW1wbGVtZW50YXRpb25zLiBUaGUgc2lnbmFsIGlzIGF2YWlsYWJsZVxuICogaW4gVW5hcnlSZXF1ZXN0IGFuZCBTdHJlYW1pbmdSZXF1ZXN0LCBhbmQgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIGNhbGwgaXNcbiAqIGFib3J0ZWQgKHZpYSBhIHRpbWVvdXQgb3IgZXhwbGljaXQgY2FuY2VsbGF0aW9uKSwgZXJyb3JlZCAoZS5nLiB3aGVuIHJlYWRpbmdcbiAqIGFuIGVycm9yIGZyb20gdGhlIHNlcnZlciBmcm9tIHRoZSB3aXJlKSwgb3IgZmluaXNoZWQgc3VjY2Vzc2Z1bGx5LlxuICpcbiAqIFRyYW5zcG9ydCBpbXBsZW1lbnRhdGlvbnMgY2FuIHBhc3MgdGhlIHNpZ25hbCB0byBIVFRQIGNsaWVudHMgdG8gZW5zdXJlIHRoYXRcbiAqIHRoZXJlIGFyZSBubyB1bnVzZWQgY29ubmVjdGlvbnMgbGVhay5cbiAqXG4gKiBSZXR1cm5zIGEgdHVwbGU6XG4gKiBbMF06IFRoZSBzaWduYWwsIHdoaWNoIGlzIGFsc28gYWJvcnRlZCBpZiB0aGUgb3B0aW9uYWwgZGVhZGxpbmUgaXMgcmVhY2hlZC5cbiAqIFsxXTogRnVuY3Rpb24gdG8gY2FsbCBpZiB0aGUgVHJhbnNwb3J0IGVuY291bnRlcmVkIGFuIGVycm9yLlxuICogWzJdOiBGdW5jdGlvbiB0byBjYWxsIGlmIHRoZSBUcmFuc3BvcnQgZmluaXNoZWQgd2l0aG91dCBhbiBlcnJvci5cbiAqL1xuZnVuY3Rpb24gc2V0dXBTaWduYWwob3B0KSB7XG4gICAgY29uc3QgeyBzaWduYWwsIGNsZWFudXAgfSA9IGNyZWF0ZURlYWRsaW5lU2lnbmFsKG9wdC50aW1lb3V0TXMpO1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBjcmVhdGVMaW5rZWRBYm9ydENvbnRyb2xsZXIob3B0LnNpZ25hbCwgc2lnbmFsKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBjb250cm9sbGVyLnNpZ25hbCxcbiAgICAgICAgZnVuY3Rpb24gYWJvcnQocmVhc29uKSB7XG4gICAgICAgICAgICAvLyBXZSBwZWVrIGF0IHRoZSBkZWFkbGluZSBzaWduYWwgYmVjYXVzZSBmZXRjaCgpIHdpbGwgdGhyb3cgYW4gZXJyb3Igb25cbiAgICAgICAgICAgIC8vIGFib3J0IHRoYXQgZGlzY2FyZHMgdGhlIHNpZ25hbCByZWFzb24uXG4gICAgICAgICAgICBjb25zdCBlID0gQ29ubmVjdEVycm9yLmZyb20oc2lnbmFsLmFib3J0ZWQgPyBnZXRBYm9ydFNpZ25hbFJlYXNvbihzaWduYWwpIDogcmVhc29uKTtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuYWJvcnQoZSk7XG4gICAgICAgICAgICBjbGVhbnVwKCk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGZ1bmN0aW9uIGRvbmUoKSB7XG4gICAgICAgICAgICBjbGVhbnVwKCk7XG4gICAgICAgICAgICBjb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH0sXG4gICAgXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBinarySerialization: function() { return /* binding */ createBinarySerialization; },\n/* harmony export */   createClientMethodSerializers: function() { return /* binding */ createClientMethodSerializers; },\n/* harmony export */   createJsonSerialization: function() { return /* binding */ createJsonSerialization; },\n/* harmony export */   createMethodSerializationLookup: function() { return /* binding */ createMethodSerializationLookup; },\n/* harmony export */   getJsonOptions: function() { return /* binding */ getJsonOptions; },\n/* harmony export */   limitSerialization: function() { return /* binding */ limitSerialization; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Sets default JSON serialization options for connect-es.\n *\n * With standard protobuf JSON serialization, unknown JSON fields are\n * rejected by default. In connect-es, unknown JSON fields are ignored\n * by default.\n */\nfunction getJsonOptions(options) {\n    var _a;\n    const o = Object.assign({}, options);\n    (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : (o.ignoreUnknownFields = true);\n    return o;\n}\n/**\n * Create an object that provides convenient access to request and response\n * message serialization for a given method.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createMethodSerializationLookup(method, binaryOptions, jsonOptions, limitOptions) {\n    const inputBinary = limitSerialization(createBinarySerialization(method.I, binaryOptions), limitOptions);\n    const inputJson = limitSerialization(createJsonSerialization(method.I, jsonOptions), limitOptions);\n    const outputBinary = limitSerialization(createBinarySerialization(method.O, binaryOptions), limitOptions);\n    const outputJson = limitSerialization(createJsonSerialization(method.O, jsonOptions), limitOptions);\n    return {\n        getI(useBinaryFormat) {\n            return useBinaryFormat ? inputBinary : inputJson;\n        },\n        getO(useBinaryFormat) {\n            return useBinaryFormat ? outputBinary : outputJson;\n        },\n    };\n}\n/**\n * Returns functions to normalize and serialize the input message\n * of an RPC, and to parse the output message of an RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n    const input = useBinaryFormat\n        ? createBinarySerialization(method.I, binaryOptions)\n        : createJsonSerialization(method.I, jsonOptions);\n    const output = useBinaryFormat\n        ? createBinarySerialization(method.O, binaryOptions)\n        : createJsonSerialization(method.O, jsonOptions);\n    return { parse: output.parse, serialize: input.serialize };\n}\n/**\n * Apply I/O limits to a Serialization object, returning a new object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction limitSerialization(serialization, limitOptions) {\n    return {\n        serialize(data) {\n            const bytes = serialization.serialize(data);\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertWriteMaxBytes)(limitOptions.writeMaxBytes, bytes.byteLength);\n            return bytes;\n        },\n        parse(data) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertReadMaxBytes)(limitOptions.readMaxBytes, data.byteLength, true);\n            return serialization.parse(data);\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf binary format.\n */\nfunction createBinarySerialization(messageType, options) {\n    return {\n        parse(data) {\n            try {\n                return messageType.fromBinary(data, options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`parse binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n        serialize(data) {\n            try {\n                return data.toBinary(options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`serialize binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf canonical JSON encoding.\n *\n * By default, unknown fields are ignored.\n */\nfunction createJsonSerialization(messageType, options) {\n    var _a, _b;\n    const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n    const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n    const o = getJsonOptions(options);\n    return {\n        parse(data) {\n            try {\n                const json = textDecoder.decode(data);\n                return messageType.fromJsonString(json, o);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n            }\n        },\n        serialize(data) {\n            try {\n                const json = data.toJsonString(o);\n                return textEncoder.encode(json);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeadlineSignal: function() { return /* binding */ createDeadlineSignal; },\n/* harmony export */   createLinkedAbortController: function() { return /* binding */ createLinkedAbortController; },\n/* harmony export */   getAbortSignalReason: function() { return /* binding */ getAbortSignalReason; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create an AbortController that is automatically aborted if one of the given\n * signals is aborted.\n *\n * For convenience, the linked AbortSignals can be undefined.\n *\n * If the controller or any of the signals is aborted, all event listeners are\n * removed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createLinkedAbortController(...signals) {\n    const controller = new AbortController();\n    const sa = signals.filter((s) => s !== undefined).concat(controller.signal);\n    for (const signal of sa) {\n        if (signal.aborted) {\n            onAbort.apply(signal);\n            break;\n        }\n        signal.addEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n        if (!controller.signal.aborted) {\n            controller.abort(getAbortSignalReason(this));\n        }\n        for (const signal of sa) {\n            signal.removeEventListener(\"abort\", onAbort);\n        }\n    }\n    return controller;\n}\n/**\n * Create a deadline signal. The returned object contains an AbortSignal, but\n * also a cleanup function to stop the timer, which must be called once the\n * calling code is no longer interested in the signal.\n *\n * Ideally, we would simply use AbortSignal.timeout(), but it is not widely\n * available yet.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createDeadlineSignal(timeoutMs) {\n    const controller = new AbortController();\n    const listener = () => {\n        controller.abort(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"the operation timed out\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DeadlineExceeded));\n    };\n    let timeoutId;\n    if (timeoutMs !== undefined) {\n        if (timeoutMs <= 0)\n            listener();\n        else\n            timeoutId = setTimeout(listener, timeoutMs);\n    }\n    return {\n        signal: controller.signal,\n        cleanup: () => clearTimeout(timeoutId),\n    };\n}\n/**\n * Returns the reason why an AbortSignal was aborted. Returns undefined if the\n * signal has not been aborted.\n *\n * The property AbortSignal.reason is not widely available. This function\n * returns an AbortError if the signal is aborted, but reason is undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction getAbortSignalReason(signal) {\n    if (!signal.aborted) {\n        return undefined;\n    }\n    if (signal.reason !== undefined) {\n        return signal.reason;\n    }\n    // AbortSignal.reason is available in Node.js v16, v18, and later,\n    // and in all browsers since early 2022.\n    const e = new Error(\"This operation was aborted\");\n    e.name = \"AbortError\";\n    return e;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zaWduYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QiwyREFBWSw0QkFBNEIsMENBQUk7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zaWduYWxzLmpzPzcwYjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogQ3JlYXRlIGFuIEFib3J0Q29udHJvbGxlciB0aGF0IGlzIGF1dG9tYXRpY2FsbHkgYWJvcnRlZCBpZiBvbmUgb2YgdGhlIGdpdmVuXG4gKiBzaWduYWxzIGlzIGFib3J0ZWQuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB0aGUgbGlua2VkIEFib3J0U2lnbmFscyBjYW4gYmUgdW5kZWZpbmVkLlxuICpcbiAqIElmIHRoZSBjb250cm9sbGVyIG9yIGFueSBvZiB0aGUgc2lnbmFscyBpcyBhYm9ydGVkLCBhbGwgZXZlbnQgbGlzdGVuZXJzIGFyZVxuICogcmVtb3ZlZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlciguLi5zaWduYWxzKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBzYSA9IHNpZ25hbHMuZmlsdGVyKChzKSA9PiBzICE9PSB1bmRlZmluZWQpLmNvbmNhdChjb250cm9sbGVyLnNpZ25hbCk7XG4gICAgZm9yIChjb25zdCBzaWduYWwgb2Ygc2EpIHtcbiAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICBvbkFib3J0LmFwcGx5KHNpZ25hbCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbkFib3J0KCkge1xuICAgICAgICBpZiAoIWNvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuYWJvcnQoZ2V0QWJvcnRTaWduYWxSZWFzb24odGhpcykpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qgc2lnbmFsIG9mIHNhKSB7XG4gICAgICAgICAgICBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb250cm9sbGVyO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBkZWFkbGluZSBzaWduYWwuIFRoZSByZXR1cm5lZCBvYmplY3QgY29udGFpbnMgYW4gQWJvcnRTaWduYWwsIGJ1dFxuICogYWxzbyBhIGNsZWFudXAgZnVuY3Rpb24gdG8gc3RvcCB0aGUgdGltZXIsIHdoaWNoIG11c3QgYmUgY2FsbGVkIG9uY2UgdGhlXG4gKiBjYWxsaW5nIGNvZGUgaXMgbm8gbG9uZ2VyIGludGVyZXN0ZWQgaW4gdGhlIHNpZ25hbC5cbiAqXG4gKiBJZGVhbGx5LCB3ZSB3b3VsZCBzaW1wbHkgdXNlIEFib3J0U2lnbmFsLnRpbWVvdXQoKSwgYnV0IGl0IGlzIG5vdCB3aWRlbHlcbiAqIGF2YWlsYWJsZSB5ZXQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWFkbGluZVNpZ25hbCh0aW1lb3V0TXMpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICBjb250cm9sbGVyLmFib3J0KG5ldyBDb25uZWN0RXJyb3IoXCJ0aGUgb3BlcmF0aW9uIHRpbWVkIG91dFwiLCBDb2RlLkRlYWRsaW5lRXhjZWVkZWQpKTtcbiAgICB9O1xuICAgIGxldCB0aW1lb3V0SWQ7XG4gICAgaWYgKHRpbWVvdXRNcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmICh0aW1lb3V0TXMgPD0gMClcbiAgICAgICAgICAgIGxpc3RlbmVyKCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQobGlzdGVuZXIsIHRpbWVvdXRNcyk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHNpZ25hbDogY29udHJvbGxlci5zaWduYWwsXG4gICAgICAgIGNsZWFudXA6ICgpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0SWQpLFxuICAgIH07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHJlYXNvbiB3aHkgYW4gQWJvcnRTaWduYWwgd2FzIGFib3J0ZWQuIFJldHVybnMgdW5kZWZpbmVkIGlmIHRoZVxuICogc2lnbmFsIGhhcyBub3QgYmVlbiBhYm9ydGVkLlxuICpcbiAqIFRoZSBwcm9wZXJ0eSBBYm9ydFNpZ25hbC5yZWFzb24gaXMgbm90IHdpZGVseSBhdmFpbGFibGUuIFRoaXMgZnVuY3Rpb25cbiAqIHJldHVybnMgYW4gQWJvcnRFcnJvciBpZiB0aGUgc2lnbmFsIGlzIGFib3J0ZWQsIGJ1dCByZWFzb24gaXMgdW5kZWZpbmVkLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWJvcnRTaWduYWxSZWFzb24oc2lnbmFsKSB7XG4gICAgaWYgKCFzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAoc2lnbmFsLnJlYXNvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzaWduYWwucmVhc29uO1xuICAgIH1cbiAgICAvLyBBYm9ydFNpZ25hbC5yZWFzb24gaXMgYXZhaWxhYmxlIGluIE5vZGUuanMgdjE2LCB2MTgsIGFuZCBsYXRlcixcbiAgICAvLyBhbmQgaW4gYWxsIGJyb3dzZXJzIHNpbmNlIGVhcmx5IDIwMjIuXG4gICAgY29uc3QgZSA9IG5ldyBFcnJvcihcIlRoaXMgb3BlcmF0aW9uIHdhcyBhYm9ydGVkXCIpO1xuICAgIGUubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgIHJldHVybiBlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/universal-fetch.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-fetch.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFetchClient: function() { return /* binding */ createFetchClient; },\n/* harmony export */   createFetchHandler: function() { return /* binding */ createFetchHandler; },\n/* harmony export */   universalClientRequestToFetch: function() { return /* binding */ universalClientRequestToFetch; },\n/* harmony export */   universalClientResponseFromFetch: function() { return /* binding */ universalClientResponseFromFetch; },\n/* harmony export */   universalServerRequestFromFetch: function() { return /* binding */ universalServerRequestFromFetch; },\n/* harmony export */   universalServerResponseToFetch: function() { return /* binding */ universalServerResponseToFetch; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a universal client function, a minimal abstraction of an HTTP client,\n * using the given fetch() implementation.\n */\nfunction createFetchClient(fetchFn) {\n    return async function fetchClient(request) {\n        const res = await fetchFn(universalClientRequestToFetch(request));\n        return universalClientResponseFromFetch(res);\n    };\n}\n/**\n * Convert a universal handler function to a fetch handler.\n */\nfunction createFetchHandler(uHandler, options) {\n    async function handleFetch(req) {\n        const uReq = universalServerRequestFromFetch(req, options !== null && options !== void 0 ? options : {});\n        const uRes = await uHandler(uReq);\n        return universalServerResponseToFetch(uRes);\n    }\n    return Object.assign(handleFetch, uHandler);\n}\n/**\n * Convert a universal client request to a fetch request.\n */\nfunction universalClientRequestToFetch(req) {\n    const body = req.body === undefined ? null : iterableToReadableStream(req.body);\n    return new Request(req.url, {\n        method: req.method,\n        headers: req.header,\n        signal: req.signal,\n        body,\n    });\n}\n/**\n * Convert a fetch response to a universal client response.\n */\nfunction universalClientResponseFromFetch(res) {\n    return {\n        status: res.status,\n        header: res.headers,\n        body: iterableFromReadableStream(res.body),\n        trailer: new Headers(),\n    };\n}\n/**\n * Convert a fetch request to a universal server request.\n */\nfunction universalServerRequestFromFetch(req, options) {\n    var _a;\n    return {\n        httpVersion: (_a = options.httpVersion) !== null && _a !== void 0 ? _a : \"\",\n        method: req.method,\n        url: req.url,\n        header: req.headers,\n        body: iterableFromReadableStream(req.body),\n        signal: req.signal,\n    };\n}\n/**\n * Convert a universal server response to a fetch response.\n */\nfunction universalServerResponseToFetch(res) {\n    let body = null;\n    if (res.body !== undefined) {\n        body = iterableToReadableStream(res.body);\n    }\n    return new Response(body, {\n        status: res.status,\n        headers: res.header,\n    });\n}\nfunction iterableToReadableStream(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    return new ReadableStream({\n        async pull(controller) {\n            const r = await it.next();\n            if (r.done === true) {\n                controller.close();\n                return;\n            }\n            controller.enqueue(r.value);\n        },\n        async cancel(reason) {\n            if (it.throw) {\n                try {\n                    await it.throw(reason);\n                }\n                catch (_a) {\n                    // iterator.throw on a generator function rethrows unless the\n                    // body catches and swallows.\n                }\n            }\n        },\n    });\n}\nfunction iterableFromReadableStream(body) {\n    const reader = body === null || body === void 0 ? void 0 : body.getReader();\n    return {\n        [Symbol.asyncIterator]() {\n            return {\n                async next() {\n                    if (reader !== undefined) {\n                        const r = await reader.read();\n                        if (r.done) {\n                            return {\n                                done: true,\n                                value: undefined,\n                            };\n                        }\n                        return r;\n                    }\n                    return {\n                        done: true,\n                        value: undefined,\n                    };\n                },\n                async throw(e) {\n                    if (reader !== undefined) {\n                        await reader.cancel(e);\n                    }\n                    return {\n                        done: true,\n                        value: undefined,\n                    };\n                },\n            };\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwtZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwrR0FBK0c7QUFDL0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvdW5pdmVyc2FsLWZldGNoLmpzPzFhNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQ3JlYXRlIGEgdW5pdmVyc2FsIGNsaWVudCBmdW5jdGlvbiwgYSBtaW5pbWFsIGFic3RyYWN0aW9uIG9mIGFuIEhUVFAgY2xpZW50LFxuICogdXNpbmcgdGhlIGdpdmVuIGZldGNoKCkgaW1wbGVtZW50YXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGZXRjaENsaWVudChmZXRjaEZuKSB7XG4gICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIGZldGNoQ2xpZW50KHJlcXVlc3QpIHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2hGbih1bml2ZXJzYWxDbGllbnRSZXF1ZXN0VG9GZXRjaChyZXF1ZXN0KSk7XG4gICAgICAgIHJldHVybiB1bml2ZXJzYWxDbGllbnRSZXNwb25zZUZyb21GZXRjaChyZXMpO1xuICAgIH07XG59XG4vKipcbiAqIENvbnZlcnQgYSB1bml2ZXJzYWwgaGFuZGxlciBmdW5jdGlvbiB0byBhIGZldGNoIGhhbmRsZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGZXRjaEhhbmRsZXIodUhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgICBhc3luYyBmdW5jdGlvbiBoYW5kbGVGZXRjaChyZXEpIHtcbiAgICAgICAgY29uc3QgdVJlcSA9IHVuaXZlcnNhbFNlcnZlclJlcXVlc3RGcm9tRmV0Y2gocmVxLCBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fSk7XG4gICAgICAgIGNvbnN0IHVSZXMgPSBhd2FpdCB1SGFuZGxlcih1UmVxKTtcbiAgICAgICAgcmV0dXJuIHVuaXZlcnNhbFNlcnZlclJlc3BvbnNlVG9GZXRjaCh1UmVzKTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oaGFuZGxlRmV0Y2gsIHVIYW5kbGVyKTtcbn1cbi8qKlxuICogQ29udmVydCBhIHVuaXZlcnNhbCBjbGllbnQgcmVxdWVzdCB0byBhIGZldGNoIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bml2ZXJzYWxDbGllbnRSZXF1ZXN0VG9GZXRjaChyZXEpIHtcbiAgICBjb25zdCBib2R5ID0gcmVxLmJvZHkgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBpdGVyYWJsZVRvUmVhZGFibGVTdHJlYW0ocmVxLmJvZHkpO1xuICAgIHJldHVybiBuZXcgUmVxdWVzdChyZXEudXJsLCB7XG4gICAgICAgIG1ldGhvZDogcmVxLm1ldGhvZCxcbiAgICAgICAgaGVhZGVyczogcmVxLmhlYWRlcixcbiAgICAgICAgc2lnbmFsOiByZXEuc2lnbmFsLFxuICAgICAgICBib2R5LFxuICAgIH0pO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgZmV0Y2ggcmVzcG9uc2UgdG8gYSB1bml2ZXJzYWwgY2xpZW50IHJlc3BvbnNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5pdmVyc2FsQ2xpZW50UmVzcG9uc2VGcm9tRmV0Y2gocmVzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzLFxuICAgICAgICBoZWFkZXI6IHJlcy5oZWFkZXJzLFxuICAgICAgICBib2R5OiBpdGVyYWJsZUZyb21SZWFkYWJsZVN0cmVhbShyZXMuYm9keSksXG4gICAgICAgIHRyYWlsZXI6IG5ldyBIZWFkZXJzKCksXG4gICAgfTtcbn1cbi8qKlxuICogQ29udmVydCBhIGZldGNoIHJlcXVlc3QgdG8gYSB1bml2ZXJzYWwgc2VydmVyIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bml2ZXJzYWxTZXJ2ZXJSZXF1ZXN0RnJvbUZldGNoKHJlcSwgb3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4ge1xuICAgICAgICBodHRwVmVyc2lvbjogKF9hID0gb3B0aW9ucy5odHRwVmVyc2lvbikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIixcbiAgICAgICAgbWV0aG9kOiByZXEubWV0aG9kLFxuICAgICAgICB1cmw6IHJlcS51cmwsXG4gICAgICAgIGhlYWRlcjogcmVxLmhlYWRlcnMsXG4gICAgICAgIGJvZHk6IGl0ZXJhYmxlRnJvbVJlYWRhYmxlU3RyZWFtKHJlcS5ib2R5KSxcbiAgICAgICAgc2lnbmFsOiByZXEuc2lnbmFsLFxuICAgIH07XG59XG4vKipcbiAqIENvbnZlcnQgYSB1bml2ZXJzYWwgc2VydmVyIHJlc3BvbnNlIHRvIGEgZmV0Y2ggcmVzcG9uc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bml2ZXJzYWxTZXJ2ZXJSZXNwb25zZVRvRmV0Y2gocmVzKSB7XG4gICAgbGV0IGJvZHkgPSBudWxsO1xuICAgIGlmIChyZXMuYm9keSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGJvZHkgPSBpdGVyYWJsZVRvUmVhZGFibGVTdHJlYW0ocmVzLmJvZHkpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKGJvZHksIHtcbiAgICAgICAgc3RhdHVzOiByZXMuc3RhdHVzLFxuICAgICAgICBoZWFkZXJzOiByZXMuaGVhZGVyLFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXRlcmFibGVUb1JlYWRhYmxlU3RyZWFtKGl0ZXJhYmxlKSB7XG4gICAgY29uc3QgaXQgPSBpdGVyYWJsZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgICAgYXN5bmMgcHVsbChjb250cm9sbGVyKSB7XG4gICAgICAgICAgICBjb25zdCByID0gYXdhaXQgaXQubmV4dCgpO1xuICAgICAgICAgICAgaWYgKHIuZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoci52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGNhbmNlbChyZWFzb24pIHtcbiAgICAgICAgICAgIGlmIChpdC50aHJvdykge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IGl0LnRocm93KHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBpdGVyYXRvci50aHJvdyBvbiBhIGdlbmVyYXRvciBmdW5jdGlvbiByZXRocm93cyB1bmxlc3MgdGhlXG4gICAgICAgICAgICAgICAgICAgIC8vIGJvZHkgY2F0Y2hlcyBhbmQgc3dhbGxvd3MuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXRlcmFibGVGcm9tUmVhZGFibGVTdHJlYW0oYm9keSkge1xuICAgIGNvbnN0IHJlYWRlciA9IGJvZHkgPT09IG51bGwgfHwgYm9keSA9PT0gdm9pZCAwID8gdm9pZCAwIDogYm9keS5nZXRSZWFkZXIoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhc3luYyBuZXh0KCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVhZGVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHIgPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHIuZG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFzeW5jIHRocm93KGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlYWRlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCByZWFkZXIuY2FuY2VsKGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/universal-fetch.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniversalHandlerClient: function() { return /* binding */ createUniversalHandlerClient; }\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _async_iterable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./async-iterable.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signals.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * An in-memory UniversalClientFn that can be used to route requests to a ConnectRouter\n * bypassing network calls. Useful for testing and calling in-process services.\n */\nfunction createUniversalHandlerClient(uHandlers) {\n    const handlerMap = new Map();\n    for (const handler of uHandlers) {\n        handlerMap.set(handler.requestPath, handler);\n    }\n    return async (uClientReq) => {\n        var _a, _b, _c;\n        const pathname = new URL(uClientReq.url).pathname;\n        const handler = handlerMap.get(pathname);\n        if (!handler) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`RouterHttpClient: no handler registered for ${pathname}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unimplemented);\n        }\n        const reqSignal = (_a = uClientReq.signal) !== null && _a !== void 0 ? _a : new AbortController().signal;\n        const uServerRes = await raceSignal(reqSignal, handler({\n            body: (_b = uClientReq.body) !== null && _b !== void 0 ? _b : (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([]),\n            httpVersion: \"2.0\",\n            method: uClientReq.method,\n            url: uClientReq.url,\n            header: uClientReq.header,\n            signal: reqSignal,\n        }));\n        const body = (_c = uServerRes.body) !== null && _c !== void 0 ? _c : (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([]);\n        return {\n            body: (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.pipe)(body, (iterable) => {\n                return {\n                    [Symbol.asyncIterator]() {\n                        const it = iterable[Symbol.asyncIterator]();\n                        const w = {\n                            next() {\n                                return raceSignal(reqSignal, it.next());\n                            },\n                        };\n                        if (it.throw !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                            w.throw = (e) => it.throw(e);\n                        }\n                        if (it.return !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                            w.return = (value) => it.return(value);\n                        }\n                        return w;\n                    },\n                };\n            }),\n            header: new Headers(uServerRes.header),\n            status: uServerRes.status,\n            trailer: new Headers(uServerRes.trailer),\n        };\n    };\n}\n/**\n * Wrap a promise, and reject early if the given signal triggers before the\n * promise is settled.\n */\nfunction raceSignal(signal, promise) {\n    let cleanup;\n    const signalPromise = new Promise((_, reject) => {\n        const onAbort = () => reject((0,_signals_js__WEBPACK_IMPORTED_MODULE_3__.getAbortSignalReason)(signal));\n        if (signal.aborted) {\n            return onAbort();\n        }\n        signal.addEventListener(\"abort\", onAbort);\n        cleanup = () => signal.removeEventListener(\"abort\", onAbort);\n    });\n    return Promise.race([signalPromise, promise]).finally(cleanup);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwtaGFuZGxlci1jbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNpQjtBQUNhO0FBQ1o7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxnREFBZ0QsU0FBUyxHQUFHLDBDQUFJO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSx1RUFBbUI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCw2RUFBNkUsdUVBQW1CO0FBQ2hHO0FBQ0Esa0JBQWtCLHdEQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxpRUFBb0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL3VuaXZlcnNhbC1oYW5kbGVyLWNsaWVudC5qcz9lNzFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVBc3luY0l0ZXJhYmxlLCBwaXBlIH0gZnJvbSBcIi4vYXN5bmMtaXRlcmFibGUuanNcIjtcbmltcG9ydCB7IGdldEFib3J0U2lnbmFsUmVhc29uIH0gZnJvbSBcIi4vc2lnbmFscy5qc1wiO1xuLyoqXG4gKiBBbiBpbi1tZW1vcnkgVW5pdmVyc2FsQ2xpZW50Rm4gdGhhdCBjYW4gYmUgdXNlZCB0byByb3V0ZSByZXF1ZXN0cyB0byBhIENvbm5lY3RSb3V0ZXJcbiAqIGJ5cGFzc2luZyBuZXR3b3JrIGNhbGxzLiBVc2VmdWwgZm9yIHRlc3RpbmcgYW5kIGNhbGxpbmcgaW4tcHJvY2VzcyBzZXJ2aWNlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuaXZlcnNhbEhhbmRsZXJDbGllbnQodUhhbmRsZXJzKSB7XG4gICAgY29uc3QgaGFuZGxlck1hcCA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IGhhbmRsZXIgb2YgdUhhbmRsZXJzKSB7XG4gICAgICAgIGhhbmRsZXJNYXAuc2V0KGhhbmRsZXIucmVxdWVzdFBhdGgsIGhhbmRsZXIpO1xuICAgIH1cbiAgICByZXR1cm4gYXN5bmMgKHVDbGllbnRSZXEpID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgIGNvbnN0IHBhdGhuYW1lID0gbmV3IFVSTCh1Q2xpZW50UmVxLnVybCkucGF0aG5hbWU7XG4gICAgICAgIGNvbnN0IGhhbmRsZXIgPSBoYW5kbGVyTWFwLmdldChwYXRobmFtZSk7XG4gICAgICAgIGlmICghaGFuZGxlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgUm91dGVySHR0cENsaWVudDogbm8gaGFuZGxlciByZWdpc3RlcmVkIGZvciAke3BhdGhuYW1lfWAsIENvZGUuVW5pbXBsZW1lbnRlZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVxU2lnbmFsID0gKF9hID0gdUNsaWVudFJlcS5zaWduYWwpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBBYm9ydENvbnRyb2xsZXIoKS5zaWduYWw7XG4gICAgICAgIGNvbnN0IHVTZXJ2ZXJSZXMgPSBhd2FpdCByYWNlU2lnbmFsKHJlcVNpZ25hbCwgaGFuZGxlcih7XG4gICAgICAgICAgICBib2R5OiAoX2IgPSB1Q2xpZW50UmVxLmJvZHkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGNyZWF0ZUFzeW5jSXRlcmFibGUoW10pLFxuICAgICAgICAgICAgaHR0cFZlcnNpb246IFwiMi4wXCIsXG4gICAgICAgICAgICBtZXRob2Q6IHVDbGllbnRSZXEubWV0aG9kLFxuICAgICAgICAgICAgdXJsOiB1Q2xpZW50UmVxLnVybCxcbiAgICAgICAgICAgIGhlYWRlcjogdUNsaWVudFJlcS5oZWFkZXIsXG4gICAgICAgICAgICBzaWduYWw6IHJlcVNpZ25hbCxcbiAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCBib2R5ID0gKF9jID0gdVNlcnZlclJlcy5ib2R5KSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBjcmVhdGVBc3luY0l0ZXJhYmxlKFtdKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHk6IHBpcGUoYm9keSwgKGl0ZXJhYmxlKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ID0gaXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB3ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByYWNlU2lnbmFsKHJlcVNpZ25hbCwgaXQubmV4dCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdC50aHJvdyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24gLS0gY2FuJ3QgaGFuZGxlIG11dGF0ZWQgb2JqZWN0IHNlbnNpYmx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdy50aHJvdyA9IChlKSA9PiBpdC50aHJvdyhlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdC5yZXR1cm4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uLEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgLS0gY2FuJ3QgaGFuZGxlIG11dGF0ZWQgb2JqZWN0IHNlbnNpYmx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdy5yZXR1cm4gPSAodmFsdWUpID0+IGl0LnJldHVybih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdztcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBoZWFkZXI6IG5ldyBIZWFkZXJzKHVTZXJ2ZXJSZXMuaGVhZGVyKSxcbiAgICAgICAgICAgIHN0YXR1czogdVNlcnZlclJlcy5zdGF0dXMsXG4gICAgICAgICAgICB0cmFpbGVyOiBuZXcgSGVhZGVycyh1U2VydmVyUmVzLnRyYWlsZXIpLFxuICAgICAgICB9O1xuICAgIH07XG59XG4vKipcbiAqIFdyYXAgYSBwcm9taXNlLCBhbmQgcmVqZWN0IGVhcmx5IGlmIHRoZSBnaXZlbiBzaWduYWwgdHJpZ2dlcnMgYmVmb3JlIHRoZVxuICogcHJvbWlzZSBpcyBzZXR0bGVkLlxuICovXG5mdW5jdGlvbiByYWNlU2lnbmFsKHNpZ25hbCwgcHJvbWlzZSkge1xuICAgIGxldCBjbGVhbnVwO1xuICAgIGNvbnN0IHNpZ25hbFByb21pc2UgPSBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IG9uQWJvcnQgPSAoKSA9PiByZWplY3QoZ2V0QWJvcnRTaWduYWxSZWFzb24oc2lnbmFsKSk7XG4gICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgcmV0dXJuIG9uQWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgICAgICBjbGVhbnVwID0gKCkgPT4gc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gUHJvbWlzZS5yYWNlKFtzaWduYWxQcm9taXNlLCBwcm9taXNlXSkuZmluYWxseShjbGVhbnVwKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniversalMethodHandler: function() { return /* binding */ createUniversalMethodHandler; },\n/* harmony export */   createUniversalServiceHandlers: function() { return /* binding */ createUniversalServiceHandlers; },\n/* harmony export */   negotiateProtocol: function() { return /* binding */ negotiateProtocol; },\n/* harmony export */   validateUniversalHandlerOptions: function() { return /* binding */ validateUniversalHandlerOptions; }\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/index.js\");\n/* harmony import */ var _universal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./universal.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./content-type-matcher.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * Note that this function does not set default values for `acceptCompression`.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateUniversalHandlerOptions(opt) {\n    var _a, _b, _c;\n    opt !== null && opt !== void 0 ? opt : (opt = {});\n    const acceptCompression = opt.acceptCompression\n        ? [...opt.acceptCompression]\n        : [];\n    const requireConnectProtocolHeader = (_a = opt.requireConnectProtocolHeader) !== null && _a !== void 0 ? _a : false;\n    const maxTimeoutMs = (_b = opt.maxTimeoutMs) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER;\n    return Object.assign(Object.assign({ acceptCompression }, (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.validateReadWriteMaxBytes)(opt.readMaxBytes, opt.writeMaxBytes, opt.compressMinBytes)), { jsonOptions: opt.jsonOptions, binaryOptions: opt.binaryOptions, maxTimeoutMs, shutdownSignal: opt.shutdownSignal, requireConnectProtocolHeader, interceptors: (_c = opt.interceptors) !== null && _c !== void 0 ? _c : [] });\n}\n/**\n * For the given service implementation, return a universal handler for each\n * RPC. The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalServiceHandlers(spec, protocols) {\n    return Object.entries(spec.methods).map(([, implSpec]) => createUniversalMethodHandler(implSpec, protocols));\n}\n/**\n * Return a universal handler for the given RPC implementation.\n * The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalMethodHandler(spec, protocols) {\n    return negotiateProtocol(protocols.map((f) => f(spec)));\n}\n/**\n * Create a universal handler that negotiates the protocol.\n *\n * This functions takes one or more handlers - all for the same RPC, but for\n * different protocols - and returns a single handler that looks at the\n * Content-Type header and the HTTP verb of the incoming request to select\n * the appropriate protocol-specific handler.\n *\n * Raises an error if no protocol handlers were provided, or if they do not\n * handle exactly the same RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction negotiateProtocol(protocolHandlers) {\n    if (protocolHandlers.length == 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"at least one protocol is required\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    const service = protocolHandlers[0].service;\n    const method = protocolHandlers[0].method;\n    const requestPath = protocolHandlers[0].requestPath;\n    if (protocolHandlers.some((h) => h.service !== service || h.method !== method)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different RPCs\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    if (protocolHandlers.some((h) => h.requestPath !== requestPath)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different requestPaths\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    async function protocolNegotiatingHandler(request) {\n        var _a;\n        if (method.kind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.BiDiStreaming &&\n            request.httpVersion.startsWith(\"1.\")) {\n            return Object.assign(Object.assign({}, _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseVersionNotSupported), { \n                // Clients coded to expect full-duplex connections may hang if they've\n                // mistakenly negotiated HTTP/1.1. To unblock them, we must close the\n                // underlying TCP connection.\n                header: new Headers({ Connection: \"close\" }) });\n        }\n        const contentType = (_a = request.header.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n        const matchingMethod = protocolHandlers.filter((h) => h.allowedMethods.includes(request.method));\n        if (matchingMethod.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseMethodNotAllowed;\n        }\n        // If Content-Type is unset but only one handler matches, use it.\n        if (matchingMethod.length == 1 && contentType === \"\") {\n            const onlyMatch = matchingMethod[0];\n            return onlyMatch(request);\n        }\n        const matchingContentTypes = matchingMethod.filter((h) => h.supportedContentType(contentType));\n        if (matchingContentTypes.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseUnsupportedMediaType;\n        }\n        const firstMatch = matchingContentTypes[0];\n        return firstMatch(request);\n    }\n    return Object.assign(protocolNegotiatingHandler, {\n        service,\n        method,\n        requestPath,\n        supportedContentType: (0,_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(...protocolHandlers.map((h) => h.supportedContentType)),\n        protocolNames: protocolHandlers\n            .flatMap((h) => h.protocolNames)\n            .filter((value, index, array) => array.indexOf(value) === index),\n        allowedMethods: protocolHandlers\n            .flatMap((h) => h.allowedMethods)\n            .filter((value, index, array) => array.indexOf(value) === index),\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertByteStreamRequest: function() { return /* binding */ assertByteStreamRequest; },\n/* harmony export */   uResponseMethodNotAllowed: function() { return /* binding */ uResponseMethodNotAllowed; },\n/* harmony export */   uResponseNotFound: function() { return /* binding */ uResponseNotFound; },\n/* harmony export */   uResponseOk: function() { return /* binding */ uResponseOk; },\n/* harmony export */   uResponseUnsupportedMediaType: function() { return /* binding */ uResponseUnsupportedMediaType; },\n/* harmony export */   uResponseVersionNotSupported: function() { return /* binding */ uResponseVersionNotSupported; }\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that the given UniversalServerRequest has a byte stream body, not\n * a JSON value.\n *\n * We accept a JSON object or a byte stream in server requests.\n * In practice, only Connect unary handlers will receive a parse\n * JSON object. Other call-sites can use this assertion to narrow\n * the union type. A failure in such a call-sites indicates that\n * the contract between a server framework and the connect-node \\\n * handler is broken.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertByteStreamRequest(req) {\n    if (typeof req.body == \"object\" &&\n        req.body !== null &&\n        Symbol.asyncIterator in req.body) {\n        return;\n    }\n    throw new Error(\"byte stream required, but received JSON\");\n}\n/**\n * HTTP 200 OK\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseOk = {\n    status: 200,\n};\n/**\n * HTTP 404 Not Found\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseNotFound = {\n    status: 404,\n};\n/**\n * HTTP 415 Unsupported Media Type\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseUnsupportedMediaType = {\n    status: 415,\n};\n/**\n * HTTP 405 Method Not Allowed\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseMethodNotAllowed = {\n    status: 405,\n};\n/**\n * HTTP 505 Version Not Supported\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseVersionNotSupported = {\n    status: 505,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwuanM/MjI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBBc3NlcnQgdGhhdCB0aGUgZ2l2ZW4gVW5pdmVyc2FsU2VydmVyUmVxdWVzdCBoYXMgYSBieXRlIHN0cmVhbSBib2R5LCBub3RcbiAqIGEgSlNPTiB2YWx1ZS5cbiAqXG4gKiBXZSBhY2NlcHQgYSBKU09OIG9iamVjdCBvciBhIGJ5dGUgc3RyZWFtIGluIHNlcnZlciByZXF1ZXN0cy5cbiAqIEluIHByYWN0aWNlLCBvbmx5IENvbm5lY3QgdW5hcnkgaGFuZGxlcnMgd2lsbCByZWNlaXZlIGEgcGFyc2VcbiAqIEpTT04gb2JqZWN0LiBPdGhlciBjYWxsLXNpdGVzIGNhbiB1c2UgdGhpcyBhc3NlcnRpb24gdG8gbmFycm93XG4gKiB0aGUgdW5pb24gdHlwZS4gQSBmYWlsdXJlIGluIHN1Y2ggYSBjYWxsLXNpdGVzIGluZGljYXRlcyB0aGF0XG4gKiB0aGUgY29udHJhY3QgYmV0d2VlbiBhIHNlcnZlciBmcmFtZXdvcmsgYW5kIHRoZSBjb25uZWN0LW5vZGUgXFxcbiAqIGhhbmRsZXIgaXMgYnJva2VuLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Qnl0ZVN0cmVhbVJlcXVlc3QocmVxKSB7XG4gICAgaWYgKHR5cGVvZiByZXEuYm9keSA9PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHJlcS5ib2R5ICE9PSBudWxsICYmXG4gICAgICAgIFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIHJlcS5ib2R5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYnl0ZSBzdHJlYW0gcmVxdWlyZWQsIGJ1dCByZWNlaXZlZCBKU09OXCIpO1xufVxuLyoqXG4gKiBIVFRQIDIwMCBPS1xuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgdVJlc3BvbnNlT2sgPSB7XG4gICAgc3RhdHVzOiAyMDAsXG59O1xuLyoqXG4gKiBIVFRQIDQwNCBOb3QgRm91bmRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZU5vdEZvdW5kID0ge1xuICAgIHN0YXR1czogNDA0LFxufTtcbi8qKlxuICogSFRUUCA0MTUgVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZVxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgdVJlc3BvbnNlVW5zdXBwb3J0ZWRNZWRpYVR5cGUgPSB7XG4gICAgc3RhdHVzOiA0MTUsXG59O1xuLyoqXG4gKiBIVFRQIDQwNSBNZXRob2QgTm90IEFsbG93ZWRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZU1ldGhvZE5vdEFsbG93ZWQgPSB7XG4gICAgc3RhdHVzOiA0MDUsXG59O1xuLyoqXG4gKiBIVFRQIDUwNSBWZXJzaW9uIE5vdCBTdXBwb3J0ZWRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZVZlcnNpb25Ob3RTdXBwb3J0ZWQgPSB7XG4gICAgc3RhdHVzOiA1MDUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/router-transport.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/router-transport.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRouterTransport: function() { return /* binding */ createRouterTransport; }\n/* harmony export */ });\n/* harmony import */ var _protocol_connect_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-connect/transport.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\");\n/* harmony import */ var _protocol_universal_handler_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol/universal-handler-client.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router.js */ \"./node_modules/@connectrpc/connect/dist/esm/router.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Creates a Transport that routes requests to the configured router. Useful for testing\n * and calling services running in the same process.\n *\n * This can be used to test both client logic by using this to stub/mock the backend,\n * and to test server logic by using this to run without needing to spin up a server.\n */\nfunction createRouterTransport(routes, options) {\n    var _a, _b;\n    const router = (0,_router_js__WEBPACK_IMPORTED_MODULE_0__.createConnectRouter)(Object.assign(Object.assign({}, ((_a = options === null || options === void 0 ? void 0 : options.router) !== null && _a !== void 0 ? _a : {})), { connect: true }));\n    routes(router);\n    return (0,_protocol_connect_transport_js__WEBPACK_IMPORTED_MODULE_1__.createTransport)(Object.assign({ httpClient: (0,_protocol_universal_handler_client_js__WEBPACK_IMPORTED_MODULE_2__.createUniversalHandlerClient)(router.handlers), baseUrl: \"https://in-memory\", useBinaryFormat: true, interceptors: [], acceptCompression: [], sendCompression: null, compressMinBytes: Number.MAX_SAFE_INTEGER, readMaxBytes: Number.MAX_SAFE_INTEGER, writeMaxBytes: Number.MAX_SAFE_INTEGER }, ((_b = options === null || options === void 0 ? void 0 : options.transport) !== null && _b !== void 0 ? _b : {})));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXItdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRTtBQUNvQjtBQUNwQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIsK0RBQW1CLCtCQUErQiw4R0FBOEcsTUFBTSxlQUFlO0FBQ3hNO0FBQ0EsV0FBVywrRUFBZSxpQkFBaUIsWUFBWSxtR0FBNEIsa1FBQWtRLGlIQUFpSDtBQUN0YyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXItdHJhbnNwb3J0LmpzP2FjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gXCIuL3Byb3RvY29sLWNvbm5lY3QvdHJhbnNwb3J0LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVVbml2ZXJzYWxIYW5kbGVyQ2xpZW50IH0gZnJvbSBcIi4vcHJvdG9jb2wvdW5pdmVyc2FsLWhhbmRsZXItY2xpZW50LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVDb25uZWN0Um91dGVyIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG4vKipcbiAqIENyZWF0ZXMgYSBUcmFuc3BvcnQgdGhhdCByb3V0ZXMgcmVxdWVzdHMgdG8gdGhlIGNvbmZpZ3VyZWQgcm91dGVyLiBVc2VmdWwgZm9yIHRlc3RpbmdcbiAqIGFuZCBjYWxsaW5nIHNlcnZpY2VzIHJ1bm5pbmcgaW4gdGhlIHNhbWUgcHJvY2Vzcy5cbiAqXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIHRlc3QgYm90aCBjbGllbnQgbG9naWMgYnkgdXNpbmcgdGhpcyB0byBzdHViL21vY2sgdGhlIGJhY2tlbmQsXG4gKiBhbmQgdG8gdGVzdCBzZXJ2ZXIgbG9naWMgYnkgdXNpbmcgdGhpcyB0byBydW4gd2l0aG91dCBuZWVkaW5nIHRvIHNwaW4gdXAgYSBzZXJ2ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb3V0ZXJUcmFuc3BvcnQocm91dGVzLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCByb3V0ZXIgPSBjcmVhdGVDb25uZWN0Um91dGVyKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgKChfYSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5yb3V0ZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9KSksIHsgY29ubmVjdDogdHJ1ZSB9KSk7XG4gICAgcm91dGVzKHJvdXRlcik7XG4gICAgcmV0dXJuIGNyZWF0ZVRyYW5zcG9ydChPYmplY3QuYXNzaWduKHsgaHR0cENsaWVudDogY3JlYXRlVW5pdmVyc2FsSGFuZGxlckNsaWVudChyb3V0ZXIuaGFuZGxlcnMpLCBiYXNlVXJsOiBcImh0dHBzOi8vaW4tbWVtb3J5XCIsIHVzZUJpbmFyeUZvcm1hdDogdHJ1ZSwgaW50ZXJjZXB0b3JzOiBbXSwgYWNjZXB0Q29tcHJlc3Npb246IFtdLCBzZW5kQ29tcHJlc3Npb246IG51bGwsIGNvbXByZXNzTWluQnl0ZXM6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCByZWFkTWF4Qnl0ZXM6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCB3cml0ZU1heEJ5dGVzOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB9LCAoKF9iID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRyYW5zcG9ydCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDoge30pKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/router-transport.js\n"));

/***/ }),

/***/ "./node_modules/@connectrpc/connect/dist/esm/router.js":
/*!*************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/router.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectRouter: function() { return /* binding */ createConnectRouter; }\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connect-error.js */ \"./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./code.js */ \"./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./implementation.js */ \"./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./protocol-grpc-web/handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\");\n/* harmony import */ var _protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol-grpc/handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\");\n/* harmony import */ var _protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocol-connect/handler-factory.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/universal-handler.js */ \"./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Create a new ConnectRouter.\n */\nfunction createConnectRouter(routerOptions) {\n    const base = whichProtocols(routerOptions);\n    const handlers = [];\n    return {\n        handlers,\n        service(service, implementation, options) {\n            const { protocols } = whichProtocols(options, base);\n            handlers.push(...(0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalServiceHandlers)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createServiceImplSpec)(service, implementation), protocols));\n            return this;\n        },\n        rpc(serviceOrMethod, methodOrImpl, implementationOrOptions, options) {\n            let service;\n            let method;\n            let impl;\n            let opt;\n            if (\"typeName\" in serviceOrMethod) {\n                service = serviceOrMethod;\n                method = methodOrImpl;\n                impl = implementationOrOptions;\n                opt = options;\n            }\n            else {\n                service = Object.assign(Object.assign({}, serviceOrMethod.service), { methods: {} });\n                method = serviceOrMethod;\n                impl = methodOrImpl;\n                opt = implementationOrOptions;\n            }\n            const { protocols } = whichProtocols(opt, base);\n            handlers.push((0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalMethodHandler)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createMethodImplSpec)(service, method, impl), protocols));\n            return this;\n        },\n    };\n}\nfunction whichProtocols(options, base) {\n    if (base && !options) {\n        return base;\n    }\n    const opt = base\n        ? Object.assign(Object.assign({}, (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(base.options)), options) : Object.assign(Object.assign({}, options), (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options !== null && options !== void 0 ? options : {}));\n    const protocols = [];\n    if ((options === null || options === void 0 ? void 0 : options.grpc) !== false) {\n        protocols.push((0,_protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.grpcWeb) !== false) {\n        protocols.push((0,_protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.connect) !== false) {\n        protocols.push((0,_protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__.createHandlerFactory)(opt));\n    }\n    if (protocols.length === 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_5__.ConnectError(\"cannot create handler, all protocols are disabled\", _code_js__WEBPACK_IMPORTED_MODULE_6__.Code.InvalidArgument);\n    }\n    return {\n        options: opt,\n        protocols,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNqQjtBQUNrRDtBQUNvQjtBQUNQO0FBQ007QUFDMkM7QUFDako7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEMsNkJBQTZCLDhGQUE4QixDQUFDLHlFQUFxQjtBQUNqRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsOEJBQThCLGFBQWE7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQywwQkFBMEIsNEZBQTRCLENBQUMsd0VBQW9CO0FBQzNFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLEVBQUUsK0ZBQStCLDBEQUEwRCxZQUFZLCtGQUErQixzREFBc0Q7QUFDcE87QUFDQTtBQUNBLHVCQUF1Qix1RkFBa0I7QUFDekM7QUFDQTtBQUNBLHVCQUF1QiwyRkFBcUI7QUFDNUM7QUFDQTtBQUNBLHVCQUF1QiwwRkFBcUI7QUFDNUM7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxzREFBc0QsMENBQUk7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3JvdXRlci5qcz9hMmU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlTWV0aG9kSW1wbFNwZWMsIGNyZWF0ZVNlcnZpY2VJbXBsU3BlYywgfSBmcm9tIFwiLi9pbXBsZW1lbnRhdGlvbi5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlSGFuZGxlckZhY3RvcnkgYXMgaGFuZGxlckZhY3RvcnlHcnBjV2ViIH0gZnJvbSBcIi4vcHJvdG9jb2wtZ3JwYy13ZWIvaGFuZGxlci1mYWN0b3J5LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVIYW5kbGVyRmFjdG9yeSBhcyBoYW5kbGVyRmFjdG9yeUdycGMgfSBmcm9tIFwiLi9wcm90b2NvbC1ncnBjL2hhbmRsZXItZmFjdG9yeS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlSGFuZGxlckZhY3RvcnkgYXMgaGFuZGxlckZhY3RvcnlDb25uZWN0IH0gZnJvbSBcIi4vcHJvdG9jb2wtY29ubmVjdC9oYW5kbGVyLWZhY3RvcnkuanNcIjtcbmltcG9ydCB7IGNyZWF0ZVVuaXZlcnNhbE1ldGhvZEhhbmRsZXIsIGNyZWF0ZVVuaXZlcnNhbFNlcnZpY2VIYW5kbGVycywgdmFsaWRhdGVVbml2ZXJzYWxIYW5kbGVyT3B0aW9ucywgfSBmcm9tIFwiLi9wcm90b2NvbC91bml2ZXJzYWwtaGFuZGxlci5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgQ29ubmVjdFJvdXRlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3RSb3V0ZXIocm91dGVyT3B0aW9ucykge1xuICAgIGNvbnN0IGJhc2UgPSB3aGljaFByb3RvY29scyhyb3V0ZXJPcHRpb25zKTtcbiAgICBjb25zdCBoYW5kbGVycyA9IFtdO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhhbmRsZXJzLFxuICAgICAgICBzZXJ2aWNlKHNlcnZpY2UsIGltcGxlbWVudGF0aW9uLCBvcHRpb25zKSB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3RvY29scyB9ID0gd2hpY2hQcm90b2NvbHMob3B0aW9ucywgYmFzZSk7XG4gICAgICAgICAgICBoYW5kbGVycy5wdXNoKC4uLmNyZWF0ZVVuaXZlcnNhbFNlcnZpY2VIYW5kbGVycyhjcmVhdGVTZXJ2aWNlSW1wbFNwZWMoc2VydmljZSwgaW1wbGVtZW50YXRpb24pLCBwcm90b2NvbHMpKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBycGMoc2VydmljZU9yTWV0aG9kLCBtZXRob2RPckltcGwsIGltcGxlbWVudGF0aW9uT3JPcHRpb25zLCBvcHRpb25zKSB7XG4gICAgICAgICAgICBsZXQgc2VydmljZTtcbiAgICAgICAgICAgIGxldCBtZXRob2Q7XG4gICAgICAgICAgICBsZXQgaW1wbDtcbiAgICAgICAgICAgIGxldCBvcHQ7XG4gICAgICAgICAgICBpZiAoXCJ0eXBlTmFtZVwiIGluIHNlcnZpY2VPck1ldGhvZCkge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgPSBzZXJ2aWNlT3JNZXRob2Q7XG4gICAgICAgICAgICAgICAgbWV0aG9kID0gbWV0aG9kT3JJbXBsO1xuICAgICAgICAgICAgICAgIGltcGwgPSBpbXBsZW1lbnRhdGlvbk9yT3B0aW9ucztcbiAgICAgICAgICAgICAgICBvcHQgPSBvcHRpb25zO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc2VydmljZU9yTWV0aG9kLnNlcnZpY2UpLCB7IG1ldGhvZHM6IHt9IH0pO1xuICAgICAgICAgICAgICAgIG1ldGhvZCA9IHNlcnZpY2VPck1ldGhvZDtcbiAgICAgICAgICAgICAgICBpbXBsID0gbWV0aG9kT3JJbXBsO1xuICAgICAgICAgICAgICAgIG9wdCA9IGltcGxlbWVudGF0aW9uT3JPcHRpb25zO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgeyBwcm90b2NvbHMgfSA9IHdoaWNoUHJvdG9jb2xzKG9wdCwgYmFzZSk7XG4gICAgICAgICAgICBoYW5kbGVycy5wdXNoKGNyZWF0ZVVuaXZlcnNhbE1ldGhvZEhhbmRsZXIoY3JlYXRlTWV0aG9kSW1wbFNwZWMoc2VydmljZSwgbWV0aG9kLCBpbXBsKSwgcHJvdG9jb2xzKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZnVuY3Rpb24gd2hpY2hQcm90b2NvbHMob3B0aW9ucywgYmFzZSkge1xuICAgIGlmIChiYXNlICYmICFvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBiYXNlO1xuICAgIH1cbiAgICBjb25zdCBvcHQgPSBiYXNlXG4gICAgICAgID8gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB2YWxpZGF0ZVVuaXZlcnNhbEhhbmRsZXJPcHRpb25zKGJhc2Uub3B0aW9ucykpLCBvcHRpb25zKSA6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHZhbGlkYXRlVW5pdmVyc2FsSGFuZGxlck9wdGlvbnMob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDoge30pKTtcbiAgICBjb25zdCBwcm90b2NvbHMgPSBbXTtcbiAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ncnBjKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgcHJvdG9jb2xzLnB1c2goaGFuZGxlckZhY3RvcnlHcnBjKG9wdCkpO1xuICAgIH1cbiAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ncnBjV2ViKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgcHJvdG9jb2xzLnB1c2goaGFuZGxlckZhY3RvcnlHcnBjV2ViKG9wdCkpO1xuICAgIH1cbiAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5jb25uZWN0KSAhPT0gZmFsc2UpIHtcbiAgICAgICAgcHJvdG9jb2xzLnB1c2goaGFuZGxlckZhY3RvcnlDb25uZWN0KG9wdCkpO1xuICAgIH1cbiAgICBpZiAocHJvdG9jb2xzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKFwiY2Fubm90IGNyZWF0ZSBoYW5kbGVyLCBhbGwgcHJvdG9jb2xzIGFyZSBkaXNhYmxlZFwiLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG9wdGlvbnM6IG9wdCxcbiAgICAgICAgcHJvdG9jb2xzLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@connectrpc/connect/dist/esm/router.js\n"));

/***/ })

});